// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Documents/Document.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Documents/Document.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Documents {

namespace {

const ::google::protobuf::Descriptor* Document_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Document_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResolutionStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResolutionStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecipientReceiptMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecipientReceiptMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfirmationMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfirmationMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* AmendmentRequestMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AmendmentRequestMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* Origin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Origin_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ResolutionStatusType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RevocationStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RoamingNotificationStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SenderSignatureStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ProxySignatureStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* GeneralReceiptStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* RecipientResponseStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Documents_2fDocument_2eproto() {
  protobuf_AddDesc_Documents_2fDocument_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Documents/Document.proto");
  GOOGLE_CHECK(file != NULL);
  Document_descriptor_ = file->message_type(0);
  static const int Document_offsets_[70] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, indexkey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, messageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, creationtimestampticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, counteragentboxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, documenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, initialdocumentids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, subordinatedocumentids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, documentdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, documentnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, nonformalizeddocumentmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, invoicemetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, trustconnectionrequestmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, torg12metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, invoicerevisionmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, invoicecorrectionmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, invoicecorrectionrevisionmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, acceptancecertificatemetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, proformainvoicemetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, xmltorg12metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, xmlacceptancecertificatemetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, isdeleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, departmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, istest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, fromdepartmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, todepartmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, pricelistmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, customdocumentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, resolutionstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, revocationstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, sendtimestampticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, deliverytimestampticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, forwarddocumentevents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, reconciliationactmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, contractmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, torg13metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, servicedetailsmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, roamingnotificationstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, hascustomprintform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, customdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, packetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, documentdirection_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, lastmodificationtimestampticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, isencryptedcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, sendersignaturestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, supplementaryagreementmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, isread_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, roamingnotificationstatusdescription_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, packetislocked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, pricelistagreementmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, certificateregistrymetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, universaltransferdocumentmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, universaltransferdocumentrevisionmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, universalcorrectiondocumentmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, universalcorrectiondocumentrevisionmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, resolutionrouteid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, attachmentversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, proxysignaturestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, typenamedid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, workflowid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, recipientreceiptmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, confirmationmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, recipientresponsestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, amendmentrequestmetadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, origin_),
  };
  Document_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Document_descriptor_,
      Document::default_instance_,
      Document_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Document, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Document));
  ResolutionStatus_descriptor_ = file->message_type(1);
  static const int ResolutionStatus_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolutionStatus, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolutionStatus, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolutionStatus, authoruserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolutionStatus, authorfio_),
  };
  ResolutionStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResolutionStatus_descriptor_,
      ResolutionStatus::default_instance_,
      ResolutionStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolutionStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResolutionStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResolutionStatus));
  RecipientReceiptMetadata_descriptor_ = file->message_type(2);
  static const int RecipientReceiptMetadata_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecipientReceiptMetadata, receiptstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecipientReceiptMetadata, confirmationmetadata_),
  };
  RecipientReceiptMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecipientReceiptMetadata_descriptor_,
      RecipientReceiptMetadata::default_instance_,
      RecipientReceiptMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecipientReceiptMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecipientReceiptMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecipientReceiptMetadata));
  ConfirmationMetadata_descriptor_ = file->message_type(3);
  static const int ConfirmationMetadata_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmationMetadata, receiptstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmationMetadata, datetimeticks_),
  };
  ConfirmationMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConfirmationMetadata_descriptor_,
      ConfirmationMetadata::default_instance_,
      ConfirmationMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmationMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmationMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConfirmationMetadata));
  AmendmentRequestMetadata_descriptor_ = file->message_type(4);
  static const int AmendmentRequestMetadata_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmendmentRequestMetadata, amendmentflags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmendmentRequestMetadata, receiptstatus_),
  };
  AmendmentRequestMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AmendmentRequestMetadata_descriptor_,
      AmendmentRequestMetadata::default_instance_,
      AmendmentRequestMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmendmentRequestMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AmendmentRequestMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AmendmentRequestMetadata));
  Origin_descriptor_ = file->message_type(5);
  static const int Origin_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Origin, messagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Origin, messageid_),
  };
  Origin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Origin_descriptor_,
      Origin::default_instance_,
      Origin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Origin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Origin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Origin));
  ResolutionStatusType_descriptor_ = file->enum_type(0);
  RevocationStatus_descriptor_ = file->enum_type(1);
  RoamingNotificationStatus_descriptor_ = file->enum_type(2);
  SenderSignatureStatus_descriptor_ = file->enum_type(3);
  ProxySignatureStatus_descriptor_ = file->enum_type(4);
  GeneralReceiptStatus_descriptor_ = file->enum_type(5);
  RecipientResponseStatus_descriptor_ = file->enum_type(6);
  MessageType_descriptor_ = file->enum_type(7);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Documents_2fDocument_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Document_descriptor_, &Document::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResolutionStatus_descriptor_, &ResolutionStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecipientReceiptMetadata_descriptor_, &RecipientReceiptMetadata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConfirmationMetadata_descriptor_, &ConfirmationMetadata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AmendmentRequestMetadata_descriptor_, &AmendmentRequestMetadata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Origin_descriptor_, &Origin::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Documents_2fDocument_2eproto() {
  delete Document::default_instance_;
  delete Document_reflection_;
  delete ResolutionStatus::default_instance_;
  delete ResolutionStatus_reflection_;
  delete RecipientReceiptMetadata::default_instance_;
  delete RecipientReceiptMetadata_reflection_;
  delete ConfirmationMetadata::default_instance_;
  delete ConfirmationMetadata_reflection_;
  delete AmendmentRequestMetadata::default_instance_;
  delete AmendmentRequestMetadata_reflection_;
  delete Origin::default_instance_;
  delete Origin_reflection_;
}

void protobuf_AddDesc_Documents_2fDocument_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Diadoc::Api::Proto::protobuf_AddDesc_Content_2eproto();
  ::Diadoc::Api::Proto::protobuf_AddDesc_DocumentId_2eproto();
  ::Diadoc::Api::Proto::protobuf_AddDesc_CustomDataItem_2eproto();
  ::Diadoc::Api::Proto::protobuf_AddDesc_DocumentType_2eproto();
  ::Diadoc::Api::Proto::protobuf_AddDesc_DocumentDirection_2eproto();
  ::Diadoc::Api::Proto::Documents::AcceptanceCertificateDocument::protobuf_AddDesc_Documents_2fAcceptanceCertificateDocument_2eproto();
  ::Diadoc::Api::Proto::Documents::BilateralDocument::protobuf_AddDesc_Documents_2fBilateralDocument_2eproto();
  ::Diadoc::Api::Proto::Documents::InvoiceDocument::protobuf_AddDesc_Documents_2fInvoiceDocument_2eproto();
  ::Diadoc::Api::Proto::Documents::NonformalizedDocument::protobuf_AddDesc_Documents_2fNonformalizedDocument_2eproto();
  ::Diadoc::Api::Proto::Documents::UnilateralDocument::protobuf_AddDesc_Documents_2fUnilateralDocument_2eproto();
  ::Diadoc::Api::Proto::Documents::UniversalTransferDocument::protobuf_AddDesc_Documents_2fUniversalTransferDocument_2eproto();
  ::Diadoc::Api::Proto::protobuf_AddDesc_ResolutionTarget_2eproto();
  ::Diadoc::Api::Proto::protobuf_AddDesc_ForwardDocumentEvent_2eproto();
  ::Diadoc::Api::Proto::Events::protobuf_AddDesc_Events_2fDiadocMessage_2dPostApi_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030Documents/Document.proto\022\032Diadoc.Api.P"
    "roto.Documents\032\rContent.proto\032\020DocumentI"
    "d.proto\032\024CustomDataItem.proto\032\022DocumentT"
    "ype.proto\032\027DocumentDirection.proto\032-Docu"
    "ments/AcceptanceCertificateDocument.prot"
    "o\032!Documents/BilateralDocument.proto\032\037Do"
    "cuments/InvoiceDocument.proto\032%Documents"
    "/NonformalizedDocument.proto\032\"Documents/"
    "UnilateralDocument.proto\032)Documents/Univ"
    "ersalTransferDocument.proto\032\026ResolutionT"
    "arget.proto\032\032ForwardDocumentEvent.proto\032"
    "\"Events/DiadocMessage-PostApi.proto\"\273%\n\010"
    "Document\022\020\n\010IndexKey\030\001 \001(\t\022\021\n\tMessageId\030"
    "\002 \002(\t\022\020\n\010EntityId\030\003 \002(\t\022\036\n\026CreationTimes"
    "tampTicks\030\004 \002(\020\022\031\n\021CounteragentBoxId\030\005 \001"
    "(\t\022I\n\014DocumentType\030\006 \001(\0162\036.Diadoc.Api.Pr"
    "oto.DocumentType:\023UnknownDocumentType\0228\n"
    "\022InitialDocumentIds\030\007 \003(\0132\034.Diadoc.Api.P"
    "roto.DocumentId\022<\n\026SubordinateDocumentId"
    "s\030\010 \003(\0132\034.Diadoc.Api.Proto.DocumentId\022*\n"
    "\007Content\030\t \001(\0132\031.Diadoc.Api.Proto.Conten"
    "t\022\020\n\010FileName\030\n \001(\t\022\024\n\014DocumentDate\030\013 \001("
    "\t\022\026\n\016DocumentNumber\030\014 \001(\t\022v\n\035Nonformaliz"
    "edDocumentMetadata\030\r \001(\0132O.Diadoc.Api.Pr"
    "oto.Documents.NonformalizedDocument.Nonf"
    "ormalizedDocumentMetadata\022T\n\017InvoiceMeta"
    "data\030\016 \001(\0132;.Diadoc.Api.Proto.Documents."
    "InvoiceDocument.InvoiceMetadata\022t\n\036Trust"
    "ConnectionRequestMetadata\030\017 \001(\0132L.Diadoc"
    ".Api.Proto.Documents.BilateralDocument.T"
    "rustConnectionRequestMetadata\022[\n\016Torg12M"
    "etadata\030\020 \001(\0132C.Diadoc.Api.Proto.Documen"
    "ts.BilateralDocument.BasicDocumentMetada"
    "ta\022d\n\027InvoiceRevisionMetadata\030\021 \001(\0132C.Di"
    "adoc.Api.Proto.Documents.InvoiceDocument"
    ".InvoiceRevisionMetadata\022h\n\031InvoiceCorre"
    "ctionMetadata\030\022 \001(\0132E.Diadoc.Api.Proto.D"
    "ocuments.InvoiceDocument.InvoiceCorrecti"
    "onMetadata\022x\n!InvoiceCorrectionRevisionM"
    "etadata\030\023 \001(\0132M.Diadoc.Api.Proto.Documen"
    "ts.InvoiceDocument.InvoiceCorrectionRevi"
    "sionMetadata\022~\n\035AcceptanceCertificateMet"
    "adata\030\024 \001(\0132W.Diadoc.Api.Proto.Documents"
    ".AcceptanceCertificateDocument.Acceptanc"
    "eCertificateMetadata\022g\n\027ProformaInvoiceM"
    "etadata\030\025 \001(\0132F.Diadoc.Api.Proto.Documen"
    "ts.UnilateralDocument.ProformaInvoiceMet"
    "adata\022^\n\021XmlTorg12Metadata\030\026 \001(\0132C.Diado"
    "c.Api.Proto.Documents.BilateralDocument."
    "BasicDocumentMetadata\022m\n XmlAcceptanceCe"
    "rtificateMetadata\030\027 \001(\0132C.Diadoc.Api.Pro"
    "to.Documents.BilateralDocument.BasicDocu"
    "mentMetadata\022\030\n\tIsDeleted\030\030 \001(\010:\005false\022\024"
    "\n\014DepartmentId\030\031 \001(\t\022\025\n\006IsTest\030\032 \001(\010:\005fa"
    "lse\022\030\n\020FromDepartmentId\030\033 \001(\t\022\026\n\016ToDepar"
    "tmentId\030\034 \001(\t\022Z\n\021PriceListMetadata\030\035 \001(\013"
    "2\?.Diadoc.Api.Proto.Documents.BilateralD"
    "ocument.PriceListMetadata\022\030\n\020CustomDocum"
    "entId\030\036 \001(\t\022F\n\020ResolutionStatus\030\037 \001(\0132,."
    "Diadoc.Api.Proto.Documents.ResolutionSta"
    "tus\022_\n\020RevocationStatus\030  \001(\0162,.Diadoc.A"
    "pi.Proto.Documents.RevocationStatus:\027Unk"
    "nownRevocationStatus\022\032\n\022SendTimestampTic"
    "ks\030! \001(\020\022\036\n\026DeliveryTimestampTicks\030\" \001(\020"
    "\022E\n\025ForwardDocumentEvents\030# \003(\0132&.Diadoc"
    ".Api.Proto.ForwardDocumentEvent\022j\n\031Recon"
    "ciliationActMetadata\030& \001(\0132G.Diadoc.Api."
    "Proto.Documents.BilateralDocument.Bilate"
    "ralDocumentMetadata\022X\n\020ContractMetadata\030"
    "\' \001(\0132>.Diadoc.Api.Proto.Documents.Bilat"
    "eralDocument.ContractMetadata\022[\n\016Torg13M"
    "etadata\030( \001(\0132C.Diadoc.Api.Proto.Documen"
    "ts.BilateralDocument.BasicDocumentMetada"
    "ta\022e\n\026ServiceDetailsMetadata\030) \001(\0132E.Dia"
    "doc.Api.Proto.Documents.UnilateralDocume"
    "nt.ServiceDetailsMetadata\022z\n\031RoamingNoti"
    "ficationStatus\030* \001(\01625.Diadoc.Api.Proto."
    "Documents.RoamingNotificationStatus: Unk"
    "nownRoamingNotificationStatus\022!\n\022HasCust"
    "omPrintForm\030+ \001(\010:\005false\0224\n\nCustomData\030,"
    " \003(\0132 .Diadoc.Api.Proto.CustomDataItem\022\020"
    "\n\010PacketId\030- \001(\t\022X\n\021DocumentDirection\030. "
    "\001(\0162#.Diadoc.Api.Proto.DocumentDirection"
    ":\030UnknownDocumentDirection\022&\n\036LastModifi"
    "cationTimestampTicks\030/ \001(\020\022\032\n\022IsEncrypte"
    "dContent\0300 \001(\010\022n\n\025SenderSignatureStatus\030"
    "1 \001(\01621.Diadoc.Api.Proto.Documents.Sende"
    "rSignatureStatus:\034UnknownSenderSignature"
    "Status\022t\n\036SupplementaryAgreementMetadata"
    "\0302 \001(\0132L.Diadoc.Api.Proto.Documents.Bila"
    "teralDocument.SupplementaryAgreementMeta"
    "data\022\025\n\006IsRead\0303 \001(\010:\005false\022,\n$RoamingNo"
    "tificationStatusDescription\0304 \001(\t\022\035\n\016Pac"
    "ketIsLocked\0305 \001(\010:\005false\022s\n\032PriceListAgr"
    "eementMetadata\0306 \001(\0132O.Diadoc.Api.Proto."
    "Documents.NonformalizedDocument.Nonforma"
    "lizedDocumentMetadata\022t\n\033CertificateRegi"
    "stryMetadata\0307 \001(\0132O.Diadoc.Api.Proto.Do"
    "cuments.NonformalizedDocument.Nonformali"
    "zedDocumentMetadata\022\202\001\n!UniversalTransfe"
    "rDocumentMetadata\0308 \001(\0132W.Diadoc.Api.Pro"
    "to.Documents.UniversalTransferDocument.U"
    "niversalTransferDocumentMetadata\022\222\001\n)Uni"
    "versalTransferDocumentRevisionMetadata\0309"
    " \001(\0132_.Diadoc.Api.Proto.Documents.Univer"
    "salTransferDocument.UniversalTransferDoc"
    "umentRevisionMetadata\022\206\001\n#UniversalCorre"
    "ctionDocumentMetadata\030: \001(\0132Y.Diadoc.Api"
    ".Proto.Documents.UniversalTransferDocume"
    "nt.UniversalCorrectionDocumentMetadata\022\226"
    "\001\n+UniversalCorrectionDocumentRevisionMe"
    "tadata\030; \001(\0132a.Diadoc.Api.Proto.Document"
    "s.UniversalTransferDocument.UniversalCor"
    "rectionDocumentRevisionMetadata\022\033\n\021Resol"
    "utionRouteId\030< \001(\t:\000\022\031\n\021AttachmentVersio"
    "n\030= \001(\t\022k\n\024ProxySignatureStatus\030> \001(\01620."
    "Diadoc.Api.Proto.Documents.ProxySignatur"
    "eStatus:\033UnknownProxySignatureStatus\022\023\n\013"
    "TypeNamedId\030\? \002(\t\022\020\n\010Function\030@ \002(\t\022\022\n\nW"
    "orkflowId\030A \002(\005\022\r\n\005Title\030B \002(\t\0227\n\010Metada"
    "ta\030C \003(\0132%.Diadoc.Api.Proto.Events.Metad"
    "ataItem\022V\n\030RecipientReceiptMetadata\030D \002("
    "\01324.Diadoc.Api.Proto.Documents.Recipient"
    "ReceiptMetadata\022N\n\024ConfirmationMetadata\030"
    "E \002(\01320.Diadoc.Api.Proto.Documents.Confi"
    "rmationMetadata\022t\n\027RecipientResponseStat"
    "us\030F \002(\01623.Diadoc.Api.Proto.Documents.Re"
    "cipientResponseStatus:\036RecipientResponse"
    "StatusUnknown\022V\n\030AmendmentRequestMetadat"
    "a\030G \002(\01324.Diadoc.Api.Proto.Documents.Ame"
    "ndmentRequestMetadata\0222\n\006Origin\030H \001(\0132\"."
    "Diadoc.Api.Proto.Documents.Origin\"\310\001\n\020Re"
    "solutionStatus\022W\n\004Type\030\001 \001(\01620.Diadoc.Ap"
    "i.Proto.Documents.ResolutionStatusType:\027"
    "UnknownResolutionStatus\0222\n\006Target\030\002 \001(\0132"
    "\".Diadoc.Api.Proto.ResolutionTarget\022\024\n\014A"
    "uthorUserId\030\003 \002(\t\022\021\n\tAuthorFIO\030\004 \002(\t\"\320\001\n"
    "\030RecipientReceiptMetadata\022d\n\rReceiptStat"
    "us\030\001 \002(\01620.Diadoc.Api.Proto.Documents.Ge"
    "neralReceiptStatus:\033GeneralReceiptStatus"
    "Unknown\022N\n\024ConfirmationMetadata\030\002 \001(\01320."
    "Diadoc.Api.Proto.Documents.ConfirmationM"
    "etadata\"\223\001\n\024ConfirmationMetadata\022d\n\rRece"
    "iptStatus\030\001 \002(\01620.Diadoc.Api.Proto.Docum"
    "ents.GeneralReceiptStatus:\033GeneralReceip"
    "tStatusUnknown\022\025\n\rDateTimeTicks\030\002 \002(\020\"\230\001"
    "\n\030AmendmentRequestMetadata\022\026\n\016AmendmentF"
    "lags\030\001 \002(\005\022d\n\rReceiptStatus\030\002 \002(\01620.Diad"
    "oc.Api.Proto.Documents.GeneralReceiptSta"
    "tus:\033GeneralReceiptStatusUnknown\"Y\n\006Orig"
    "in\022<\n\013MessageType\030\001 \002(\0162\'.Diadoc.Api.Pro"
    "to.Documents.MessageType\022\021\n\tMessageId\030\002 "
    "\002(\t*\254\001\n\024ResolutionStatusType\022$\n\027UnknownR"
    "esolutionStatus\020\377\377\377\377\377\377\377\377\377\001\022\010\n\004None\020\000\022\014\n\010"
    "Approved\020\001\022\017\n\013Disapproved\020\002\022\030\n\024Approveme"
    "ntRequested\020\003\022\026\n\022SignatureRequested\020\004\022\023\n"
    "\017SignatureDenied\020\005*\262\001\n\020RevocationStatus\022"
    "\033\n\027UnknownRevocationStatus\020\000\022\030\n\024Revocati"
    "onStatusNone\020\001\022\035\n\031RevocationIsRequestedB"
    "yMe\020\002\022\030\n\024RequestsMyRevocation\020\003\022\026\n\022Revoc"
    "ationAccepted\020\004\022\026\n\022RevocationRejected\020\005*"
    "\256\001\n\031RoamingNotificationStatus\022$\n Unknown"
    "RoamingNotificationStatus\020\000\022!\n\035RoamingNo"
    "tificationStatusNone\020\001\022$\n RoamingNotific"
    "ationStatusSuccess\020\002\022\"\n\036RoamingNotificat"
    "ionStatusError\020\003*\300\001\n\025SenderSignatureStat"
    "us\022 \n\034UnknownSenderSignatureStatus\020\000\022\035\n\031"
    "WaitingForSenderSignature\020\001\022\034\n\030SenderSig"
    "natureUnchecked\020\002\022\"\n\036SenderSignatureChec"
    "kedAndValid\020\003\022$\n SenderSignatureCheckedA"
    "ndInvalid\020\004*\302\001\n\024ProxySignatureStatus\022\037\n\033"
    "UnknownProxySignatureStatus\020\000\022\034\n\030ProxySi"
    "gnatureStatusNone\020\001\022\034\n\030WaitingForProxySi"
    "gnature\020\002\022\026\n\022WithProxySignature\020\003\022\032\n\026Pro"
    "xySignatureRejected\020\004\022\031\n\025InvalidProxySig"
    "nature\020\005*\234\001\n\024GeneralReceiptStatus\022\037\n\033Gen"
    "eralReceiptStatusUnknown\020\000\022%\n!GeneralRec"
    "eiptStatusNotAcceptable\020\001\022\027\n\023HaveToCreat"
    "eReceipt\020\002\022\025\n\021WaitingForReceipt\020\003\022\014\n\010Fin"
    "ished\020\004*\353\001\n\027RecipientResponseStatus\022\"\n\036R"
    "ecipientResponseStatusUnknown\020\000\022(\n$Recip"
    "ientResponseStatusNotAcceptable\020\001\022 \n\034Wai"
    "tingForRecipientSignature\020\002\022\032\n\026WithRecip"
    "ientSignature\020\003\022%\n!RecipientSignatureReq"
    "uestRejected\020\004\022\035\n\031InvalidRecipientSignat"
    "ure\020\005*R\n\013MessageType\022\013\n\007Unknown\020\000\022\021\n\rMes"
    "sageLetter\020\001\022\017\n\013DraftLetter\020\002\022\022\n\016Templat"
    "eLetter\020\003", 7489);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Documents/Document.proto", &protobuf_RegisterTypes);
  Document::default_instance_ = new Document();
  ResolutionStatus::default_instance_ = new ResolutionStatus();
  RecipientReceiptMetadata::default_instance_ = new RecipientReceiptMetadata();
  ConfirmationMetadata::default_instance_ = new ConfirmationMetadata();
  AmendmentRequestMetadata::default_instance_ = new AmendmentRequestMetadata();
  Origin::default_instance_ = new Origin();
  Document::default_instance_->InitAsDefaultInstance();
  ResolutionStatus::default_instance_->InitAsDefaultInstance();
  RecipientReceiptMetadata::default_instance_->InitAsDefaultInstance();
  ConfirmationMetadata::default_instance_->InitAsDefaultInstance();
  AmendmentRequestMetadata::default_instance_->InitAsDefaultInstance();
  Origin::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Documents_2fDocument_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Documents_2fDocument_2eproto {
  StaticDescriptorInitializer_Documents_2fDocument_2eproto() {
    protobuf_AddDesc_Documents_2fDocument_2eproto();
  }
} static_descriptor_initializer_Documents_2fDocument_2eproto_;
const ::google::protobuf::EnumDescriptor* ResolutionStatusType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResolutionStatusType_descriptor_;
}
bool ResolutionStatusType_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RevocationStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RevocationStatus_descriptor_;
}
bool RevocationStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RoamingNotificationStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoamingNotificationStatus_descriptor_;
}
bool RoamingNotificationStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SenderSignatureStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SenderSignatureStatus_descriptor_;
}
bool SenderSignatureStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProxySignatureStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxySignatureStatus_descriptor_;
}
bool ProxySignatureStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GeneralReceiptStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GeneralReceiptStatus_descriptor_;
}
bool GeneralReceiptStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RecipientResponseStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecipientResponseStatus_descriptor_;
}
bool RecipientResponseStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}
bool MessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int Document::kIndexKeyFieldNumber;
const int Document::kMessageIdFieldNumber;
const int Document::kEntityIdFieldNumber;
const int Document::kCreationTimestampTicksFieldNumber;
const int Document::kCounteragentBoxIdFieldNumber;
const int Document::kDocumentTypeFieldNumber;
const int Document::kInitialDocumentIdsFieldNumber;
const int Document::kSubordinateDocumentIdsFieldNumber;
const int Document::kContentFieldNumber;
const int Document::kFileNameFieldNumber;
const int Document::kDocumentDateFieldNumber;
const int Document::kDocumentNumberFieldNumber;
const int Document::kNonformalizedDocumentMetadataFieldNumber;
const int Document::kInvoiceMetadataFieldNumber;
const int Document::kTrustConnectionRequestMetadataFieldNumber;
const int Document::kTorg12MetadataFieldNumber;
const int Document::kInvoiceRevisionMetadataFieldNumber;
const int Document::kInvoiceCorrectionMetadataFieldNumber;
const int Document::kInvoiceCorrectionRevisionMetadataFieldNumber;
const int Document::kAcceptanceCertificateMetadataFieldNumber;
const int Document::kProformaInvoiceMetadataFieldNumber;
const int Document::kXmlTorg12MetadataFieldNumber;
const int Document::kXmlAcceptanceCertificateMetadataFieldNumber;
const int Document::kIsDeletedFieldNumber;
const int Document::kDepartmentIdFieldNumber;
const int Document::kIsTestFieldNumber;
const int Document::kFromDepartmentIdFieldNumber;
const int Document::kToDepartmentIdFieldNumber;
const int Document::kPriceListMetadataFieldNumber;
const int Document::kCustomDocumentIdFieldNumber;
const int Document::kResolutionStatusFieldNumber;
const int Document::kRevocationStatusFieldNumber;
const int Document::kSendTimestampTicksFieldNumber;
const int Document::kDeliveryTimestampTicksFieldNumber;
const int Document::kForwardDocumentEventsFieldNumber;
const int Document::kReconciliationActMetadataFieldNumber;
const int Document::kContractMetadataFieldNumber;
const int Document::kTorg13MetadataFieldNumber;
const int Document::kServiceDetailsMetadataFieldNumber;
const int Document::kRoamingNotificationStatusFieldNumber;
const int Document::kHasCustomPrintFormFieldNumber;
const int Document::kCustomDataFieldNumber;
const int Document::kPacketIdFieldNumber;
const int Document::kDocumentDirectionFieldNumber;
const int Document::kLastModificationTimestampTicksFieldNumber;
const int Document::kIsEncryptedContentFieldNumber;
const int Document::kSenderSignatureStatusFieldNumber;
const int Document::kSupplementaryAgreementMetadataFieldNumber;
const int Document::kIsReadFieldNumber;
const int Document::kRoamingNotificationStatusDescriptionFieldNumber;
const int Document::kPacketIsLockedFieldNumber;
const int Document::kPriceListAgreementMetadataFieldNumber;
const int Document::kCertificateRegistryMetadataFieldNumber;
const int Document::kUniversalTransferDocumentMetadataFieldNumber;
const int Document::kUniversalTransferDocumentRevisionMetadataFieldNumber;
const int Document::kUniversalCorrectionDocumentMetadataFieldNumber;
const int Document::kUniversalCorrectionDocumentRevisionMetadataFieldNumber;
const int Document::kResolutionRouteIdFieldNumber;
const int Document::kAttachmentVersionFieldNumber;
const int Document::kProxySignatureStatusFieldNumber;
const int Document::kTypeNamedIdFieldNumber;
const int Document::kFunctionFieldNumber;
const int Document::kWorkflowIdFieldNumber;
const int Document::kTitleFieldNumber;
const int Document::kMetadataFieldNumber;
const int Document::kRecipientReceiptMetadataFieldNumber;
const int Document::kConfirmationMetadataFieldNumber;
const int Document::kRecipientResponseStatusFieldNumber;
const int Document::kAmendmentRequestMetadataFieldNumber;
const int Document::kOriginFieldNumber;
#endif  // !_MSC_VER

Document::Document()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Documents.Document)
}

void Document::InitAsDefaultInstance() {
  content_ = const_cast< ::Diadoc::Api::Proto::Content*>(&::Diadoc::Api::Proto::Content::default_instance());
  nonformalizeddocumentmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata*>(&::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata::default_instance());
  invoicemetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceMetadata*>(&::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceMetadata::default_instance());
  trustconnectionrequestmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::BilateralDocument::TrustConnectionRequestMetadata*>(&::Diadoc::Api::Proto::Documents::BilateralDocument::TrustConnectionRequestMetadata::default_instance());
  torg12metadata_ = const_cast< ::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata*>(&::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::default_instance());
  invoicerevisionmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceRevisionMetadata*>(&::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceRevisionMetadata::default_instance());
  invoicecorrectionmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceCorrectionMetadata*>(&::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceCorrectionMetadata::default_instance());
  invoicecorrectionrevisionmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceCorrectionRevisionMetadata*>(&::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceCorrectionRevisionMetadata::default_instance());
  acceptancecertificatemetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::AcceptanceCertificateDocument::AcceptanceCertificateMetadata*>(&::Diadoc::Api::Proto::Documents::AcceptanceCertificateDocument::AcceptanceCertificateMetadata::default_instance());
  proformainvoicemetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::UnilateralDocument::ProformaInvoiceMetadata*>(&::Diadoc::Api::Proto::Documents::UnilateralDocument::ProformaInvoiceMetadata::default_instance());
  xmltorg12metadata_ = const_cast< ::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata*>(&::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::default_instance());
  xmlacceptancecertificatemetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata*>(&::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::default_instance());
  pricelistmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::BilateralDocument::PriceListMetadata*>(&::Diadoc::Api::Proto::Documents::BilateralDocument::PriceListMetadata::default_instance());
  resolutionstatus_ = const_cast< ::Diadoc::Api::Proto::Documents::ResolutionStatus*>(&::Diadoc::Api::Proto::Documents::ResolutionStatus::default_instance());
  reconciliationactmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::BilateralDocument::BilateralDocumentMetadata*>(&::Diadoc::Api::Proto::Documents::BilateralDocument::BilateralDocumentMetadata::default_instance());
  contractmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::BilateralDocument::ContractMetadata*>(&::Diadoc::Api::Proto::Documents::BilateralDocument::ContractMetadata::default_instance());
  torg13metadata_ = const_cast< ::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata*>(&::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::default_instance());
  servicedetailsmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::UnilateralDocument::ServiceDetailsMetadata*>(&::Diadoc::Api::Proto::Documents::UnilateralDocument::ServiceDetailsMetadata::default_instance());
  supplementaryagreementmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::BilateralDocument::SupplementaryAgreementMetadata*>(&::Diadoc::Api::Proto::Documents::BilateralDocument::SupplementaryAgreementMetadata::default_instance());
  pricelistagreementmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata*>(&::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata::default_instance());
  certificateregistrymetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata*>(&::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata::default_instance());
  universaltransferdocumentmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalTransferDocumentMetadata*>(&::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalTransferDocumentMetadata::default_instance());
  universaltransferdocumentrevisionmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalTransferDocumentRevisionMetadata*>(&::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalTransferDocumentRevisionMetadata::default_instance());
  universalcorrectiondocumentmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalCorrectionDocumentMetadata*>(&::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalCorrectionDocumentMetadata::default_instance());
  universalcorrectiondocumentrevisionmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalCorrectionDocumentRevisionMetadata*>(&::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalCorrectionDocumentRevisionMetadata::default_instance());
  recipientreceiptmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::RecipientReceiptMetadata*>(&::Diadoc::Api::Proto::Documents::RecipientReceiptMetadata::default_instance());
  confirmationmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::ConfirmationMetadata*>(&::Diadoc::Api::Proto::Documents::ConfirmationMetadata::default_instance());
  amendmentrequestmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::AmendmentRequestMetadata*>(&::Diadoc::Api::Proto::Documents::AmendmentRequestMetadata::default_instance());
  origin_ = const_cast< ::Diadoc::Api::Proto::Documents::Origin*>(&::Diadoc::Api::Proto::Documents::Origin::default_instance());
}

Document::Document(const Document& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Documents.Document)
}

void Document::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  indexkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messageid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entityid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creationtimestampticks_ = GOOGLE_LONGLONG(0);
  counteragentboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documenttype_ = -1;
  content_ = NULL;
  filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentdate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonformalizeddocumentmetadata_ = NULL;
  invoicemetadata_ = NULL;
  trustconnectionrequestmetadata_ = NULL;
  torg12metadata_ = NULL;
  invoicerevisionmetadata_ = NULL;
  invoicecorrectionmetadata_ = NULL;
  invoicecorrectionrevisionmetadata_ = NULL;
  acceptancecertificatemetadata_ = NULL;
  proformainvoicemetadata_ = NULL;
  xmltorg12metadata_ = NULL;
  xmlacceptancecertificatemetadata_ = NULL;
  isdeleted_ = false;
  departmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  istest_ = false;
  fromdepartmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  todepartmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pricelistmetadata_ = NULL;
  customdocumentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolutionstatus_ = NULL;
  revocationstatus_ = 0;
  sendtimestampticks_ = GOOGLE_LONGLONG(0);
  deliverytimestampticks_ = GOOGLE_LONGLONG(0);
  reconciliationactmetadata_ = NULL;
  contractmetadata_ = NULL;
  torg13metadata_ = NULL;
  servicedetailsmetadata_ = NULL;
  roamingnotificationstatus_ = 0;
  hascustomprintform_ = false;
  packetid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentdirection_ = 0;
  lastmodificationtimestampticks_ = GOOGLE_LONGLONG(0);
  isencryptedcontent_ = false;
  sendersignaturestatus_ = 0;
  supplementaryagreementmetadata_ = NULL;
  isread_ = false;
  roamingnotificationstatusdescription_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packetislocked_ = false;
  pricelistagreementmetadata_ = NULL;
  certificateregistrymetadata_ = NULL;
  universaltransferdocumentmetadata_ = NULL;
  universaltransferdocumentrevisionmetadata_ = NULL;
  universalcorrectiondocumentmetadata_ = NULL;
  universalcorrectiondocumentrevisionmetadata_ = NULL;
  resolutionrouteid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attachmentversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxysignaturestatus_ = 0;
  typenamedid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workflowid_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recipientreceiptmetadata_ = NULL;
  confirmationmetadata_ = NULL;
  recipientresponsestatus_ = 0;
  amendmentrequestmetadata_ = NULL;
  origin_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Document::~Document() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Documents.Document)
  SharedDtor();
}

void Document::SharedDtor() {
  if (indexkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete indexkey_;
  }
  if (messageid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messageid_;
  }
  if (entityid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete entityid_;
  }
  if (counteragentboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete counteragentboxid_;
  }
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (documentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentdate_;
  }
  if (documentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete documentnumber_;
  }
  if (departmentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete departmentid_;
  }
  if (fromdepartmentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fromdepartmentid_;
  }
  if (todepartmentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete todepartmentid_;
  }
  if (customdocumentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete customdocumentid_;
  }
  if (packetid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete packetid_;
  }
  if (roamingnotificationstatusdescription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete roamingnotificationstatusdescription_;
  }
  if (resolutionrouteid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resolutionrouteid_;
  }
  if (attachmentversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attachmentversion_;
  }
  if (typenamedid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete typenamedid_;
  }
  if (function_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete function_;
  }
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (this != default_instance_) {
    delete content_;
    delete nonformalizeddocumentmetadata_;
    delete invoicemetadata_;
    delete trustconnectionrequestmetadata_;
    delete torg12metadata_;
    delete invoicerevisionmetadata_;
    delete invoicecorrectionmetadata_;
    delete invoicecorrectionrevisionmetadata_;
    delete acceptancecertificatemetadata_;
    delete proformainvoicemetadata_;
    delete xmltorg12metadata_;
    delete xmlacceptancecertificatemetadata_;
    delete pricelistmetadata_;
    delete resolutionstatus_;
    delete reconciliationactmetadata_;
    delete contractmetadata_;
    delete torg13metadata_;
    delete servicedetailsmetadata_;
    delete supplementaryagreementmetadata_;
    delete pricelistagreementmetadata_;
    delete certificateregistrymetadata_;
    delete universaltransferdocumentmetadata_;
    delete universaltransferdocumentrevisionmetadata_;
    delete universalcorrectiondocumentmetadata_;
    delete universalcorrectiondocumentrevisionmetadata_;
    delete recipientreceiptmetadata_;
    delete confirmationmetadata_;
    delete amendmentrequestmetadata_;
    delete origin_;
  }
}

void Document::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Document::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Document_descriptor_;
}

const Document& Document::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fDocument_2eproto();
  return *default_instance_;
}

Document* Document::default_instance_ = NULL;

Document* Document::New() const {
  return new Document;
}

void Document::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Document*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    if (has_indexkey()) {
      if (indexkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        indexkey_->clear();
      }
    }
    if (has_messageid()) {
      if (messageid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        messageid_->clear();
      }
    }
    if (has_entityid()) {
      if (entityid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        entityid_->clear();
      }
    }
    creationtimestampticks_ = GOOGLE_LONGLONG(0);
    if (has_counteragentboxid()) {
      if (counteragentboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        counteragentboxid_->clear();
      }
    }
    documenttype_ = -1;
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_content()) {
      if (content_ != NULL) content_->::Diadoc::Api::Proto::Content::Clear();
    }
    if (has_filename()) {
      if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filename_->clear();
      }
    }
    if (has_documentdate()) {
      if (documentdate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentdate_->clear();
      }
    }
    if (has_documentnumber()) {
      if (documentnumber_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        documentnumber_->clear();
      }
    }
    if (has_nonformalizeddocumentmetadata()) {
      if (nonformalizeddocumentmetadata_ != NULL) nonformalizeddocumentmetadata_->::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata::Clear();
    }
    if (has_invoicemetadata()) {
      if (invoicemetadata_ != NULL) invoicemetadata_->::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceMetadata::Clear();
    }
    if (has_trustconnectionrequestmetadata()) {
      if (trustconnectionrequestmetadata_ != NULL) trustconnectionrequestmetadata_->::Diadoc::Api::Proto::Documents::BilateralDocument::TrustConnectionRequestMetadata::Clear();
    }
    if (has_torg12metadata()) {
      if (torg12metadata_ != NULL) torg12metadata_->::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16711680) {
    if (has_invoicerevisionmetadata()) {
      if (invoicerevisionmetadata_ != NULL) invoicerevisionmetadata_->::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceRevisionMetadata::Clear();
    }
    if (has_invoicecorrectionmetadata()) {
      if (invoicecorrectionmetadata_ != NULL) invoicecorrectionmetadata_->::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceCorrectionMetadata::Clear();
    }
    if (has_invoicecorrectionrevisionmetadata()) {
      if (invoicecorrectionrevisionmetadata_ != NULL) invoicecorrectionrevisionmetadata_->::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceCorrectionRevisionMetadata::Clear();
    }
    if (has_acceptancecertificatemetadata()) {
      if (acceptancecertificatemetadata_ != NULL) acceptancecertificatemetadata_->::Diadoc::Api::Proto::Documents::AcceptanceCertificateDocument::AcceptanceCertificateMetadata::Clear();
    }
    if (has_proformainvoicemetadata()) {
      if (proformainvoicemetadata_ != NULL) proformainvoicemetadata_->::Diadoc::Api::Proto::Documents::UnilateralDocument::ProformaInvoiceMetadata::Clear();
    }
    if (has_xmltorg12metadata()) {
      if (xmltorg12metadata_ != NULL) xmltorg12metadata_->::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::Clear();
    }
    if (has_xmlacceptancecertificatemetadata()) {
      if (xmlacceptancecertificatemetadata_ != NULL) xmlacceptancecertificatemetadata_->::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::Clear();
    }
    isdeleted_ = false;
  }
  if (_has_bits_[24 / 32] & 4278190080) {
    if (has_departmentid()) {
      if (departmentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        departmentid_->clear();
      }
    }
    istest_ = false;
    if (has_fromdepartmentid()) {
      if (fromdepartmentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        fromdepartmentid_->clear();
      }
    }
    if (has_todepartmentid()) {
      if (todepartmentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        todepartmentid_->clear();
      }
    }
    if (has_pricelistmetadata()) {
      if (pricelistmetadata_ != NULL) pricelistmetadata_->::Diadoc::Api::Proto::Documents::BilateralDocument::PriceListMetadata::Clear();
    }
    if (has_customdocumentid()) {
      if (customdocumentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        customdocumentid_->clear();
      }
    }
    if (has_resolutionstatus()) {
      if (resolutionstatus_ != NULL) resolutionstatus_->::Diadoc::Api::Proto::Documents::ResolutionStatus::Clear();
    }
    revocationstatus_ = 0;
  }
  if (_has_bits_[32 / 32] & 251) {
    ZR_(sendtimestampticks_, deliverytimestampticks_);
    if (has_reconciliationactmetadata()) {
      if (reconciliationactmetadata_ != NULL) reconciliationactmetadata_->::Diadoc::Api::Proto::Documents::BilateralDocument::BilateralDocumentMetadata::Clear();
    }
    if (has_contractmetadata()) {
      if (contractmetadata_ != NULL) contractmetadata_->::Diadoc::Api::Proto::Documents::BilateralDocument::ContractMetadata::Clear();
    }
    if (has_torg13metadata()) {
      if (torg13metadata_ != NULL) torg13metadata_->::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::Clear();
    }
    if (has_servicedetailsmetadata()) {
      if (servicedetailsmetadata_ != NULL) servicedetailsmetadata_->::Diadoc::Api::Proto::Documents::UnilateralDocument::ServiceDetailsMetadata::Clear();
    }
    roamingnotificationstatus_ = 0;
  }
  if (_has_bits_[40 / 32] & 64768) {
    ZR_(hascustomprintform_, isencryptedcontent_);
    ZR_(lastmodificationtimestampticks_, sendersignaturestatus_);
    if (has_packetid()) {
      if (packetid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        packetid_->clear();
      }
    }
    if (has_supplementaryagreementmetadata()) {
      if (supplementaryagreementmetadata_ != NULL) supplementaryagreementmetadata_->::Diadoc::Api::Proto::Documents::BilateralDocument::SupplementaryAgreementMetadata::Clear();
    }
  }
  if (_has_bits_[48 / 32] & 16711680) {
    ZR_(isread_, packetislocked_);
    if (has_roamingnotificationstatusdescription()) {
      if (roamingnotificationstatusdescription_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        roamingnotificationstatusdescription_->clear();
      }
    }
    if (has_pricelistagreementmetadata()) {
      if (pricelistagreementmetadata_ != NULL) pricelistagreementmetadata_->::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata::Clear();
    }
    if (has_certificateregistrymetadata()) {
      if (certificateregistrymetadata_ != NULL) certificateregistrymetadata_->::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata::Clear();
    }
    if (has_universaltransferdocumentmetadata()) {
      if (universaltransferdocumentmetadata_ != NULL) universaltransferdocumentmetadata_->::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalTransferDocumentMetadata::Clear();
    }
    if (has_universaltransferdocumentrevisionmetadata()) {
      if (universaltransferdocumentrevisionmetadata_ != NULL) universaltransferdocumentrevisionmetadata_->::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalTransferDocumentRevisionMetadata::Clear();
    }
    if (has_universalcorrectiondocumentmetadata()) {
      if (universalcorrectiondocumentmetadata_ != NULL) universalcorrectiondocumentmetadata_->::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalCorrectionDocumentMetadata::Clear();
    }
  }
  if (_has_bits_[56 / 32] & 4278190080) {
    if (has_universalcorrectiondocumentrevisionmetadata()) {
      if (universalcorrectiondocumentrevisionmetadata_ != NULL) universalcorrectiondocumentrevisionmetadata_->::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalCorrectionDocumentRevisionMetadata::Clear();
    }
    if (has_resolutionrouteid()) {
      if (resolutionrouteid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        resolutionrouteid_->clear();
      }
    }
    if (has_attachmentversion()) {
      if (attachmentversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        attachmentversion_->clear();
      }
    }
    proxysignaturestatus_ = 0;
    if (has_typenamedid()) {
      if (typenamedid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        typenamedid_->clear();
      }
    }
    if (has_function()) {
      if (function_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        function_->clear();
      }
    }
    workflowid_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
  }
  if (_has_bits_[64 / 32] & 62) {
    if (has_recipientreceiptmetadata()) {
      if (recipientreceiptmetadata_ != NULL) recipientreceiptmetadata_->::Diadoc::Api::Proto::Documents::RecipientReceiptMetadata::Clear();
    }
    if (has_confirmationmetadata()) {
      if (confirmationmetadata_ != NULL) confirmationmetadata_->::Diadoc::Api::Proto::Documents::ConfirmationMetadata::Clear();
    }
    recipientresponsestatus_ = 0;
    if (has_amendmentrequestmetadata()) {
      if (amendmentrequestmetadata_ != NULL) amendmentrequestmetadata_->::Diadoc::Api::Proto::Documents::AmendmentRequestMetadata::Clear();
    }
    if (has_origin()) {
      if (origin_ != NULL) origin_->::Diadoc::Api::Proto::Documents::Origin::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  initialdocumentids_.Clear();
  subordinatedocumentids_.Clear();
  forwarddocumentevents_.Clear();
  customdata_.Clear();
  metadata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Document::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Documents.Document)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string IndexKey = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_indexkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->indexkey().data(), this->indexkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "indexkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MessageId;
        break;
      }

      // required string MessageId = 2;
      case 2: {
        if (tag == 18) {
         parse_MessageId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messageid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messageid().data(), this->messageid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "messageid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_EntityId;
        break;
      }

      // required string EntityId = 3;
      case 3: {
        if (tag == 26) {
         parse_EntityId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entityid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->entityid().data(), this->entityid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "entityid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_CreationTimestampTicks;
        break;
      }

      // required sfixed64 CreationTimestampTicks = 4;
      case 4: {
        if (tag == 33) {
         parse_CreationTimestampTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &creationtimestampticks_)));
          set_has_creationtimestampticks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_CounteragentBoxId;
        break;
      }

      // optional string CounteragentBoxId = 5;
      case 5: {
        if (tag == 42) {
         parse_CounteragentBoxId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_counteragentboxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->counteragentboxid().data(), this->counteragentboxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "counteragentboxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_DocumentType;
        break;
      }

      // optional .Diadoc.Api.Proto.DocumentType DocumentType = 6 [default = UnknownDocumentType];
      case 6: {
        if (tag == 48) {
         parse_DocumentType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::DocumentType_IsValid(value)) {
            set_documenttype(static_cast< ::Diadoc::Api::Proto::DocumentType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_InitialDocumentIds;
        break;
      }

      // repeated .Diadoc.Api.Proto.DocumentId InitialDocumentIds = 7;
      case 7: {
        if (tag == 58) {
         parse_InitialDocumentIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_initialdocumentids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_InitialDocumentIds;
        if (input->ExpectTag(66)) goto parse_SubordinateDocumentIds;
        break;
      }

      // repeated .Diadoc.Api.Proto.DocumentId SubordinateDocumentIds = 8;
      case 8: {
        if (tag == 66) {
         parse_SubordinateDocumentIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_subordinatedocumentids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_SubordinateDocumentIds;
        if (input->ExpectTag(74)) goto parse_Content;
        break;
      }

      // optional .Diadoc.Api.Proto.Content Content = 9;
      case 9: {
        if (tag == 74) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_FileName;
        break;
      }

      // optional string FileName = 10;
      case 10: {
        if (tag == 82) {
         parse_FileName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_DocumentDate;
        break;
      }

      // optional string DocumentDate = 11;
      case 11: {
        if (tag == 90) {
         parse_DocumentDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentdate().data(), this->documentdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentdate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_DocumentNumber;
        break;
      }

      // optional string DocumentNumber = 12;
      case 12: {
        if (tag == 98) {
         parse_DocumentNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_documentnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->documentnumber().data(), this->documentnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "documentnumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_NonformalizedDocumentMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata NonformalizedDocumentMetadata = 13;
      case 13: {
        if (tag == 106) {
         parse_NonformalizedDocumentMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nonformalizeddocumentmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_InvoiceMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceMetadata InvoiceMetadata = 14;
      case 14: {
        if (tag == 114) {
         parse_InvoiceMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invoicemetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_TrustConnectionRequestMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.BilateralDocument.TrustConnectionRequestMetadata TrustConnectionRequestMetadata = 15;
      case 15: {
        if (tag == 122) {
         parse_TrustConnectionRequestMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trustconnectionrequestmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_Torg12Metadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata Torg12Metadata = 16;
      case 16: {
        if (tag == 130) {
         parse_Torg12Metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_torg12metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_InvoiceRevisionMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceRevisionMetadata InvoiceRevisionMetadata = 17;
      case 17: {
        if (tag == 138) {
         parse_InvoiceRevisionMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invoicerevisionmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_InvoiceCorrectionMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceCorrectionMetadata InvoiceCorrectionMetadata = 18;
      case 18: {
        if (tag == 146) {
         parse_InvoiceCorrectionMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invoicecorrectionmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_InvoiceCorrectionRevisionMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceCorrectionRevisionMetadata InvoiceCorrectionRevisionMetadata = 19;
      case 19: {
        if (tag == 154) {
         parse_InvoiceCorrectionRevisionMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invoicecorrectionrevisionmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_AcceptanceCertificateMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.AcceptanceCertificateDocument.AcceptanceCertificateMetadata AcceptanceCertificateMetadata = 20;
      case 20: {
        if (tag == 162) {
         parse_AcceptanceCertificateMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_acceptancecertificatemetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_ProformaInvoiceMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.UnilateralDocument.ProformaInvoiceMetadata ProformaInvoiceMetadata = 21;
      case 21: {
        if (tag == 170) {
         parse_ProformaInvoiceMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_proformainvoicemetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_XmlTorg12Metadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata XmlTorg12Metadata = 22;
      case 22: {
        if (tag == 178) {
         parse_XmlTorg12Metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_xmltorg12metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_XmlAcceptanceCertificateMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata XmlAcceptanceCertificateMetadata = 23;
      case 23: {
        if (tag == 186) {
         parse_XmlAcceptanceCertificateMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_xmlacceptancecertificatemetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_IsDeleted;
        break;
      }

      // optional bool IsDeleted = 24 [default = false];
      case 24: {
        if (tag == 192) {
         parse_IsDeleted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdeleted_)));
          set_has_isdeleted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_DepartmentId;
        break;
      }

      // optional string DepartmentId = 25;
      case 25: {
        if (tag == 202) {
         parse_DepartmentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->departmentid().data(), this->departmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "departmentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_IsTest;
        break;
      }

      // optional bool IsTest = 26 [default = false];
      case 26: {
        if (tag == 208) {
         parse_IsTest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istest_)));
          set_has_istest();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_FromDepartmentId;
        break;
      }

      // optional string FromDepartmentId = 27;
      case 27: {
        if (tag == 218) {
         parse_FromDepartmentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromdepartmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromdepartmentid().data(), this->fromdepartmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fromdepartmentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_ToDepartmentId;
        break;
      }

      // optional string ToDepartmentId = 28;
      case 28: {
        if (tag == 226) {
         parse_ToDepartmentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_todepartmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->todepartmentid().data(), this->todepartmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "todepartmentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_PriceListMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.BilateralDocument.PriceListMetadata PriceListMetadata = 29;
      case 29: {
        if (tag == 234) {
         parse_PriceListMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pricelistmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_CustomDocumentId;
        break;
      }

      // optional string CustomDocumentId = 30;
      case 30: {
        if (tag == 242) {
         parse_CustomDocumentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customdocumentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->customdocumentid().data(), this->customdocumentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "customdocumentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_ResolutionStatus;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.ResolutionStatus ResolutionStatus = 31;
      case 31: {
        if (tag == 250) {
         parse_ResolutionStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolutionstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_RevocationStatus;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.RevocationStatus RevocationStatus = 32 [default = UnknownRevocationStatus];
      case 32: {
        if (tag == 256) {
         parse_RevocationStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::RevocationStatus_IsValid(value)) {
            set_revocationstatus(static_cast< ::Diadoc::Api::Proto::Documents::RevocationStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(32, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(265)) goto parse_SendTimestampTicks;
        break;
      }

      // optional sfixed64 SendTimestampTicks = 33;
      case 33: {
        if (tag == 265) {
         parse_SendTimestampTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &sendtimestampticks_)));
          set_has_sendtimestampticks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(273)) goto parse_DeliveryTimestampTicks;
        break;
      }

      // optional sfixed64 DeliveryTimestampTicks = 34;
      case 34: {
        if (tag == 273) {
         parse_DeliveryTimestampTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &deliverytimestampticks_)));
          set_has_deliverytimestampticks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_ForwardDocumentEvents;
        break;
      }

      // repeated .Diadoc.Api.Proto.ForwardDocumentEvent ForwardDocumentEvents = 35;
      case 35: {
        if (tag == 282) {
         parse_ForwardDocumentEvents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_forwarddocumentevents()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_ForwardDocumentEvents;
        if (input->ExpectTag(306)) goto parse_ReconciliationActMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BilateralDocumentMetadata ReconciliationActMetadata = 38;
      case 38: {
        if (tag == 306) {
         parse_ReconciliationActMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reconciliationactmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(314)) goto parse_ContractMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.BilateralDocument.ContractMetadata ContractMetadata = 39;
      case 39: {
        if (tag == 314) {
         parse_ContractMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_contractmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(322)) goto parse_Torg13Metadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata Torg13Metadata = 40;
      case 40: {
        if (tag == 322) {
         parse_Torg13Metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_torg13metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_ServiceDetailsMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.UnilateralDocument.ServiceDetailsMetadata ServiceDetailsMetadata = 41;
      case 41: {
        if (tag == 330) {
         parse_ServiceDetailsMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_servicedetailsmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(336)) goto parse_RoamingNotificationStatus;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.RoamingNotificationStatus RoamingNotificationStatus = 42 [default = UnknownRoamingNotificationStatus];
      case 42: {
        if (tag == 336) {
         parse_RoamingNotificationStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::RoamingNotificationStatus_IsValid(value)) {
            set_roamingnotificationstatus(static_cast< ::Diadoc::Api::Proto::Documents::RoamingNotificationStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(42, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_HasCustomPrintForm;
        break;
      }

      // optional bool HasCustomPrintForm = 43 [default = false];
      case 43: {
        if (tag == 344) {
         parse_HasCustomPrintForm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hascustomprintform_)));
          set_has_hascustomprintform();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_CustomData;
        break;
      }

      // repeated .Diadoc.Api.Proto.CustomDataItem CustomData = 44;
      case 44: {
        if (tag == 354) {
         parse_CustomData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_customdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_CustomData;
        if (input->ExpectTag(362)) goto parse_PacketId;
        break;
      }

      // optional string PacketId = 45;
      case 45: {
        if (tag == 362) {
         parse_PacketId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packetid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->packetid().data(), this->packetid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "packetid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(368)) goto parse_DocumentDirection;
        break;
      }

      // optional .Diadoc.Api.Proto.DocumentDirection DocumentDirection = 46 [default = UnknownDocumentDirection];
      case 46: {
        if (tag == 368) {
         parse_DocumentDirection:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::DocumentDirection_IsValid(value)) {
            set_documentdirection(static_cast< ::Diadoc::Api::Proto::DocumentDirection >(value));
          } else {
            mutable_unknown_fields()->AddVarint(46, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(377)) goto parse_LastModificationTimestampTicks;
        break;
      }

      // optional sfixed64 LastModificationTimestampTicks = 47;
      case 47: {
        if (tag == 377) {
         parse_LastModificationTimestampTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &lastmodificationtimestampticks_)));
          set_has_lastmodificationtimestampticks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(384)) goto parse_IsEncryptedContent;
        break;
      }

      // optional bool IsEncryptedContent = 48;
      case 48: {
        if (tag == 384) {
         parse_IsEncryptedContent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isencryptedcontent_)));
          set_has_isencryptedcontent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(392)) goto parse_SenderSignatureStatus;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.SenderSignatureStatus SenderSignatureStatus = 49 [default = UnknownSenderSignatureStatus];
      case 49: {
        if (tag == 392) {
         parse_SenderSignatureStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::SenderSignatureStatus_IsValid(value)) {
            set_sendersignaturestatus(static_cast< ::Diadoc::Api::Proto::Documents::SenderSignatureStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(49, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_SupplementaryAgreementMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.BilateralDocument.SupplementaryAgreementMetadata SupplementaryAgreementMetadata = 50;
      case 50: {
        if (tag == 402) {
         parse_SupplementaryAgreementMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_supplementaryagreementmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(408)) goto parse_IsRead;
        break;
      }

      // optional bool IsRead = 51 [default = false];
      case 51: {
        if (tag == 408) {
         parse_IsRead:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isread_)));
          set_has_isread();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_RoamingNotificationStatusDescription;
        break;
      }

      // optional string RoamingNotificationStatusDescription = 52;
      case 52: {
        if (tag == 418) {
         parse_RoamingNotificationStatusDescription:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roamingnotificationstatusdescription()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roamingnotificationstatusdescription().data(), this->roamingnotificationstatusdescription().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roamingnotificationstatusdescription");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(424)) goto parse_PacketIsLocked;
        break;
      }

      // optional bool PacketIsLocked = 53 [default = false];
      case 53: {
        if (tag == 424) {
         parse_PacketIsLocked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &packetislocked_)));
          set_has_packetislocked();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_PriceListAgreementMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata PriceListAgreementMetadata = 54;
      case 54: {
        if (tag == 434) {
         parse_PriceListAgreementMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pricelistagreementmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(442)) goto parse_CertificateRegistryMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata CertificateRegistryMetadata = 55;
      case 55: {
        if (tag == 442) {
         parse_CertificateRegistryMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_certificateregistrymetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(450)) goto parse_UniversalTransferDocumentMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata UniversalTransferDocumentMetadata = 56;
      case 56: {
        if (tag == 450) {
         parse_UniversalTransferDocumentMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_universaltransferdocumentmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(458)) goto parse_UniversalTransferDocumentRevisionMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentRevisionMetadata UniversalTransferDocumentRevisionMetadata = 57;
      case 57: {
        if (tag == 458) {
         parse_UniversalTransferDocumentRevisionMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_universaltransferdocumentrevisionmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(466)) goto parse_UniversalCorrectionDocumentMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalCorrectionDocumentMetadata UniversalCorrectionDocumentMetadata = 58;
      case 58: {
        if (tag == 466) {
         parse_UniversalCorrectionDocumentMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_universalcorrectiondocumentmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(474)) goto parse_UniversalCorrectionDocumentRevisionMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalCorrectionDocumentRevisionMetadata UniversalCorrectionDocumentRevisionMetadata = 59;
      case 59: {
        if (tag == 474) {
         parse_UniversalCorrectionDocumentRevisionMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_universalcorrectiondocumentrevisionmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(482)) goto parse_ResolutionRouteId;
        break;
      }

      // optional string ResolutionRouteId = 60 [default = ""];
      case 60: {
        if (tag == 482) {
         parse_ResolutionRouteId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resolutionrouteid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resolutionrouteid().data(), this->resolutionrouteid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resolutionrouteid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(490)) goto parse_AttachmentVersion;
        break;
      }

      // optional string AttachmentVersion = 61;
      case 61: {
        if (tag == 490) {
         parse_AttachmentVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attachmentversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attachmentversion().data(), this->attachmentversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "attachmentversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(496)) goto parse_ProxySignatureStatus;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.ProxySignatureStatus ProxySignatureStatus = 62 [default = UnknownProxySignatureStatus];
      case 62: {
        if (tag == 496) {
         parse_ProxySignatureStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::ProxySignatureStatus_IsValid(value)) {
            set_proxysignaturestatus(static_cast< ::Diadoc::Api::Proto::Documents::ProxySignatureStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(62, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(506)) goto parse_TypeNamedId;
        break;
      }

      // required string TypeNamedId = 63;
      case 63: {
        if (tag == 506) {
         parse_TypeNamedId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_typenamedid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->typenamedid().data(), this->typenamedid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "typenamedid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(514)) goto parse_Function;
        break;
      }

      // required string Function = 64;
      case 64: {
        if (tag == 514) {
         parse_Function:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->function().data(), this->function().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "function");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(520)) goto parse_WorkflowId;
        break;
      }

      // required int32 WorkflowId = 65;
      case 65: {
        if (tag == 520) {
         parse_WorkflowId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &workflowid_)));
          set_has_workflowid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(530)) goto parse_Title;
        break;
      }

      // required string Title = 66;
      case 66: {
        if (tag == 530) {
         parse_Title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(538)) goto parse_Metadata;
        break;
      }

      // repeated .Diadoc.Api.Proto.Events.MetadataItem Metadata = 67;
      case 67: {
        if (tag == 538) {
         parse_Metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(538)) goto parse_Metadata;
        if (input->ExpectTag(546)) goto parse_RecipientReceiptMetadata;
        break;
      }

      // required .Diadoc.Api.Proto.Documents.RecipientReceiptMetadata RecipientReceiptMetadata = 68;
      case 68: {
        if (tag == 546) {
         parse_RecipientReceiptMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recipientreceiptmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(554)) goto parse_ConfirmationMetadata;
        break;
      }

      // required .Diadoc.Api.Proto.Documents.ConfirmationMetadata ConfirmationMetadata = 69;
      case 69: {
        if (tag == 554) {
         parse_ConfirmationMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_confirmationmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(560)) goto parse_RecipientResponseStatus;
        break;
      }

      // required .Diadoc.Api.Proto.Documents.RecipientResponseStatus RecipientResponseStatus = 70 [default = RecipientResponseStatusUnknown];
      case 70: {
        if (tag == 560) {
         parse_RecipientResponseStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::RecipientResponseStatus_IsValid(value)) {
            set_recipientresponsestatus(static_cast< ::Diadoc::Api::Proto::Documents::RecipientResponseStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(70, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(570)) goto parse_AmendmentRequestMetadata;
        break;
      }

      // required .Diadoc.Api.Proto.Documents.AmendmentRequestMetadata AmendmentRequestMetadata = 71;
      case 71: {
        if (tag == 570) {
         parse_AmendmentRequestMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_amendmentrequestmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(578)) goto parse_Origin;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.Origin Origin = 72;
      case 72: {
        if (tag == 578) {
         parse_Origin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Documents.Document)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Documents.Document)
  return false;
#undef DO_
}

void Document::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Documents.Document)
  // optional string IndexKey = 1;
  if (has_indexkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->indexkey().data(), this->indexkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "indexkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->indexkey(), output);
  }

  // required string MessageId = 2;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messageid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->messageid(), output);
  }

  // required string EntityId = 3;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entityid().data(), this->entityid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "entityid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->entityid(), output);
  }

  // required sfixed64 CreationTimestampTicks = 4;
  if (has_creationtimestampticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(4, this->creationtimestampticks(), output);
  }

  // optional string CounteragentBoxId = 5;
  if (has_counteragentboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->counteragentboxid().data(), this->counteragentboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "counteragentboxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->counteragentboxid(), output);
  }

  // optional .Diadoc.Api.Proto.DocumentType DocumentType = 6 [default = UnknownDocumentType];
  if (has_documenttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->documenttype(), output);
  }

  // repeated .Diadoc.Api.Proto.DocumentId InitialDocumentIds = 7;
  for (int i = 0; i < this->initialdocumentids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->initialdocumentids(i), output);
  }

  // repeated .Diadoc.Api.Proto.DocumentId SubordinateDocumentIds = 8;
  for (int i = 0; i < this->subordinatedocumentids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->subordinatedocumentids(i), output);
  }

  // optional .Diadoc.Api.Proto.Content Content = 9;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->content(), output);
  }

  // optional string FileName = 10;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->filename(), output);
  }

  // optional string DocumentDate = 11;
  if (has_documentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentdate().data(), this->documentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->documentdate(), output);
  }

  // optional string DocumentNumber = 12;
  if (has_documentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentnumber().data(), this->documentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->documentnumber(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata NonformalizedDocumentMetadata = 13;
  if (has_nonformalizeddocumentmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->nonformalizeddocumentmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceMetadata InvoiceMetadata = 14;
  if (has_invoicemetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->invoicemetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.TrustConnectionRequestMetadata TrustConnectionRequestMetadata = 15;
  if (has_trustconnectionrequestmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->trustconnectionrequestmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata Torg12Metadata = 16;
  if (has_torg12metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->torg12metadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceRevisionMetadata InvoiceRevisionMetadata = 17;
  if (has_invoicerevisionmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->invoicerevisionmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceCorrectionMetadata InvoiceCorrectionMetadata = 18;
  if (has_invoicecorrectionmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->invoicecorrectionmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceCorrectionRevisionMetadata InvoiceCorrectionRevisionMetadata = 19;
  if (has_invoicecorrectionrevisionmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->invoicecorrectionrevisionmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.AcceptanceCertificateDocument.AcceptanceCertificateMetadata AcceptanceCertificateMetadata = 20;
  if (has_acceptancecertificatemetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->acceptancecertificatemetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.UnilateralDocument.ProformaInvoiceMetadata ProformaInvoiceMetadata = 21;
  if (has_proformainvoicemetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->proformainvoicemetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata XmlTorg12Metadata = 22;
  if (has_xmltorg12metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->xmltorg12metadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata XmlAcceptanceCertificateMetadata = 23;
  if (has_xmlacceptancecertificatemetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->xmlacceptancecertificatemetadata(), output);
  }

  // optional bool IsDeleted = 24 [default = false];
  if (has_isdeleted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->isdeleted(), output);
  }

  // optional string DepartmentId = 25;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "departmentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->departmentid(), output);
  }

  // optional bool IsTest = 26 [default = false];
  if (has_istest()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(26, this->istest(), output);
  }

  // optional string FromDepartmentId = 27;
  if (has_fromdepartmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromdepartmentid().data(), this->fromdepartmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fromdepartmentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      27, this->fromdepartmentid(), output);
  }

  // optional string ToDepartmentId = 28;
  if (has_todepartmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->todepartmentid().data(), this->todepartmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "todepartmentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->todepartmentid(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.PriceListMetadata PriceListMetadata = 29;
  if (has_pricelistmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->pricelistmetadata(), output);
  }

  // optional string CustomDocumentId = 30;
  if (has_customdocumentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->customdocumentid().data(), this->customdocumentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "customdocumentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->customdocumentid(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.ResolutionStatus ResolutionStatus = 31;
  if (has_resolutionstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->resolutionstatus(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.RevocationStatus RevocationStatus = 32 [default = UnknownRevocationStatus];
  if (has_revocationstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      32, this->revocationstatus(), output);
  }

  // optional sfixed64 SendTimestampTicks = 33;
  if (has_sendtimestampticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(33, this->sendtimestampticks(), output);
  }

  // optional sfixed64 DeliveryTimestampTicks = 34;
  if (has_deliverytimestampticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(34, this->deliverytimestampticks(), output);
  }

  // repeated .Diadoc.Api.Proto.ForwardDocumentEvent ForwardDocumentEvents = 35;
  for (int i = 0; i < this->forwarddocumentevents_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->forwarddocumentevents(i), output);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BilateralDocumentMetadata ReconciliationActMetadata = 38;
  if (has_reconciliationactmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->reconciliationactmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.ContractMetadata ContractMetadata = 39;
  if (has_contractmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, this->contractmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata Torg13Metadata = 40;
  if (has_torg13metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->torg13metadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.UnilateralDocument.ServiceDetailsMetadata ServiceDetailsMetadata = 41;
  if (has_servicedetailsmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->servicedetailsmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.RoamingNotificationStatus RoamingNotificationStatus = 42 [default = UnknownRoamingNotificationStatus];
  if (has_roamingnotificationstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      42, this->roamingnotificationstatus(), output);
  }

  // optional bool HasCustomPrintForm = 43 [default = false];
  if (has_hascustomprintform()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(43, this->hascustomprintform(), output);
  }

  // repeated .Diadoc.Api.Proto.CustomDataItem CustomData = 44;
  for (int i = 0; i < this->customdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, this->customdata(i), output);
  }

  // optional string PacketId = 45;
  if (has_packetid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packetid().data(), this->packetid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packetid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      45, this->packetid(), output);
  }

  // optional .Diadoc.Api.Proto.DocumentDirection DocumentDirection = 46 [default = UnknownDocumentDirection];
  if (has_documentdirection()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      46, this->documentdirection(), output);
  }

  // optional sfixed64 LastModificationTimestampTicks = 47;
  if (has_lastmodificationtimestampticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(47, this->lastmodificationtimestampticks(), output);
  }

  // optional bool IsEncryptedContent = 48;
  if (has_isencryptedcontent()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(48, this->isencryptedcontent(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.SenderSignatureStatus SenderSignatureStatus = 49 [default = UnknownSenderSignatureStatus];
  if (has_sendersignaturestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      49, this->sendersignaturestatus(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.SupplementaryAgreementMetadata SupplementaryAgreementMetadata = 50;
  if (has_supplementaryagreementmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->supplementaryagreementmetadata(), output);
  }

  // optional bool IsRead = 51 [default = false];
  if (has_isread()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(51, this->isread(), output);
  }

  // optional string RoamingNotificationStatusDescription = 52;
  if (has_roamingnotificationstatusdescription()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roamingnotificationstatusdescription().data(), this->roamingnotificationstatusdescription().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roamingnotificationstatusdescription");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      52, this->roamingnotificationstatusdescription(), output);
  }

  // optional bool PacketIsLocked = 53 [default = false];
  if (has_packetislocked()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(53, this->packetislocked(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata PriceListAgreementMetadata = 54;
  if (has_pricelistagreementmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, this->pricelistagreementmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata CertificateRegistryMetadata = 55;
  if (has_certificateregistrymetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, this->certificateregistrymetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata UniversalTransferDocumentMetadata = 56;
  if (has_universaltransferdocumentmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      56, this->universaltransferdocumentmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentRevisionMetadata UniversalTransferDocumentRevisionMetadata = 57;
  if (has_universaltransferdocumentrevisionmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, this->universaltransferdocumentrevisionmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalCorrectionDocumentMetadata UniversalCorrectionDocumentMetadata = 58;
  if (has_universalcorrectiondocumentmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      58, this->universalcorrectiondocumentmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalCorrectionDocumentRevisionMetadata UniversalCorrectionDocumentRevisionMetadata = 59;
  if (has_universalcorrectiondocumentrevisionmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59, this->universalcorrectiondocumentrevisionmetadata(), output);
  }

  // optional string ResolutionRouteId = 60 [default = ""];
  if (has_resolutionrouteid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resolutionrouteid().data(), this->resolutionrouteid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resolutionrouteid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      60, this->resolutionrouteid(), output);
  }

  // optional string AttachmentVersion = 61;
  if (has_attachmentversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attachmentversion().data(), this->attachmentversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attachmentversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      61, this->attachmentversion(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.ProxySignatureStatus ProxySignatureStatus = 62 [default = UnknownProxySignatureStatus];
  if (has_proxysignaturestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      62, this->proxysignaturestatus(), output);
  }

  // required string TypeNamedId = 63;
  if (has_typenamedid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typenamedid().data(), this->typenamedid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "typenamedid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      63, this->typenamedid(), output);
  }

  // required string Function = 64;
  if (has_function()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->function().data(), this->function().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "function");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      64, this->function(), output);
  }

  // required int32 WorkflowId = 65;
  if (has_workflowid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(65, this->workflowid(), output);
  }

  // required string Title = 66;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      66, this->title(), output);
  }

  // repeated .Diadoc.Api.Proto.Events.MetadataItem Metadata = 67;
  for (int i = 0; i < this->metadata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      67, this->metadata(i), output);
  }

  // required .Diadoc.Api.Proto.Documents.RecipientReceiptMetadata RecipientReceiptMetadata = 68;
  if (has_recipientreceiptmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      68, this->recipientreceiptmetadata(), output);
  }

  // required .Diadoc.Api.Proto.Documents.ConfirmationMetadata ConfirmationMetadata = 69;
  if (has_confirmationmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      69, this->confirmationmetadata(), output);
  }

  // required .Diadoc.Api.Proto.Documents.RecipientResponseStatus RecipientResponseStatus = 70 [default = RecipientResponseStatusUnknown];
  if (has_recipientresponsestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      70, this->recipientresponsestatus(), output);
  }

  // required .Diadoc.Api.Proto.Documents.AmendmentRequestMetadata AmendmentRequestMetadata = 71;
  if (has_amendmentrequestmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71, this->amendmentrequestmetadata(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.Origin Origin = 72;
  if (has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72, this->origin(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Documents.Document)
}

::google::protobuf::uint8* Document::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Documents.Document)
  // optional string IndexKey = 1;
  if (has_indexkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->indexkey().data(), this->indexkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "indexkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->indexkey(), target);
  }

  // required string MessageId = 2;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messageid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->messageid(), target);
  }

  // required string EntityId = 3;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entityid().data(), this->entityid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "entityid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->entityid(), target);
  }

  // required sfixed64 CreationTimestampTicks = 4;
  if (has_creationtimestampticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(4, this->creationtimestampticks(), target);
  }

  // optional string CounteragentBoxId = 5;
  if (has_counteragentboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->counteragentboxid().data(), this->counteragentboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "counteragentboxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->counteragentboxid(), target);
  }

  // optional .Diadoc.Api.Proto.DocumentType DocumentType = 6 [default = UnknownDocumentType];
  if (has_documenttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->documenttype(), target);
  }

  // repeated .Diadoc.Api.Proto.DocumentId InitialDocumentIds = 7;
  for (int i = 0; i < this->initialdocumentids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->initialdocumentids(i), target);
  }

  // repeated .Diadoc.Api.Proto.DocumentId SubordinateDocumentIds = 8;
  for (int i = 0; i < this->subordinatedocumentids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->subordinatedocumentids(i), target);
  }

  // optional .Diadoc.Api.Proto.Content Content = 9;
  if (has_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->content(), target);
  }

  // optional string FileName = 10;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->filename(), target);
  }

  // optional string DocumentDate = 11;
  if (has_documentdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentdate().data(), this->documentdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->documentdate(), target);
  }

  // optional string DocumentNumber = 12;
  if (has_documentnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->documentnumber().data(), this->documentnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "documentnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->documentnumber(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata NonformalizedDocumentMetadata = 13;
  if (has_nonformalizeddocumentmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->nonformalizeddocumentmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceMetadata InvoiceMetadata = 14;
  if (has_invoicemetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->invoicemetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.TrustConnectionRequestMetadata TrustConnectionRequestMetadata = 15;
  if (has_trustconnectionrequestmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->trustconnectionrequestmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata Torg12Metadata = 16;
  if (has_torg12metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->torg12metadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceRevisionMetadata InvoiceRevisionMetadata = 17;
  if (has_invoicerevisionmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->invoicerevisionmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceCorrectionMetadata InvoiceCorrectionMetadata = 18;
  if (has_invoicecorrectionmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->invoicecorrectionmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceCorrectionRevisionMetadata InvoiceCorrectionRevisionMetadata = 19;
  if (has_invoicecorrectionrevisionmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->invoicecorrectionrevisionmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.AcceptanceCertificateDocument.AcceptanceCertificateMetadata AcceptanceCertificateMetadata = 20;
  if (has_acceptancecertificatemetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->acceptancecertificatemetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.UnilateralDocument.ProformaInvoiceMetadata ProformaInvoiceMetadata = 21;
  if (has_proformainvoicemetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->proformainvoicemetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata XmlTorg12Metadata = 22;
  if (has_xmltorg12metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->xmltorg12metadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata XmlAcceptanceCertificateMetadata = 23;
  if (has_xmlacceptancecertificatemetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->xmlacceptancecertificatemetadata(), target);
  }

  // optional bool IsDeleted = 24 [default = false];
  if (has_isdeleted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->isdeleted(), target);
  }

  // optional string DepartmentId = 25;
  if (has_departmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->departmentid().data(), this->departmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "departmentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->departmentid(), target);
  }

  // optional bool IsTest = 26 [default = false];
  if (has_istest()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(26, this->istest(), target);
  }

  // optional string FromDepartmentId = 27;
  if (has_fromdepartmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromdepartmentid().data(), this->fromdepartmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fromdepartmentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->fromdepartmentid(), target);
  }

  // optional string ToDepartmentId = 28;
  if (has_todepartmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->todepartmentid().data(), this->todepartmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "todepartmentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->todepartmentid(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.PriceListMetadata PriceListMetadata = 29;
  if (has_pricelistmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->pricelistmetadata(), target);
  }

  // optional string CustomDocumentId = 30;
  if (has_customdocumentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->customdocumentid().data(), this->customdocumentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "customdocumentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->customdocumentid(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.ResolutionStatus ResolutionStatus = 31;
  if (has_resolutionstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        31, this->resolutionstatus(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.RevocationStatus RevocationStatus = 32 [default = UnknownRevocationStatus];
  if (has_revocationstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      32, this->revocationstatus(), target);
  }

  // optional sfixed64 SendTimestampTicks = 33;
  if (has_sendtimestampticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(33, this->sendtimestampticks(), target);
  }

  // optional sfixed64 DeliveryTimestampTicks = 34;
  if (has_deliverytimestampticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(34, this->deliverytimestampticks(), target);
  }

  // repeated .Diadoc.Api.Proto.ForwardDocumentEvent ForwardDocumentEvents = 35;
  for (int i = 0; i < this->forwarddocumentevents_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        35, this->forwarddocumentevents(i), target);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BilateralDocumentMetadata ReconciliationActMetadata = 38;
  if (has_reconciliationactmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        38, this->reconciliationactmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.ContractMetadata ContractMetadata = 39;
  if (has_contractmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        39, this->contractmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata Torg13Metadata = 40;
  if (has_torg13metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        40, this->torg13metadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.UnilateralDocument.ServiceDetailsMetadata ServiceDetailsMetadata = 41;
  if (has_servicedetailsmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        41, this->servicedetailsmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.RoamingNotificationStatus RoamingNotificationStatus = 42 [default = UnknownRoamingNotificationStatus];
  if (has_roamingnotificationstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      42, this->roamingnotificationstatus(), target);
  }

  // optional bool HasCustomPrintForm = 43 [default = false];
  if (has_hascustomprintform()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(43, this->hascustomprintform(), target);
  }

  // repeated .Diadoc.Api.Proto.CustomDataItem CustomData = 44;
  for (int i = 0; i < this->customdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        44, this->customdata(i), target);
  }

  // optional string PacketId = 45;
  if (has_packetid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packetid().data(), this->packetid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packetid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        45, this->packetid(), target);
  }

  // optional .Diadoc.Api.Proto.DocumentDirection DocumentDirection = 46 [default = UnknownDocumentDirection];
  if (has_documentdirection()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      46, this->documentdirection(), target);
  }

  // optional sfixed64 LastModificationTimestampTicks = 47;
  if (has_lastmodificationtimestampticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(47, this->lastmodificationtimestampticks(), target);
  }

  // optional bool IsEncryptedContent = 48;
  if (has_isencryptedcontent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(48, this->isencryptedcontent(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.SenderSignatureStatus SenderSignatureStatus = 49 [default = UnknownSenderSignatureStatus];
  if (has_sendersignaturestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      49, this->sendersignaturestatus(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.BilateralDocument.SupplementaryAgreementMetadata SupplementaryAgreementMetadata = 50;
  if (has_supplementaryagreementmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        50, this->supplementaryagreementmetadata(), target);
  }

  // optional bool IsRead = 51 [default = false];
  if (has_isread()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(51, this->isread(), target);
  }

  // optional string RoamingNotificationStatusDescription = 52;
  if (has_roamingnotificationstatusdescription()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roamingnotificationstatusdescription().data(), this->roamingnotificationstatusdescription().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roamingnotificationstatusdescription");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        52, this->roamingnotificationstatusdescription(), target);
  }

  // optional bool PacketIsLocked = 53 [default = false];
  if (has_packetislocked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(53, this->packetislocked(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata PriceListAgreementMetadata = 54;
  if (has_pricelistagreementmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        54, this->pricelistagreementmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata CertificateRegistryMetadata = 55;
  if (has_certificateregistrymetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        55, this->certificateregistrymetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata UniversalTransferDocumentMetadata = 56;
  if (has_universaltransferdocumentmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        56, this->universaltransferdocumentmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentRevisionMetadata UniversalTransferDocumentRevisionMetadata = 57;
  if (has_universaltransferdocumentrevisionmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        57, this->universaltransferdocumentrevisionmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalCorrectionDocumentMetadata UniversalCorrectionDocumentMetadata = 58;
  if (has_universalcorrectiondocumentmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        58, this->universalcorrectiondocumentmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalCorrectionDocumentRevisionMetadata UniversalCorrectionDocumentRevisionMetadata = 59;
  if (has_universalcorrectiondocumentrevisionmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        59, this->universalcorrectiondocumentrevisionmetadata(), target);
  }

  // optional string ResolutionRouteId = 60 [default = ""];
  if (has_resolutionrouteid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resolutionrouteid().data(), this->resolutionrouteid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resolutionrouteid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        60, this->resolutionrouteid(), target);
  }

  // optional string AttachmentVersion = 61;
  if (has_attachmentversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attachmentversion().data(), this->attachmentversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attachmentversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        61, this->attachmentversion(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.ProxySignatureStatus ProxySignatureStatus = 62 [default = UnknownProxySignatureStatus];
  if (has_proxysignaturestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      62, this->proxysignaturestatus(), target);
  }

  // required string TypeNamedId = 63;
  if (has_typenamedid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typenamedid().data(), this->typenamedid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "typenamedid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        63, this->typenamedid(), target);
  }

  // required string Function = 64;
  if (has_function()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->function().data(), this->function().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "function");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        64, this->function(), target);
  }

  // required int32 WorkflowId = 65;
  if (has_workflowid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(65, this->workflowid(), target);
  }

  // required string Title = 66;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        66, this->title(), target);
  }

  // repeated .Diadoc.Api.Proto.Events.MetadataItem Metadata = 67;
  for (int i = 0; i < this->metadata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        67, this->metadata(i), target);
  }

  // required .Diadoc.Api.Proto.Documents.RecipientReceiptMetadata RecipientReceiptMetadata = 68;
  if (has_recipientreceiptmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        68, this->recipientreceiptmetadata(), target);
  }

  // required .Diadoc.Api.Proto.Documents.ConfirmationMetadata ConfirmationMetadata = 69;
  if (has_confirmationmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        69, this->confirmationmetadata(), target);
  }

  // required .Diadoc.Api.Proto.Documents.RecipientResponseStatus RecipientResponseStatus = 70 [default = RecipientResponseStatusUnknown];
  if (has_recipientresponsestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      70, this->recipientresponsestatus(), target);
  }

  // required .Diadoc.Api.Proto.Documents.AmendmentRequestMetadata AmendmentRequestMetadata = 71;
  if (has_amendmentrequestmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        71, this->amendmentrequestmetadata(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.Origin Origin = 72;
  if (has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        72, this->origin(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Documents.Document)
  return target;
}

int Document::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string IndexKey = 1;
    if (has_indexkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->indexkey());
    }

    // required string MessageId = 2;
    if (has_messageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messageid());
    }

    // required string EntityId = 3;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entityid());
    }

    // required sfixed64 CreationTimestampTicks = 4;
    if (has_creationtimestampticks()) {
      total_size += 1 + 8;
    }

    // optional string CounteragentBoxId = 5;
    if (has_counteragentboxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->counteragentboxid());
    }

    // optional .Diadoc.Api.Proto.DocumentType DocumentType = 6 [default = UnknownDocumentType];
    if (has_documenttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->documenttype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .Diadoc.Api.Proto.Content Content = 9;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->content());
    }

    // optional string FileName = 10;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string DocumentDate = 11;
    if (has_documentdate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentdate());
    }

    // optional string DocumentNumber = 12;
    if (has_documentnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->documentnumber());
    }

    // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata NonformalizedDocumentMetadata = 13;
    if (has_nonformalizeddocumentmetadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->nonformalizeddocumentmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceMetadata InvoiceMetadata = 14;
    if (has_invoicemetadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invoicemetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.BilateralDocument.TrustConnectionRequestMetadata TrustConnectionRequestMetadata = 15;
    if (has_trustconnectionrequestmetadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->trustconnectionrequestmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata Torg12Metadata = 16;
    if (has_torg12metadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->torg12metadata());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceRevisionMetadata InvoiceRevisionMetadata = 17;
    if (has_invoicerevisionmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invoicerevisionmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceCorrectionMetadata InvoiceCorrectionMetadata = 18;
    if (has_invoicecorrectionmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invoicecorrectionmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceCorrectionRevisionMetadata InvoiceCorrectionRevisionMetadata = 19;
    if (has_invoicecorrectionrevisionmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invoicecorrectionrevisionmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.AcceptanceCertificateDocument.AcceptanceCertificateMetadata AcceptanceCertificateMetadata = 20;
    if (has_acceptancecertificatemetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->acceptancecertificatemetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.UnilateralDocument.ProformaInvoiceMetadata ProformaInvoiceMetadata = 21;
    if (has_proformainvoicemetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->proformainvoicemetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata XmlTorg12Metadata = 22;
    if (has_xmltorg12metadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->xmltorg12metadata());
    }

    // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata XmlAcceptanceCertificateMetadata = 23;
    if (has_xmlacceptancecertificatemetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->xmlacceptancecertificatemetadata());
    }

    // optional bool IsDeleted = 24 [default = false];
    if (has_isdeleted()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional string DepartmentId = 25;
    if (has_departmentid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->departmentid());
    }

    // optional bool IsTest = 26 [default = false];
    if (has_istest()) {
      total_size += 2 + 1;
    }

    // optional string FromDepartmentId = 27;
    if (has_fromdepartmentid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromdepartmentid());
    }

    // optional string ToDepartmentId = 28;
    if (has_todepartmentid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->todepartmentid());
    }

    // optional .Diadoc.Api.Proto.Documents.BilateralDocument.PriceListMetadata PriceListMetadata = 29;
    if (has_pricelistmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pricelistmetadata());
    }

    // optional string CustomDocumentId = 30;
    if (has_customdocumentid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->customdocumentid());
    }

    // optional .Diadoc.Api.Proto.Documents.ResolutionStatus ResolutionStatus = 31;
    if (has_resolutionstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resolutionstatus());
    }

    // optional .Diadoc.Api.Proto.Documents.RevocationStatus RevocationStatus = 32 [default = UnknownRevocationStatus];
    if (has_revocationstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->revocationstatus());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // optional sfixed64 SendTimestampTicks = 33;
    if (has_sendtimestampticks()) {
      total_size += 2 + 8;
    }

    // optional sfixed64 DeliveryTimestampTicks = 34;
    if (has_deliverytimestampticks()) {
      total_size += 2 + 8;
    }

    // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BilateralDocumentMetadata ReconciliationActMetadata = 38;
    if (has_reconciliationactmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reconciliationactmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.BilateralDocument.ContractMetadata ContractMetadata = 39;
    if (has_contractmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->contractmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.BilateralDocument.BasicDocumentMetadata Torg13Metadata = 40;
    if (has_torg13metadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->torg13metadata());
    }

    // optional .Diadoc.Api.Proto.Documents.UnilateralDocument.ServiceDetailsMetadata ServiceDetailsMetadata = 41;
    if (has_servicedetailsmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->servicedetailsmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.RoamingNotificationStatus RoamingNotificationStatus = 42 [default = UnknownRoamingNotificationStatus];
    if (has_roamingnotificationstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->roamingnotificationstatus());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // optional bool HasCustomPrintForm = 43 [default = false];
    if (has_hascustomprintform()) {
      total_size += 2 + 1;
    }

    // optional string PacketId = 45;
    if (has_packetid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packetid());
    }

    // optional .Diadoc.Api.Proto.DocumentDirection DocumentDirection = 46 [default = UnknownDocumentDirection];
    if (has_documentdirection()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->documentdirection());
    }

    // optional sfixed64 LastModificationTimestampTicks = 47;
    if (has_lastmodificationtimestampticks()) {
      total_size += 2 + 8;
    }

    // optional bool IsEncryptedContent = 48;
    if (has_isencryptedcontent()) {
      total_size += 2 + 1;
    }

    // optional .Diadoc.Api.Proto.Documents.SenderSignatureStatus SenderSignatureStatus = 49 [default = UnknownSenderSignatureStatus];
    if (has_sendersignaturestatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sendersignaturestatus());
    }

    // optional .Diadoc.Api.Proto.Documents.BilateralDocument.SupplementaryAgreementMetadata SupplementaryAgreementMetadata = 50;
    if (has_supplementaryagreementmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->supplementaryagreementmetadata());
    }

  }
  if (_has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    // optional bool IsRead = 51 [default = false];
    if (has_isread()) {
      total_size += 2 + 1;
    }

    // optional string RoamingNotificationStatusDescription = 52;
    if (has_roamingnotificationstatusdescription()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roamingnotificationstatusdescription());
    }

    // optional bool PacketIsLocked = 53 [default = false];
    if (has_packetislocked()) {
      total_size += 2 + 1;
    }

    // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata PriceListAgreementMetadata = 54;
    if (has_pricelistagreementmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pricelistagreementmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.NonformalizedDocument.NonformalizedDocumentMetadata CertificateRegistryMetadata = 55;
    if (has_certificateregistrymetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->certificateregistrymetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentMetadata UniversalTransferDocumentMetadata = 56;
    if (has_universaltransferdocumentmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->universaltransferdocumentmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalTransferDocumentRevisionMetadata UniversalTransferDocumentRevisionMetadata = 57;
    if (has_universaltransferdocumentrevisionmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->universaltransferdocumentrevisionmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalCorrectionDocumentMetadata UniversalCorrectionDocumentMetadata = 58;
    if (has_universalcorrectiondocumentmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->universalcorrectiondocumentmetadata());
    }

  }
  if (_has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    // optional .Diadoc.Api.Proto.Documents.UniversalTransferDocument.UniversalCorrectionDocumentRevisionMetadata UniversalCorrectionDocumentRevisionMetadata = 59;
    if (has_universalcorrectiondocumentrevisionmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->universalcorrectiondocumentrevisionmetadata());
    }

    // optional string ResolutionRouteId = 60 [default = ""];
    if (has_resolutionrouteid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resolutionrouteid());
    }

    // optional string AttachmentVersion = 61;
    if (has_attachmentversion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attachmentversion());
    }

    // optional .Diadoc.Api.Proto.Documents.ProxySignatureStatus ProxySignatureStatus = 62 [default = UnknownProxySignatureStatus];
    if (has_proxysignaturestatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->proxysignaturestatus());
    }

    // required string TypeNamedId = 63;
    if (has_typenamedid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->typenamedid());
    }

    // required string Function = 64;
    if (has_function()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->function());
    }

    // required int32 WorkflowId = 65;
    if (has_workflowid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->workflowid());
    }

    // required string Title = 66;
    if (has_title()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

  }
  if (_has_bits_[65 / 32] & (0xffu << (65 % 32))) {
    // required .Diadoc.Api.Proto.Documents.RecipientReceiptMetadata RecipientReceiptMetadata = 68;
    if (has_recipientreceiptmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recipientreceiptmetadata());
    }

    // required .Diadoc.Api.Proto.Documents.ConfirmationMetadata ConfirmationMetadata = 69;
    if (has_confirmationmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->confirmationmetadata());
    }

    // required .Diadoc.Api.Proto.Documents.RecipientResponseStatus RecipientResponseStatus = 70 [default = RecipientResponseStatusUnknown];
    if (has_recipientresponsestatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->recipientresponsestatus());
    }

    // required .Diadoc.Api.Proto.Documents.AmendmentRequestMetadata AmendmentRequestMetadata = 71;
    if (has_amendmentrequestmetadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->amendmentrequestmetadata());
    }

    // optional .Diadoc.Api.Proto.Documents.Origin Origin = 72;
    if (has_origin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->origin());
    }

  }
  // repeated .Diadoc.Api.Proto.DocumentId InitialDocumentIds = 7;
  total_size += 1 * this->initialdocumentids_size();
  for (int i = 0; i < this->initialdocumentids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->initialdocumentids(i));
  }

  // repeated .Diadoc.Api.Proto.DocumentId SubordinateDocumentIds = 8;
  total_size += 1 * this->subordinatedocumentids_size();
  for (int i = 0; i < this->subordinatedocumentids_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->subordinatedocumentids(i));
  }

  // repeated .Diadoc.Api.Proto.ForwardDocumentEvent ForwardDocumentEvents = 35;
  total_size += 2 * this->forwarddocumentevents_size();
  for (int i = 0; i < this->forwarddocumentevents_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->forwarddocumentevents(i));
  }

  // repeated .Diadoc.Api.Proto.CustomDataItem CustomData = 44;
  total_size += 2 * this->customdata_size();
  for (int i = 0; i < this->customdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->customdata(i));
  }

  // repeated .Diadoc.Api.Proto.Events.MetadataItem Metadata = 67;
  total_size += 2 * this->metadata_size();
  for (int i = 0; i < this->metadata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->metadata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Document::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Document* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Document*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Document::MergeFrom(const Document& from) {
  GOOGLE_CHECK_NE(&from, this);
  initialdocumentids_.MergeFrom(from.initialdocumentids_);
  subordinatedocumentids_.MergeFrom(from.subordinatedocumentids_);
  forwarddocumentevents_.MergeFrom(from.forwarddocumentevents_);
  customdata_.MergeFrom(from.customdata_);
  metadata_.MergeFrom(from.metadata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_indexkey()) {
      set_indexkey(from.indexkey());
    }
    if (from.has_messageid()) {
      set_messageid(from.messageid());
    }
    if (from.has_entityid()) {
      set_entityid(from.entityid());
    }
    if (from.has_creationtimestampticks()) {
      set_creationtimestampticks(from.creationtimestampticks());
    }
    if (from.has_counteragentboxid()) {
      set_counteragentboxid(from.counteragentboxid());
    }
    if (from.has_documenttype()) {
      set_documenttype(from.documenttype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_content()) {
      mutable_content()->::Diadoc::Api::Proto::Content::MergeFrom(from.content());
    }
    if (from.has_filename()) {
      set_filename(from.filename());
    }
    if (from.has_documentdate()) {
      set_documentdate(from.documentdate());
    }
    if (from.has_documentnumber()) {
      set_documentnumber(from.documentnumber());
    }
    if (from.has_nonformalizeddocumentmetadata()) {
      mutable_nonformalizeddocumentmetadata()->::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata::MergeFrom(from.nonformalizeddocumentmetadata());
    }
    if (from.has_invoicemetadata()) {
      mutable_invoicemetadata()->::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceMetadata::MergeFrom(from.invoicemetadata());
    }
    if (from.has_trustconnectionrequestmetadata()) {
      mutable_trustconnectionrequestmetadata()->::Diadoc::Api::Proto::Documents::BilateralDocument::TrustConnectionRequestMetadata::MergeFrom(from.trustconnectionrequestmetadata());
    }
    if (from.has_torg12metadata()) {
      mutable_torg12metadata()->::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::MergeFrom(from.torg12metadata());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_invoicerevisionmetadata()) {
      mutable_invoicerevisionmetadata()->::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceRevisionMetadata::MergeFrom(from.invoicerevisionmetadata());
    }
    if (from.has_invoicecorrectionmetadata()) {
      mutable_invoicecorrectionmetadata()->::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceCorrectionMetadata::MergeFrom(from.invoicecorrectionmetadata());
    }
    if (from.has_invoicecorrectionrevisionmetadata()) {
      mutable_invoicecorrectionrevisionmetadata()->::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceCorrectionRevisionMetadata::MergeFrom(from.invoicecorrectionrevisionmetadata());
    }
    if (from.has_acceptancecertificatemetadata()) {
      mutable_acceptancecertificatemetadata()->::Diadoc::Api::Proto::Documents::AcceptanceCertificateDocument::AcceptanceCertificateMetadata::MergeFrom(from.acceptancecertificatemetadata());
    }
    if (from.has_proformainvoicemetadata()) {
      mutable_proformainvoicemetadata()->::Diadoc::Api::Proto::Documents::UnilateralDocument::ProformaInvoiceMetadata::MergeFrom(from.proformainvoicemetadata());
    }
    if (from.has_xmltorg12metadata()) {
      mutable_xmltorg12metadata()->::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::MergeFrom(from.xmltorg12metadata());
    }
    if (from.has_xmlacceptancecertificatemetadata()) {
      mutable_xmlacceptancecertificatemetadata()->::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::MergeFrom(from.xmlacceptancecertificatemetadata());
    }
    if (from.has_isdeleted()) {
      set_isdeleted(from.isdeleted());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_departmentid()) {
      set_departmentid(from.departmentid());
    }
    if (from.has_istest()) {
      set_istest(from.istest());
    }
    if (from.has_fromdepartmentid()) {
      set_fromdepartmentid(from.fromdepartmentid());
    }
    if (from.has_todepartmentid()) {
      set_todepartmentid(from.todepartmentid());
    }
    if (from.has_pricelistmetadata()) {
      mutable_pricelistmetadata()->::Diadoc::Api::Proto::Documents::BilateralDocument::PriceListMetadata::MergeFrom(from.pricelistmetadata());
    }
    if (from.has_customdocumentid()) {
      set_customdocumentid(from.customdocumentid());
    }
    if (from.has_resolutionstatus()) {
      mutable_resolutionstatus()->::Diadoc::Api::Proto::Documents::ResolutionStatus::MergeFrom(from.resolutionstatus());
    }
    if (from.has_revocationstatus()) {
      set_revocationstatus(from.revocationstatus());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_sendtimestampticks()) {
      set_sendtimestampticks(from.sendtimestampticks());
    }
    if (from.has_deliverytimestampticks()) {
      set_deliverytimestampticks(from.deliverytimestampticks());
    }
    if (from.has_reconciliationactmetadata()) {
      mutable_reconciliationactmetadata()->::Diadoc::Api::Proto::Documents::BilateralDocument::BilateralDocumentMetadata::MergeFrom(from.reconciliationactmetadata());
    }
    if (from.has_contractmetadata()) {
      mutable_contractmetadata()->::Diadoc::Api::Proto::Documents::BilateralDocument::ContractMetadata::MergeFrom(from.contractmetadata());
    }
    if (from.has_torg13metadata()) {
      mutable_torg13metadata()->::Diadoc::Api::Proto::Documents::BilateralDocument::BasicDocumentMetadata::MergeFrom(from.torg13metadata());
    }
    if (from.has_servicedetailsmetadata()) {
      mutable_servicedetailsmetadata()->::Diadoc::Api::Proto::Documents::UnilateralDocument::ServiceDetailsMetadata::MergeFrom(from.servicedetailsmetadata());
    }
    if (from.has_roamingnotificationstatus()) {
      set_roamingnotificationstatus(from.roamingnotificationstatus());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_hascustomprintform()) {
      set_hascustomprintform(from.hascustomprintform());
    }
    if (from.has_packetid()) {
      set_packetid(from.packetid());
    }
    if (from.has_documentdirection()) {
      set_documentdirection(from.documentdirection());
    }
    if (from.has_lastmodificationtimestampticks()) {
      set_lastmodificationtimestampticks(from.lastmodificationtimestampticks());
    }
    if (from.has_isencryptedcontent()) {
      set_isencryptedcontent(from.isencryptedcontent());
    }
    if (from.has_sendersignaturestatus()) {
      set_sendersignaturestatus(from.sendersignaturestatus());
    }
    if (from.has_supplementaryagreementmetadata()) {
      mutable_supplementaryagreementmetadata()->::Diadoc::Api::Proto::Documents::BilateralDocument::SupplementaryAgreementMetadata::MergeFrom(from.supplementaryagreementmetadata());
    }
  }
  if (from._has_bits_[48 / 32] & (0xffu << (48 % 32))) {
    if (from.has_isread()) {
      set_isread(from.isread());
    }
    if (from.has_roamingnotificationstatusdescription()) {
      set_roamingnotificationstatusdescription(from.roamingnotificationstatusdescription());
    }
    if (from.has_packetislocked()) {
      set_packetislocked(from.packetislocked());
    }
    if (from.has_pricelistagreementmetadata()) {
      mutable_pricelistagreementmetadata()->::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata::MergeFrom(from.pricelistagreementmetadata());
    }
    if (from.has_certificateregistrymetadata()) {
      mutable_certificateregistrymetadata()->::Diadoc::Api::Proto::Documents::NonformalizedDocument::NonformalizedDocumentMetadata::MergeFrom(from.certificateregistrymetadata());
    }
    if (from.has_universaltransferdocumentmetadata()) {
      mutable_universaltransferdocumentmetadata()->::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalTransferDocumentMetadata::MergeFrom(from.universaltransferdocumentmetadata());
    }
    if (from.has_universaltransferdocumentrevisionmetadata()) {
      mutable_universaltransferdocumentrevisionmetadata()->::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalTransferDocumentRevisionMetadata::MergeFrom(from.universaltransferdocumentrevisionmetadata());
    }
    if (from.has_universalcorrectiondocumentmetadata()) {
      mutable_universalcorrectiondocumentmetadata()->::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalCorrectionDocumentMetadata::MergeFrom(from.universalcorrectiondocumentmetadata());
    }
  }
  if (from._has_bits_[56 / 32] & (0xffu << (56 % 32))) {
    if (from.has_universalcorrectiondocumentrevisionmetadata()) {
      mutable_universalcorrectiondocumentrevisionmetadata()->::Diadoc::Api::Proto::Documents::UniversalTransferDocument::UniversalCorrectionDocumentRevisionMetadata::MergeFrom(from.universalcorrectiondocumentrevisionmetadata());
    }
    if (from.has_resolutionrouteid()) {
      set_resolutionrouteid(from.resolutionrouteid());
    }
    if (from.has_attachmentversion()) {
      set_attachmentversion(from.attachmentversion());
    }
    if (from.has_proxysignaturestatus()) {
      set_proxysignaturestatus(from.proxysignaturestatus());
    }
    if (from.has_typenamedid()) {
      set_typenamedid(from.typenamedid());
    }
    if (from.has_function()) {
      set_function(from.function());
    }
    if (from.has_workflowid()) {
      set_workflowid(from.workflowid());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
  }
  if (from._has_bits_[65 / 32] & (0xffu << (65 % 32))) {
    if (from.has_recipientreceiptmetadata()) {
      mutable_recipientreceiptmetadata()->::Diadoc::Api::Proto::Documents::RecipientReceiptMetadata::MergeFrom(from.recipientreceiptmetadata());
    }
    if (from.has_confirmationmetadata()) {
      mutable_confirmationmetadata()->::Diadoc::Api::Proto::Documents::ConfirmationMetadata::MergeFrom(from.confirmationmetadata());
    }
    if (from.has_recipientresponsestatus()) {
      set_recipientresponsestatus(from.recipientresponsestatus());
    }
    if (from.has_amendmentrequestmetadata()) {
      mutable_amendmentrequestmetadata()->::Diadoc::Api::Proto::Documents::AmendmentRequestMetadata::MergeFrom(from.amendmentrequestmetadata());
    }
    if (from.has_origin()) {
      mutable_origin()->::Diadoc::Api::Proto::Documents::Origin::MergeFrom(from.origin());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Document::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Document::CopyFrom(const Document& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Document::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if ((_has_bits_[1] & 0xf0000000) != 0xf0000000) return false;
  if ((_has_bits_[2] & 0x0000001e) != 0x0000001e) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->initialdocumentids())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->subordinatedocumentids())) return false;
  if (has_content()) {
    if (!this->content().IsInitialized()) return false;
  }
  if (has_invoicemetadata()) {
    if (!this->invoicemetadata().IsInitialized()) return false;
  }
  if (has_torg12metadata()) {
    if (!this->torg12metadata().IsInitialized()) return false;
  }
  if (has_invoicerevisionmetadata()) {
    if (!this->invoicerevisionmetadata().IsInitialized()) return false;
  }
  if (has_invoicecorrectionmetadata()) {
    if (!this->invoicecorrectionmetadata().IsInitialized()) return false;
  }
  if (has_invoicecorrectionrevisionmetadata()) {
    if (!this->invoicecorrectionrevisionmetadata().IsInitialized()) return false;
  }
  if (has_acceptancecertificatemetadata()) {
    if (!this->acceptancecertificatemetadata().IsInitialized()) return false;
  }
  if (has_proformainvoicemetadata()) {
    if (!this->proformainvoicemetadata().IsInitialized()) return false;
  }
  if (has_xmltorg12metadata()) {
    if (!this->xmltorg12metadata().IsInitialized()) return false;
  }
  if (has_xmlacceptancecertificatemetadata()) {
    if (!this->xmlacceptancecertificatemetadata().IsInitialized()) return false;
  }
  if (has_resolutionstatus()) {
    if (!this->resolutionstatus().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->forwarddocumentevents())) return false;
  if (has_torg13metadata()) {
    if (!this->torg13metadata().IsInitialized()) return false;
  }
  if (has_servicedetailsmetadata()) {
    if (!this->servicedetailsmetadata().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->customdata())) return false;
  if (has_supplementaryagreementmetadata()) {
    if (!this->supplementaryagreementmetadata().IsInitialized()) return false;
  }
  if (has_universaltransferdocumentmetadata()) {
    if (!this->universaltransferdocumentmetadata().IsInitialized()) return false;
  }
  if (has_universaltransferdocumentrevisionmetadata()) {
    if (!this->universaltransferdocumentrevisionmetadata().IsInitialized()) return false;
  }
  if (has_universalcorrectiondocumentmetadata()) {
    if (!this->universalcorrectiondocumentmetadata().IsInitialized()) return false;
  }
  if (has_universalcorrectiondocumentrevisionmetadata()) {
    if (!this->universalcorrectiondocumentrevisionmetadata().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->metadata())) return false;
  if (has_recipientreceiptmetadata()) {
    if (!this->recipientreceiptmetadata().IsInitialized()) return false;
  }
  if (has_confirmationmetadata()) {
    if (!this->confirmationmetadata().IsInitialized()) return false;
  }
  if (has_amendmentrequestmetadata()) {
    if (!this->amendmentrequestmetadata().IsInitialized()) return false;
  }
  if (has_origin()) {
    if (!this->origin().IsInitialized()) return false;
  }
  return true;
}

void Document::Swap(Document* other) {
  if (other != this) {
    std::swap(indexkey_, other->indexkey_);
    std::swap(messageid_, other->messageid_);
    std::swap(entityid_, other->entityid_);
    std::swap(creationtimestampticks_, other->creationtimestampticks_);
    std::swap(counteragentboxid_, other->counteragentboxid_);
    std::swap(documenttype_, other->documenttype_);
    initialdocumentids_.Swap(&other->initialdocumentids_);
    subordinatedocumentids_.Swap(&other->subordinatedocumentids_);
    std::swap(content_, other->content_);
    std::swap(filename_, other->filename_);
    std::swap(documentdate_, other->documentdate_);
    std::swap(documentnumber_, other->documentnumber_);
    std::swap(nonformalizeddocumentmetadata_, other->nonformalizeddocumentmetadata_);
    std::swap(invoicemetadata_, other->invoicemetadata_);
    std::swap(trustconnectionrequestmetadata_, other->trustconnectionrequestmetadata_);
    std::swap(torg12metadata_, other->torg12metadata_);
    std::swap(invoicerevisionmetadata_, other->invoicerevisionmetadata_);
    std::swap(invoicecorrectionmetadata_, other->invoicecorrectionmetadata_);
    std::swap(invoicecorrectionrevisionmetadata_, other->invoicecorrectionrevisionmetadata_);
    std::swap(acceptancecertificatemetadata_, other->acceptancecertificatemetadata_);
    std::swap(proformainvoicemetadata_, other->proformainvoicemetadata_);
    std::swap(xmltorg12metadata_, other->xmltorg12metadata_);
    std::swap(xmlacceptancecertificatemetadata_, other->xmlacceptancecertificatemetadata_);
    std::swap(isdeleted_, other->isdeleted_);
    std::swap(departmentid_, other->departmentid_);
    std::swap(istest_, other->istest_);
    std::swap(fromdepartmentid_, other->fromdepartmentid_);
    std::swap(todepartmentid_, other->todepartmentid_);
    std::swap(pricelistmetadata_, other->pricelistmetadata_);
    std::swap(customdocumentid_, other->customdocumentid_);
    std::swap(resolutionstatus_, other->resolutionstatus_);
    std::swap(revocationstatus_, other->revocationstatus_);
    std::swap(sendtimestampticks_, other->sendtimestampticks_);
    std::swap(deliverytimestampticks_, other->deliverytimestampticks_);
    forwarddocumentevents_.Swap(&other->forwarddocumentevents_);
    std::swap(reconciliationactmetadata_, other->reconciliationactmetadata_);
    std::swap(contractmetadata_, other->contractmetadata_);
    std::swap(torg13metadata_, other->torg13metadata_);
    std::swap(servicedetailsmetadata_, other->servicedetailsmetadata_);
    std::swap(roamingnotificationstatus_, other->roamingnotificationstatus_);
    std::swap(hascustomprintform_, other->hascustomprintform_);
    customdata_.Swap(&other->customdata_);
    std::swap(packetid_, other->packetid_);
    std::swap(documentdirection_, other->documentdirection_);
    std::swap(lastmodificationtimestampticks_, other->lastmodificationtimestampticks_);
    std::swap(isencryptedcontent_, other->isencryptedcontent_);
    std::swap(sendersignaturestatus_, other->sendersignaturestatus_);
    std::swap(supplementaryagreementmetadata_, other->supplementaryagreementmetadata_);
    std::swap(isread_, other->isread_);
    std::swap(roamingnotificationstatusdescription_, other->roamingnotificationstatusdescription_);
    std::swap(packetislocked_, other->packetislocked_);
    std::swap(pricelistagreementmetadata_, other->pricelistagreementmetadata_);
    std::swap(certificateregistrymetadata_, other->certificateregistrymetadata_);
    std::swap(universaltransferdocumentmetadata_, other->universaltransferdocumentmetadata_);
    std::swap(universaltransferdocumentrevisionmetadata_, other->universaltransferdocumentrevisionmetadata_);
    std::swap(universalcorrectiondocumentmetadata_, other->universalcorrectiondocumentmetadata_);
    std::swap(universalcorrectiondocumentrevisionmetadata_, other->universalcorrectiondocumentrevisionmetadata_);
    std::swap(resolutionrouteid_, other->resolutionrouteid_);
    std::swap(attachmentversion_, other->attachmentversion_);
    std::swap(proxysignaturestatus_, other->proxysignaturestatus_);
    std::swap(typenamedid_, other->typenamedid_);
    std::swap(function_, other->function_);
    std::swap(workflowid_, other->workflowid_);
    std::swap(title_, other->title_);
    metadata_.Swap(&other->metadata_);
    std::swap(recipientreceiptmetadata_, other->recipientreceiptmetadata_);
    std::swap(confirmationmetadata_, other->confirmationmetadata_);
    std::swap(recipientresponsestatus_, other->recipientresponsestatus_);
    std::swap(amendmentrequestmetadata_, other->amendmentrequestmetadata_);
    std::swap(origin_, other->origin_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    std::swap(_has_bits_[2], other->_has_bits_[2]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Document::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Document_descriptor_;
  metadata.reflection = Document_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResolutionStatus::kTypeFieldNumber;
const int ResolutionStatus::kTargetFieldNumber;
const int ResolutionStatus::kAuthorUserIdFieldNumber;
const int ResolutionStatus::kAuthorFIOFieldNumber;
#endif  // !_MSC_VER

ResolutionStatus::ResolutionStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Documents.ResolutionStatus)
}

void ResolutionStatus::InitAsDefaultInstance() {
  target_ = const_cast< ::Diadoc::Api::Proto::ResolutionTarget*>(&::Diadoc::Api::Proto::ResolutionTarget::default_instance());
}

ResolutionStatus::ResolutionStatus(const ResolutionStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Documents.ResolutionStatus)
}

void ResolutionStatus::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = -1;
  target_ = NULL;
  authoruserid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authorfio_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResolutionStatus::~ResolutionStatus() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Documents.ResolutionStatus)
  SharedDtor();
}

void ResolutionStatus::SharedDtor() {
  if (authoruserid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete authoruserid_;
  }
  if (authorfio_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete authorfio_;
  }
  if (this != default_instance_) {
    delete target_;
  }
}

void ResolutionStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResolutionStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResolutionStatus_descriptor_;
}

const ResolutionStatus& ResolutionStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fDocument_2eproto();
  return *default_instance_;
}

ResolutionStatus* ResolutionStatus::default_instance_ = NULL;

ResolutionStatus* ResolutionStatus::New() const {
  return new ResolutionStatus;
}

void ResolutionStatus::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    type_ = -1;
    if (has_target()) {
      if (target_ != NULL) target_->::Diadoc::Api::Proto::ResolutionTarget::Clear();
    }
    if (has_authoruserid()) {
      if (authoruserid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        authoruserid_->clear();
      }
    }
    if (has_authorfio()) {
      if (authorfio_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        authorfio_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResolutionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Documents.ResolutionStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Diadoc.Api.Proto.Documents.ResolutionStatusType Type = 1 [default = UnknownResolutionStatus];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::ResolutionStatusType_IsValid(value)) {
            set_type(static_cast< ::Diadoc::Api::Proto::Documents::ResolutionStatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Target;
        break;
      }

      // optional .Diadoc.Api.Proto.ResolutionTarget Target = 2;
      case 2: {
        if (tag == 18) {
         parse_Target:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_target()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_AuthorUserId;
        break;
      }

      // required string AuthorUserId = 3;
      case 3: {
        if (tag == 26) {
         parse_AuthorUserId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authoruserid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authoruserid().data(), this->authoruserid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "authoruserid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_AuthorFIO;
        break;
      }

      // required string AuthorFIO = 4;
      case 4: {
        if (tag == 34) {
         parse_AuthorFIO:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authorfio()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authorfio().data(), this->authorfio().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "authorfio");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Documents.ResolutionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Documents.ResolutionStatus)
  return false;
#undef DO_
}

void ResolutionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Documents.ResolutionStatus)
  // optional .Diadoc.Api.Proto.Documents.ResolutionStatusType Type = 1 [default = UnknownResolutionStatus];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .Diadoc.Api.Proto.ResolutionTarget Target = 2;
  if (has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->target(), output);
  }

  // required string AuthorUserId = 3;
  if (has_authoruserid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authoruserid().data(), this->authoruserid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "authoruserid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->authoruserid(), output);
  }

  // required string AuthorFIO = 4;
  if (has_authorfio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authorfio().data(), this->authorfio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "authorfio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->authorfio(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Documents.ResolutionStatus)
}

::google::protobuf::uint8* ResolutionStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Documents.ResolutionStatus)
  // optional .Diadoc.Api.Proto.Documents.ResolutionStatusType Type = 1 [default = UnknownResolutionStatus];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .Diadoc.Api.Proto.ResolutionTarget Target = 2;
  if (has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->target(), target);
  }

  // required string AuthorUserId = 3;
  if (has_authoruserid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authoruserid().data(), this->authoruserid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "authoruserid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->authoruserid(), target);
  }

  // required string AuthorFIO = 4;
  if (has_authorfio()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authorfio().data(), this->authorfio().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "authorfio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->authorfio(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Documents.ResolutionStatus)
  return target;
}

int ResolutionStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Diadoc.Api.Proto.Documents.ResolutionStatusType Type = 1 [default = UnknownResolutionStatus];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .Diadoc.Api.Proto.ResolutionTarget Target = 2;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->target());
    }

    // required string AuthorUserId = 3;
    if (has_authoruserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authoruserid());
    }

    // required string AuthorFIO = 4;
    if (has_authorfio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authorfio());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResolutionStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResolutionStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResolutionStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResolutionStatus::MergeFrom(const ResolutionStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_target()) {
      mutable_target()->::Diadoc::Api::Proto::ResolutionTarget::MergeFrom(from.target());
    }
    if (from.has_authoruserid()) {
      set_authoruserid(from.authoruserid());
    }
    if (from.has_authorfio()) {
      set_authorfio(from.authorfio());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResolutionStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResolutionStatus::CopyFrom(const ResolutionStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolutionStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;

  return true;
}

void ResolutionStatus::Swap(ResolutionStatus* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(target_, other->target_);
    std::swap(authoruserid_, other->authoruserid_);
    std::swap(authorfio_, other->authorfio_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResolutionStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResolutionStatus_descriptor_;
  metadata.reflection = ResolutionStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RecipientReceiptMetadata::kReceiptStatusFieldNumber;
const int RecipientReceiptMetadata::kConfirmationMetadataFieldNumber;
#endif  // !_MSC_VER

RecipientReceiptMetadata::RecipientReceiptMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Documents.RecipientReceiptMetadata)
}

void RecipientReceiptMetadata::InitAsDefaultInstance() {
  confirmationmetadata_ = const_cast< ::Diadoc::Api::Proto::Documents::ConfirmationMetadata*>(&::Diadoc::Api::Proto::Documents::ConfirmationMetadata::default_instance());
}

RecipientReceiptMetadata::RecipientReceiptMetadata(const RecipientReceiptMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Documents.RecipientReceiptMetadata)
}

void RecipientReceiptMetadata::SharedCtor() {
  _cached_size_ = 0;
  receiptstatus_ = 0;
  confirmationmetadata_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecipientReceiptMetadata::~RecipientReceiptMetadata() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Documents.RecipientReceiptMetadata)
  SharedDtor();
}

void RecipientReceiptMetadata::SharedDtor() {
  if (this != default_instance_) {
    delete confirmationmetadata_;
  }
}

void RecipientReceiptMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecipientReceiptMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecipientReceiptMetadata_descriptor_;
}

const RecipientReceiptMetadata& RecipientReceiptMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fDocument_2eproto();
  return *default_instance_;
}

RecipientReceiptMetadata* RecipientReceiptMetadata::default_instance_ = NULL;

RecipientReceiptMetadata* RecipientReceiptMetadata::New() const {
  return new RecipientReceiptMetadata;
}

void RecipientReceiptMetadata::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    receiptstatus_ = 0;
    if (has_confirmationmetadata()) {
      if (confirmationmetadata_ != NULL) confirmationmetadata_->::Diadoc::Api::Proto::Documents::ConfirmationMetadata::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RecipientReceiptMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Documents.RecipientReceiptMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 1 [default = GeneralReceiptStatusUnknown];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::GeneralReceiptStatus_IsValid(value)) {
            set_receiptstatus(static_cast< ::Diadoc::Api::Proto::Documents::GeneralReceiptStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ConfirmationMetadata;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.ConfirmationMetadata ConfirmationMetadata = 2;
      case 2: {
        if (tag == 18) {
         parse_ConfirmationMetadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_confirmationmetadata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Documents.RecipientReceiptMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Documents.RecipientReceiptMetadata)
  return false;
#undef DO_
}

void RecipientReceiptMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Documents.RecipientReceiptMetadata)
  // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 1 [default = GeneralReceiptStatusUnknown];
  if (has_receiptstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->receiptstatus(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.ConfirmationMetadata ConfirmationMetadata = 2;
  if (has_confirmationmetadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->confirmationmetadata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Documents.RecipientReceiptMetadata)
}

::google::protobuf::uint8* RecipientReceiptMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Documents.RecipientReceiptMetadata)
  // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 1 [default = GeneralReceiptStatusUnknown];
  if (has_receiptstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->receiptstatus(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.ConfirmationMetadata ConfirmationMetadata = 2;
  if (has_confirmationmetadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->confirmationmetadata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Documents.RecipientReceiptMetadata)
  return target;
}

int RecipientReceiptMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 1 [default = GeneralReceiptStatusUnknown];
    if (has_receiptstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->receiptstatus());
    }

    // optional .Diadoc.Api.Proto.Documents.ConfirmationMetadata ConfirmationMetadata = 2;
    if (has_confirmationmetadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->confirmationmetadata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecipientReceiptMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RecipientReceiptMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RecipientReceiptMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RecipientReceiptMetadata::MergeFrom(const RecipientReceiptMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_receiptstatus()) {
      set_receiptstatus(from.receiptstatus());
    }
    if (from.has_confirmationmetadata()) {
      mutable_confirmationmetadata()->::Diadoc::Api::Proto::Documents::ConfirmationMetadata::MergeFrom(from.confirmationmetadata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RecipientReceiptMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecipientReceiptMetadata::CopyFrom(const RecipientReceiptMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecipientReceiptMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_confirmationmetadata()) {
    if (!this->confirmationmetadata().IsInitialized()) return false;
  }
  return true;
}

void RecipientReceiptMetadata::Swap(RecipientReceiptMetadata* other) {
  if (other != this) {
    std::swap(receiptstatus_, other->receiptstatus_);
    std::swap(confirmationmetadata_, other->confirmationmetadata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RecipientReceiptMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecipientReceiptMetadata_descriptor_;
  metadata.reflection = RecipientReceiptMetadata_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConfirmationMetadata::kReceiptStatusFieldNumber;
const int ConfirmationMetadata::kDateTimeTicksFieldNumber;
#endif  // !_MSC_VER

ConfirmationMetadata::ConfirmationMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Documents.ConfirmationMetadata)
}

void ConfirmationMetadata::InitAsDefaultInstance() {
}

ConfirmationMetadata::ConfirmationMetadata(const ConfirmationMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Documents.ConfirmationMetadata)
}

void ConfirmationMetadata::SharedCtor() {
  _cached_size_ = 0;
  receiptstatus_ = 0;
  datetimeticks_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConfirmationMetadata::~ConfirmationMetadata() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Documents.ConfirmationMetadata)
  SharedDtor();
}

void ConfirmationMetadata::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ConfirmationMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfirmationMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfirmationMetadata_descriptor_;
}

const ConfirmationMetadata& ConfirmationMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fDocument_2eproto();
  return *default_instance_;
}

ConfirmationMetadata* ConfirmationMetadata::default_instance_ = NULL;

ConfirmationMetadata* ConfirmationMetadata::New() const {
  return new ConfirmationMetadata;
}

void ConfirmationMetadata::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ConfirmationMetadata*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(datetimeticks_, receiptstatus_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConfirmationMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Documents.ConfirmationMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 1 [default = GeneralReceiptStatusUnknown];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::GeneralReceiptStatus_IsValid(value)) {
            set_receiptstatus(static_cast< ::Diadoc::Api::Proto::Documents::GeneralReceiptStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_DateTimeTicks;
        break;
      }

      // required sfixed64 DateTimeTicks = 2;
      case 2: {
        if (tag == 17) {
         parse_DateTimeTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &datetimeticks_)));
          set_has_datetimeticks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Documents.ConfirmationMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Documents.ConfirmationMetadata)
  return false;
#undef DO_
}

void ConfirmationMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Documents.ConfirmationMetadata)
  // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 1 [default = GeneralReceiptStatusUnknown];
  if (has_receiptstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->receiptstatus(), output);
  }

  // required sfixed64 DateTimeTicks = 2;
  if (has_datetimeticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(2, this->datetimeticks(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Documents.ConfirmationMetadata)
}

::google::protobuf::uint8* ConfirmationMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Documents.ConfirmationMetadata)
  // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 1 [default = GeneralReceiptStatusUnknown];
  if (has_receiptstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->receiptstatus(), target);
  }

  // required sfixed64 DateTimeTicks = 2;
  if (has_datetimeticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(2, this->datetimeticks(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Documents.ConfirmationMetadata)
  return target;
}

int ConfirmationMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 1 [default = GeneralReceiptStatusUnknown];
    if (has_receiptstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->receiptstatus());
    }

    // required sfixed64 DateTimeTicks = 2;
    if (has_datetimeticks()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfirmationMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConfirmationMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConfirmationMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConfirmationMetadata::MergeFrom(const ConfirmationMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_receiptstatus()) {
      set_receiptstatus(from.receiptstatus());
    }
    if (from.has_datetimeticks()) {
      set_datetimeticks(from.datetimeticks());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConfirmationMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmationMetadata::CopyFrom(const ConfirmationMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmationMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ConfirmationMetadata::Swap(ConfirmationMetadata* other) {
  if (other != this) {
    std::swap(receiptstatus_, other->receiptstatus_);
    std::swap(datetimeticks_, other->datetimeticks_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConfirmationMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfirmationMetadata_descriptor_;
  metadata.reflection = ConfirmationMetadata_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AmendmentRequestMetadata::kAmendmentFlagsFieldNumber;
const int AmendmentRequestMetadata::kReceiptStatusFieldNumber;
#endif  // !_MSC_VER

AmendmentRequestMetadata::AmendmentRequestMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Documents.AmendmentRequestMetadata)
}

void AmendmentRequestMetadata::InitAsDefaultInstance() {
}

AmendmentRequestMetadata::AmendmentRequestMetadata(const AmendmentRequestMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Documents.AmendmentRequestMetadata)
}

void AmendmentRequestMetadata::SharedCtor() {
  _cached_size_ = 0;
  amendmentflags_ = 0;
  receiptstatus_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AmendmentRequestMetadata::~AmendmentRequestMetadata() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Documents.AmendmentRequestMetadata)
  SharedDtor();
}

void AmendmentRequestMetadata::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AmendmentRequestMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AmendmentRequestMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AmendmentRequestMetadata_descriptor_;
}

const AmendmentRequestMetadata& AmendmentRequestMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fDocument_2eproto();
  return *default_instance_;
}

AmendmentRequestMetadata* AmendmentRequestMetadata::default_instance_ = NULL;

AmendmentRequestMetadata* AmendmentRequestMetadata::New() const {
  return new AmendmentRequestMetadata;
}

void AmendmentRequestMetadata::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<AmendmentRequestMetadata*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(amendmentflags_, receiptstatus_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AmendmentRequestMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Documents.AmendmentRequestMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 AmendmentFlags = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amendmentflags_)));
          set_has_amendmentflags();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ReceiptStatus;
        break;
      }

      // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 2 [default = GeneralReceiptStatusUnknown];
      case 2: {
        if (tag == 16) {
         parse_ReceiptStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::GeneralReceiptStatus_IsValid(value)) {
            set_receiptstatus(static_cast< ::Diadoc::Api::Proto::Documents::GeneralReceiptStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Documents.AmendmentRequestMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Documents.AmendmentRequestMetadata)
  return false;
#undef DO_
}

void AmendmentRequestMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Documents.AmendmentRequestMetadata)
  // required int32 AmendmentFlags = 1;
  if (has_amendmentflags()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->amendmentflags(), output);
  }

  // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 2 [default = GeneralReceiptStatusUnknown];
  if (has_receiptstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->receiptstatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Documents.AmendmentRequestMetadata)
}

::google::protobuf::uint8* AmendmentRequestMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Documents.AmendmentRequestMetadata)
  // required int32 AmendmentFlags = 1;
  if (has_amendmentflags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->amendmentflags(), target);
  }

  // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 2 [default = GeneralReceiptStatusUnknown];
  if (has_receiptstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->receiptstatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Documents.AmendmentRequestMetadata)
  return target;
}

int AmendmentRequestMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 AmendmentFlags = 1;
    if (has_amendmentflags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amendmentflags());
    }

    // required .Diadoc.Api.Proto.Documents.GeneralReceiptStatus ReceiptStatus = 2 [default = GeneralReceiptStatusUnknown];
    if (has_receiptstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->receiptstatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AmendmentRequestMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AmendmentRequestMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AmendmentRequestMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AmendmentRequestMetadata::MergeFrom(const AmendmentRequestMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_amendmentflags()) {
      set_amendmentflags(from.amendmentflags());
    }
    if (from.has_receiptstatus()) {
      set_receiptstatus(from.receiptstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AmendmentRequestMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AmendmentRequestMetadata::CopyFrom(const AmendmentRequestMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AmendmentRequestMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AmendmentRequestMetadata::Swap(AmendmentRequestMetadata* other) {
  if (other != this) {
    std::swap(amendmentflags_, other->amendmentflags_);
    std::swap(receiptstatus_, other->receiptstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AmendmentRequestMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AmendmentRequestMetadata_descriptor_;
  metadata.reflection = AmendmentRequestMetadata_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Origin::kMessageTypeFieldNumber;
const int Origin::kMessageIdFieldNumber;
#endif  // !_MSC_VER

Origin::Origin()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Documents.Origin)
}

void Origin::InitAsDefaultInstance() {
}

Origin::Origin(const Origin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Documents.Origin)
}

void Origin::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  messagetype_ = 0;
  messageid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Origin::~Origin() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Documents.Origin)
  SharedDtor();
}

void Origin::SharedDtor() {
  if (messageid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messageid_;
  }
  if (this != default_instance_) {
  }
}

void Origin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Origin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Origin_descriptor_;
}

const Origin& Origin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fDocument_2eproto();
  return *default_instance_;
}

Origin* Origin::default_instance_ = NULL;

Origin* Origin::New() const {
  return new Origin;
}

void Origin::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    messagetype_ = 0;
    if (has_messageid()) {
      if (messageid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        messageid_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Origin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Documents.Origin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Diadoc.Api.Proto.Documents.MessageType MessageType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::MessageType_IsValid(value)) {
            set_messagetype(static_cast< ::Diadoc::Api::Proto::Documents::MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_MessageId;
        break;
      }

      // required string MessageId = 2;
      case 2: {
        if (tag == 18) {
         parse_MessageId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messageid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messageid().data(), this->messageid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "messageid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Documents.Origin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Documents.Origin)
  return false;
#undef DO_
}

void Origin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Documents.Origin)
  // required .Diadoc.Api.Proto.Documents.MessageType MessageType = 1;
  if (has_messagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->messagetype(), output);
  }

  // required string MessageId = 2;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messageid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->messageid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Documents.Origin)
}

::google::protobuf::uint8* Origin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Documents.Origin)
  // required .Diadoc.Api.Proto.Documents.MessageType MessageType = 1;
  if (has_messagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->messagetype(), target);
  }

  // required string MessageId = 2;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messageid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->messageid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Documents.Origin)
  return target;
}

int Origin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Diadoc.Api.Proto.Documents.MessageType MessageType = 1;
    if (has_messagetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());
    }

    // required string MessageId = 2;
    if (has_messageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messageid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Origin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Origin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Origin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Origin::MergeFrom(const Origin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_messagetype()) {
      set_messagetype(from.messagetype());
    }
    if (from.has_messageid()) {
      set_messageid(from.messageid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Origin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Origin::CopyFrom(const Origin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Origin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Origin::Swap(Origin* other) {
  if (other != this) {
    std::swap(messagetype_, other->messagetype_);
    std::swap(messageid_, other->messageid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Origin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Origin_descriptor_;
  metadata.reflection = Origin_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Documents
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)

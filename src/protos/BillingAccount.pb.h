// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BillingAccount.proto

#ifndef PROTOBUF_BillingAccount_2eproto__INCLUDED
#define PROTOBUF_BillingAccount_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BillingAccount_2eproto();
void protobuf_AssignDesc_BillingAccount_2eproto();
void protobuf_ShutdownFile_BillingAccount_2eproto();

class BillingAccountList;
class BillingAccount;

// ===================================================================

class BillingAccountList : public ::google::protobuf::Message {
 public:
  BillingAccountList();
  virtual ~BillingAccountList();

  BillingAccountList(const BillingAccountList& from);

  inline BillingAccountList& operator=(const BillingAccountList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BillingAccountList& default_instance();

  void Swap(BillingAccountList* other);

  // implements Message ----------------------------------------------

  BillingAccountList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BillingAccountList& from);
  void MergeFrom(const BillingAccountList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Diadoc.Api.Proto.BillingAccount BillingAccounts = 1;
  inline int billingaccounts_size() const;
  inline void clear_billingaccounts();
  static const int kBillingAccountsFieldNumber = 1;
  inline const ::Diadoc::Api::Proto::BillingAccount& billingaccounts(int index) const;
  inline ::Diadoc::Api::Proto::BillingAccount* mutable_billingaccounts(int index);
  inline ::Diadoc::Api::Proto::BillingAccount* add_billingaccounts();
  inline const ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::BillingAccount >&
      billingaccounts() const;
  inline ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::BillingAccount >*
      mutable_billingaccounts();

  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.BillingAccountList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::BillingAccount > billingaccounts_;
  friend void  protobuf_AddDesc_BillingAccount_2eproto();
  friend void protobuf_AssignDesc_BillingAccount_2eproto();
  friend void protobuf_ShutdownFile_BillingAccount_2eproto();

  void InitAsDefaultInstance();
  static BillingAccountList* default_instance_;
};
// -------------------------------------------------------------------

class BillingAccount : public ::google::protobuf::Message {
 public:
  BillingAccount();
  virtual ~BillingAccount();

  BillingAccount(const BillingAccount& from);

  inline BillingAccount& operator=(const BillingAccount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BillingAccount& default_instance();

  void Swap(BillingAccount* other);

  // implements Message ----------------------------------------------

  BillingAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BillingAccount& from);
  void MergeFrom(const BillingAccount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string AccountId = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 1;
  inline const ::std::string& accountid() const;
  inline void set_accountid(const ::std::string& value);
  inline void set_accountid(const char* value);
  inline void set_accountid(const char* value, size_t size);
  inline ::std::string* mutable_accountid();
  inline ::std::string* release_accountid();
  inline void set_allocated_accountid(::std::string* accountid);

  // required int32 ProductId = 2;
  inline bool has_productid() const;
  inline void clear_productid();
  static const int kProductIdFieldNumber = 2;
  inline ::google::protobuf::int32 productid() const;
  inline void set_productid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Diadoc.Api.Proto.BillingAccount)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_productid();
  inline void clear_has_productid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* accountid_;
  ::google::protobuf::int32 productid_;
  friend void  protobuf_AddDesc_BillingAccount_2eproto();
  friend void protobuf_AssignDesc_BillingAccount_2eproto();
  friend void protobuf_ShutdownFile_BillingAccount_2eproto();

  void InitAsDefaultInstance();
  static BillingAccount* default_instance_;
};
// ===================================================================


// ===================================================================

// BillingAccountList

// repeated .Diadoc.Api.Proto.BillingAccount BillingAccounts = 1;
inline int BillingAccountList::billingaccounts_size() const {
  return billingaccounts_.size();
}
inline void BillingAccountList::clear_billingaccounts() {
  billingaccounts_.Clear();
}
inline const ::Diadoc::Api::Proto::BillingAccount& BillingAccountList::billingaccounts(int index) const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.BillingAccountList.BillingAccounts)
  return billingaccounts_.Get(index);
}
inline ::Diadoc::Api::Proto::BillingAccount* BillingAccountList::mutable_billingaccounts(int index) {
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.BillingAccountList.BillingAccounts)
  return billingaccounts_.Mutable(index);
}
inline ::Diadoc::Api::Proto::BillingAccount* BillingAccountList::add_billingaccounts() {
  // @@protoc_insertion_point(field_add:Diadoc.Api.Proto.BillingAccountList.BillingAccounts)
  return billingaccounts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::BillingAccount >&
BillingAccountList::billingaccounts() const {
  // @@protoc_insertion_point(field_list:Diadoc.Api.Proto.BillingAccountList.BillingAccounts)
  return billingaccounts_;
}
inline ::google::protobuf::RepeatedPtrField< ::Diadoc::Api::Proto::BillingAccount >*
BillingAccountList::mutable_billingaccounts() {
  // @@protoc_insertion_point(field_mutable_list:Diadoc.Api.Proto.BillingAccountList.BillingAccounts)
  return &billingaccounts_;
}

// -------------------------------------------------------------------

// BillingAccount

// required string AccountId = 1;
inline bool BillingAccount::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BillingAccount::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BillingAccount::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BillingAccount::clear_accountid() {
  if (accountid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    accountid_->clear();
  }
  clear_has_accountid();
}
inline const ::std::string& BillingAccount::accountid() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.BillingAccount.AccountId)
  return *accountid_;
}
inline void BillingAccount::set_accountid(const ::std::string& value) {
  set_has_accountid();
  if (accountid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    accountid_ = new ::std::string;
  }
  accountid_->assign(value);
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.BillingAccount.AccountId)
}
inline void BillingAccount::set_accountid(const char* value) {
  set_has_accountid();
  if (accountid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    accountid_ = new ::std::string;
  }
  accountid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Diadoc.Api.Proto.BillingAccount.AccountId)
}
inline void BillingAccount::set_accountid(const char* value, size_t size) {
  set_has_accountid();
  if (accountid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    accountid_ = new ::std::string;
  }
  accountid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Diadoc.Api.Proto.BillingAccount.AccountId)
}
inline ::std::string* BillingAccount::mutable_accountid() {
  set_has_accountid();
  if (accountid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    accountid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Diadoc.Api.Proto.BillingAccount.AccountId)
  return accountid_;
}
inline ::std::string* BillingAccount::release_accountid() {
  clear_has_accountid();
  if (accountid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = accountid_;
    accountid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BillingAccount::set_allocated_accountid(::std::string* accountid) {
  if (accountid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete accountid_;
  }
  if (accountid) {
    set_has_accountid();
    accountid_ = accountid;
  } else {
    clear_has_accountid();
    accountid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Diadoc.Api.Proto.BillingAccount.AccountId)
}

// required int32 ProductId = 2;
inline bool BillingAccount::has_productid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BillingAccount::set_has_productid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BillingAccount::clear_has_productid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BillingAccount::clear_productid() {
  productid_ = 0;
  clear_has_productid();
}
inline ::google::protobuf::int32 BillingAccount::productid() const {
  // @@protoc_insertion_point(field_get:Diadoc.Api.Proto.BillingAccount.ProductId)
  return productid_;
}
inline void BillingAccount::set_productid(::google::protobuf::int32 value) {
  set_has_productid();
  productid_ = value;
  // @@protoc_insertion_point(field_set:Diadoc.Api.Proto.BillingAccount.ProductId)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BillingAccount_2eproto__INCLUDED

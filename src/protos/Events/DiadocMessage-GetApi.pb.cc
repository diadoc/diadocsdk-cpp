// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Events/DiadocMessage-GetApi.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Events/DiadocMessage-GetApi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Events {

namespace {

const ::google::protobuf::Descriptor* BoxEventList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BoxEventList_reflection_ = NULL;
const ::google::protobuf::Descriptor* BoxEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BoxEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Template_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Template_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessagePatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessagePatch_reflection_ = NULL;
const ::google::protobuf::Descriptor* Entity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Entity_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityPatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityPatch_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EntityType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AttachmentType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Events_2fDiadocMessage_2dGetApi_2eproto() {
  protobuf_AddDesc_Events_2fDiadocMessage_2dGetApi_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Events/DiadocMessage-GetApi.proto");
  GOOGLE_CHECK(file != NULL);
  BoxEventList_descriptor_ = file->message_type(0);
  static const int BoxEventList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxEventList, events_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxEventList, totalcount_),
  };
  BoxEventList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BoxEventList_descriptor_,
      BoxEventList::default_instance_,
      BoxEventList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxEventList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxEventList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BoxEventList));
  BoxEvent_descriptor_ = file->message_type(1);
  static const int BoxEvent_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxEvent, eventid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxEvent, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxEvent, patch_),
  };
  BoxEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BoxEvent_descriptor_,
      BoxEvent::default_instance_,
      BoxEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BoxEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BoxEvent));
  Message_descriptor_ = file->message_type(2);
  static const int Message_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, messageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, timestampticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, lastpatchtimestampticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, fromboxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, fromtitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, toboxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, totitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, entities_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, isdraft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, draftislocked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, draftisrecycled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, createdfromdraftid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, draftistransformedtomessageidlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, isdeleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, istest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, isinternal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, isproxified_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, proxyboxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, proxytitle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, packetislocked_),
  };
  Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_descriptor_,
      Message::default_instance_,
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message));
  Template_descriptor_ = file->message_type(3);
  static const int Template_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, messageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, timestampticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, fromboxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, toboxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, messagefromboxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, messagetoboxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, entities_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, isdeleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, messagetodepartmentid_),
  };
  Template_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Template_descriptor_,
      Template::default_instance_,
      Template_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Template, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Template));
  MessagePatch_descriptor_ = file->message_type(4);
  static const int MessagePatch_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, messageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, timestampticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, entities_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, fordraft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, draftisrecycled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, draftistransformedtomessageidlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, draftislocked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, messageisdeleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, entitypatches_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, messageisrestored_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, messageisdelivered_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, deliveredpatchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, patchid_),
  };
  MessagePatch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessagePatch_descriptor_,
      MessagePatch::default_instance_,
      MessagePatch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePatch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessagePatch));
  Entity_descriptor_ = file->message_type(5);
  static const int Entity_offsets_[24] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, entitytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, parententityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, attachmenttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, needrecipientsignature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, signerboxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, notdeliveredeventid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, documentinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, rawcreationdate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, resolutioninfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, signerdepartmentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, resolutionrequestinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, resolutionrequestdenialinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, needreceipt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, packetid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, isapprovementsignature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, isencryptedcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, attachmentversion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, resolutionrouteassignmentinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, resolutionrouteremovalinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, cancellationinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, labels_),
  };
  Entity_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Entity_descriptor_,
      Entity::default_instance_,
      Entity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entity, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Entity));
  EntityPatch_descriptor_ = file->message_type(6);
  static const int EntityPatch_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityPatch, entityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityPatch, documentisdeleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityPatch, movedtodepartment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityPatch, documentisrestored_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityPatch, contentispatched_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityPatch, forwardedtoboxid_),
  };
  EntityPatch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EntityPatch_descriptor_,
      EntityPatch::default_instance_,
      EntityPatch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityPatch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityPatch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EntityPatch));
  EntityType_descriptor_ = file->enum_type(0);
  AttachmentType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Events_2fDiadocMessage_2dGetApi_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BoxEventList_descriptor_, &BoxEventList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BoxEvent_descriptor_, &BoxEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_descriptor_, &Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Template_descriptor_, &Template::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessagePatch_descriptor_, &MessagePatch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Entity_descriptor_, &Entity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EntityPatch_descriptor_, &EntityPatch::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Events_2fDiadocMessage_2dGetApi_2eproto() {
  delete BoxEventList::default_instance_;
  delete BoxEventList_reflection_;
  delete BoxEvent::default_instance_;
  delete BoxEvent_reflection_;
  delete Message::default_instance_;
  delete Message_reflection_;
  delete Template::default_instance_;
  delete Template_reflection_;
  delete MessagePatch::default_instance_;
  delete MessagePatch_reflection_;
  delete Entity::default_instance_;
  delete Entity_reflection_;
  delete EntityPatch::default_instance_;
  delete EntityPatch_reflection_;
}

void protobuf_AddDesc_Events_2fDiadocMessage_2dGetApi_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Diadoc::Api::Proto::protobuf_AddDesc_Content_2eproto();
  ::Diadoc::Api::Proto::protobuf_AddDesc_DocumentId_2eproto();
  ::Diadoc::Api::Proto::Documents::protobuf_AddDesc_Documents_2fDocument_2eproto();
  ::Diadoc::Api::Proto::Events::protobuf_AddDesc_Events_2fCancellationInfo_2eproto();
  ::Diadoc::Api::Proto::Events::protobuf_AddDesc_Events_2fResolutionInfo_2eproto();
  ::Diadoc::Api::Proto::Events::protobuf_AddDesc_Events_2fResolutionRequestInfo_2eproto();
  ::Diadoc::Api::Proto::Events::protobuf_AddDesc_Events_2fResolutionRequestDenialInfo_2eproto();
  ::Diadoc::Api::Proto::Events::protobuf_AddDesc_Events_2fResolutionRouteInfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!Events/DiadocMessage-GetApi.proto\022\027Dia"
    "doc.Api.Proto.Events\032\rContent.proto\032\020Doc"
    "umentId.proto\032\030Documents/Document.proto\032"
    "\035Events/CancellationInfo.proto\032\033Events/R"
    "esolutionInfo.proto\032\"Events/ResolutionRe"
    "questInfo.proto\032(Events/ResolutionReques"
    "tDenialInfo.proto\032 Events/ResolutionRout"
    "eInfo.proto\"U\n\014BoxEventList\0221\n\006Events\030\001 "
    "\003(\0132!.Diadoc.Api.Proto.Events.BoxEvent\022\022"
    "\n\nTotalCount\030\002 \001(\005\"\204\001\n\010BoxEvent\022\017\n\007Event"
    "Id\030\001 \002(\t\0221\n\007Message\030\002 \001(\0132 .Diadoc.Api.P"
    "roto.Events.Message\0224\n\005Patch\030\003 \001(\0132%.Dia"
    "doc.Api.Proto.Events.MessagePatch\"\234\004\n\007Me"
    "ssage\022\021\n\tMessageId\030\001 \002(\t\022\026\n\016TimestampTic"
    "ks\030\002 \002(\020\022\037\n\027LastPatchTimestampTicks\030\003 \002("
    "\020\022\021\n\tFromBoxId\030\004 \002(\t\022\021\n\tFromTitle\030\005 \002(\t\022"
    "\017\n\007ToBoxId\030\006 \001(\t\022\017\n\007ToTitle\030\007 \001(\t\0221\n\010Ent"
    "ities\030\010 \003(\0132\037.Diadoc.Api.Proto.Events.En"
    "tity\022\026\n\007IsDraft\030\t \001(\010:\005false\022\034\n\rDraftIsL"
    "ocked\030\n \001(\010:\005false\022\036\n\017DraftIsRecycled\030\013 "
    "\001(\010:\005false\022\032\n\022CreatedFromDraftId\030\014 \001(\t\022)"
    "\n!DraftIsTransformedToMessageIdList\030\r \003("
    "\t\022\030\n\tIsDeleted\030\016 \001(\010:\005false\022\025\n\006IsTest\030\017 "
    "\001(\010:\005false\022\031\n\nIsInternal\030\020 \001(\010:\005false\022\032\n"
    "\013IsProxified\030\021 \001(\010:\005false\022\022\n\nProxyBoxId\030"
    "\022 \001(\t\022\022\n\nProxyTitle\030\023 \001(\t\022\035\n\016PacketIsLoc"
    "ked\030\024 \001(\010:\005false\"\367\001\n\010Template\022\021\n\tMessage"
    "Id\030\001 \002(\t\022\026\n\016TimestampTicks\030\002 \002(\020\022\021\n\tFrom"
    "BoxId\030\003 \002(\t\022\017\n\007ToBoxId\030\004 \002(\t\022\030\n\020MessageF"
    "romBoxId\030\005 \002(\t\022\026\n\016MessageToBoxId\030\006 \002(\t\0221"
    "\n\010Entities\030\007 \003(\0132\037.Diadoc.Api.Proto.Even"
    "ts.Entity\022\030\n\tIsDeleted\030\010 \001(\010:\005false\022\035\n\025M"
    "essageToDepartmentId\030\t \001(\t\"\274\003\n\014MessagePa"
    "tch\022\021\n\tMessageId\030\001 \002(\t\022\026\n\016TimestampTicks"
    "\030\002 \002(\020\0221\n\010Entities\030\003 \003(\0132\037.Diadoc.Api.Pr"
    "oto.Events.Entity\022\027\n\010ForDraft\030\004 \001(\010:\005fal"
    "se\022\036\n\017DraftIsRecycled\030\005 \001(\010:\005false\022)\n!Dr"
    "aftIsTransformedToMessageIdList\030\006 \003(\t\022\034\n"
    "\rDraftIsLocked\030\007 \001(\010:\005false\022\037\n\020MessageIs"
    "Deleted\030\010 \001(\010:\005false\022;\n\rEntityPatches\030\t "
    "\003(\0132$.Diadoc.Api.Proto.Events.EntityPatc"
    "h\022 \n\021MessageIsRestored\030\n \001(\010:\005false\022!\n\022M"
    "essageIsDelivered\030\013 \001(\010:\005false\022\030\n\020Delive"
    "redPatchId\030\014 \001(\t\022\017\n\007PatchId\030\r \002(\t\"\354\010\n\006En"
    "tity\022J\n\nEntityType\030\001 \001(\0162#.Diadoc.Api.Pr"
    "oto.Events.EntityType:\021UnknownEntityType"
    "\022\020\n\010EntityId\030\002 \002(\t\022\026\n\016ParentEntityId\030\003 \001"
    "(\t\022*\n\007Content\030\004 \001(\0132\031.Diadoc.Api.Proto.C"
    "ontent\022V\n\016AttachmentType\030\005 \001(\0162\'.Diadoc."
    "Api.Proto.Events.AttachmentType:\025Unknown"
    "AttachmentType\022\020\n\010FileName\030\006 \001(\t\022%\n\026Need"
    "RecipientSignature\030\007 \001(\010:\005false\022\023\n\013Signe"
    "rBoxId\030\010 \001(\t\022\033\n\023NotDeliveredEventId\030\n \001("
    "\t\022:\n\014DocumentInfo\030\013 \001(\0132$.Diadoc.Api.Pro"
    "to.Documents.Document\022\032\n\017RawCreationDate"
    "\030\014 \001(\020:\0010\022\?\n\016ResolutionInfo\030\r \001(\0132\'.Diad"
    "oc.Api.Proto.Events.ResolutionInfo\022\032\n\022Si"
    "gnerDepartmentId\030\016 \001(\t\022M\n\025ResolutionRequ"
    "estInfo\030\017 \001(\0132..Diadoc.Api.Proto.Events."
    "ResolutionRequestInfo\022Y\n\033ResolutionReque"
    "stDenialInfo\030\020 \001(\01324.Diadoc.Api.Proto.Ev"
    "ents.ResolutionRequestDenialInfo\022\032\n\013Need"
    "Receipt\030\021 \001(\010:\005false\022\020\n\010PacketId\030\022 \001(\t\022%"
    "\n\026IsApprovementSignature\030\023 \001(\010:\005false\022!\n"
    "\022IsEncryptedContent\030\024 \001(\010:\005false\022\031\n\021Atta"
    "chmentVersion\030\025 \001(\t\022]\n\035ResolutionRouteAs"
    "signmentInfo\030\026 \001(\01326.Diadoc.Api.Proto.Ev"
    "ents.ResolutionRouteAssignmentInfo\022W\n\032Re"
    "solutionRouteRemovalInfo\030\027 \001(\01323.Diadoc."
    "Api.Proto.Events.ResolutionRouteRemovalI"
    "nfo\022C\n\020CancellationInfo\030\030 \001(\0132).Diadoc.A"
    "pi.Proto.Events.CancellationInfo\022\016\n\006Labe"
    "ls\030\031 \003(\t\"\272\001\n\013EntityPatch\022\020\n\010EntityId\030\001 \002"
    "(\t\022 \n\021DocumentIsDeleted\030\002 \001(\010:\005false\022\031\n\021"
    "MovedToDepartment\030\003 \001(\t\022!\n\022DocumentIsRes"
    "tored\030\004 \001(\010:\005false\022\037\n\020ContentIsPatched\030\005"
    " \001(\010:\005false\022\030\n\020ForwardedToBoxId\030\006 \001(\t*B\n"
    "\nEntityType\022\025\n\021UnknownEntityType\020\000\022\016\n\nAt"
    "tachment\020\001\022\r\n\tSignature\020\002*\247\n\n\016Attachment"
    "Type\022\"\n\025UnknownAttachmentType\020\377\377\377\377\377\377\377\377\377\001"
    "\022\021\n\rNonformalized\020\000\022\013\n\007Invoice\020\001\022\022\n\016Invo"
    "iceReceipt\020\002\022\027\n\023InvoiceConfirmation\020\003\022\034\n"
    "\030InvoiceCorrectionRequest\020\004\022\025\n\021Attachmen"
    "tComment\020\005\022\037\n\033DeliveryFailureNotificatio"
    "n\020\006\022\020\n\014EancomInvoic\020\007\022\035\n\031SignatureReques"
    "tRejection\020\010\022(\n$EcrCatConformanceCertifi"
    "cateMetadata\020\t\022\037\n\033SignatureVerificationR"
    "eport\020\n\022\032\n\026TrustConnectionRequest\020\013\022\n\n\006T"
    "org12\020\014\022\023\n\017InvoiceRevision\020\r\022\025\n\021InvoiceC"
    "orrection\020\016\022\035\n\031InvoiceCorrectionRevision"
    "\020\017\022\031\n\025AcceptanceCertificate\020\020\022\022\n\016Structu"
    "redData\020\021\022\023\n\017ProformaInvoice\020\022\022\r\n\tXmlTor"
    "g12\020\023\022\034\n\030XmlAcceptanceCertificate\020\024\022\027\n\023X"
    "mlTorg12BuyerTitle\020\025\022&\n\"XmlAcceptanceCer"
    "tificateBuyerTitle\020\026\022\016\n\nResolution\020\027\022\025\n\021"
    "ResolutionRequest\020\030\022\033\n\027ResolutionRequest"
    "Denial\020\031\022\r\n\tPriceList\020\032\022\013\n\007Receipt\020\033\022\031\n\025"
    "XmlSignatureRejection\020\034\022\025\n\021RevocationReq"
    "uest\020\035\022\026\n\022PriceListAgreement\020\036\022\027\n\023Certif"
    "icateRegistry\020\"\022\025\n\021ReconciliationAct\020#\022\014"
    "\n\010Contract\020$\022\n\n\006Torg13\020%\022\022\n\016ServiceDetai"
    "ls\020&\022\027\n\023RoamingNotification\020\'\022\032\n\026Supplem"
    "entaryAgreement\020(\022\035\n\031UniversalTransferDo"
    "cument\020)\022\'\n#UniversalTransferDocumentBuy"
    "erTitle\020*\022%\n!UniversalTransferDocumentRe"
    "vision\020-\022\037\n\033UniversalCorrectionDocument\020"
    "1\022\'\n#UniversalCorrectionDocumentRevision"
    "\0202\022)\n%UniversalCorrectionDocumentBuyerTi"
    "tle\0203\022\016\n\nCustomData\020@\022\020\n\014MoveDocument\020A\022"
    "\'\n#ResolutionRouteAssignmentAttachment\020B"
    "\022$\n ResolutionRouteRemovalAttachment\020C\022\t"
    "\n\005Title\020D\022\020\n\014Cancellation\020E", 4467);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Events/DiadocMessage-GetApi.proto", &protobuf_RegisterTypes);
  BoxEventList::default_instance_ = new BoxEventList();
  BoxEvent::default_instance_ = new BoxEvent();
  Message::default_instance_ = new Message();
  Template::default_instance_ = new Template();
  MessagePatch::default_instance_ = new MessagePatch();
  Entity::default_instance_ = new Entity();
  EntityPatch::default_instance_ = new EntityPatch();
  BoxEventList::default_instance_->InitAsDefaultInstance();
  BoxEvent::default_instance_->InitAsDefaultInstance();
  Message::default_instance_->InitAsDefaultInstance();
  Template::default_instance_->InitAsDefaultInstance();
  MessagePatch::default_instance_->InitAsDefaultInstance();
  Entity::default_instance_->InitAsDefaultInstance();
  EntityPatch::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Events_2fDiadocMessage_2dGetApi_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Events_2fDiadocMessage_2dGetApi_2eproto {
  StaticDescriptorInitializer_Events_2fDiadocMessage_2dGetApi_2eproto() {
    protobuf_AddDesc_Events_2fDiadocMessage_2dGetApi_2eproto();
  }
} static_descriptor_initializer_Events_2fDiadocMessage_2dGetApi_2eproto_;
const ::google::protobuf::EnumDescriptor* EntityType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityType_descriptor_;
}
bool EntityType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AttachmentType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttachmentType_descriptor_;
}
bool AttachmentType_IsValid(int value) {
  switch(value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 45:
    case 49:
    case 50:
    case 51:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int BoxEventList::kEventsFieldNumber;
const int BoxEventList::kTotalCountFieldNumber;
#endif  // !_MSC_VER

BoxEventList::BoxEventList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Events.BoxEventList)
}

void BoxEventList::InitAsDefaultInstance() {
}

BoxEventList::BoxEventList(const BoxEventList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Events.BoxEventList)
}

void BoxEventList::SharedCtor() {
  _cached_size_ = 0;
  totalcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BoxEventList::~BoxEventList() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Events.BoxEventList)
  SharedDtor();
}

void BoxEventList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BoxEventList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoxEventList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BoxEventList_descriptor_;
}

const BoxEventList& BoxEventList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Events_2fDiadocMessage_2dGetApi_2eproto();
  return *default_instance_;
}

BoxEventList* BoxEventList::default_instance_ = NULL;

BoxEventList* BoxEventList::New() const {
  return new BoxEventList;
}

void BoxEventList::Clear() {
  totalcount_ = 0;
  events_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BoxEventList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Events.BoxEventList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Diadoc.Api.Proto.Events.BoxEvent Events = 1;
      case 1: {
        if (tag == 10) {
         parse_Events:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_Events;
        if (input->ExpectTag(16)) goto parse_TotalCount;
        break;
      }

      // optional int32 TotalCount = 2;
      case 2: {
        if (tag == 16) {
         parse_TotalCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalcount_)));
          set_has_totalcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Events.BoxEventList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Events.BoxEventList)
  return false;
#undef DO_
}

void BoxEventList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Events.BoxEventList)
  // repeated .Diadoc.Api.Proto.Events.BoxEvent Events = 1;
  for (int i = 0; i < this->events_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->events(i), output);
  }

  // optional int32 TotalCount = 2;
  if (has_totalcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->totalcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Events.BoxEventList)
}

::google::protobuf::uint8* BoxEventList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Events.BoxEventList)
  // repeated .Diadoc.Api.Proto.Events.BoxEvent Events = 1;
  for (int i = 0; i < this->events_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->events(i), target);
  }

  // optional int32 TotalCount = 2;
  if (has_totalcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->totalcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Events.BoxEventList)
  return target;
}

int BoxEventList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 TotalCount = 2;
    if (has_totalcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalcount());
    }

  }
  // repeated .Diadoc.Api.Proto.Events.BoxEvent Events = 1;
  total_size += 1 * this->events_size();
  for (int i = 0; i < this->events_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->events(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoxEventList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BoxEventList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BoxEventList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BoxEventList::MergeFrom(const BoxEventList& from) {
  GOOGLE_CHECK_NE(&from, this);
  events_.MergeFrom(from.events_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_totalcount()) {
      set_totalcount(from.totalcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BoxEventList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoxEventList::CopyFrom(const BoxEventList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoxEventList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->events())) return false;
  return true;
}

void BoxEventList::Swap(BoxEventList* other) {
  if (other != this) {
    events_.Swap(&other->events_);
    std::swap(totalcount_, other->totalcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BoxEventList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BoxEventList_descriptor_;
  metadata.reflection = BoxEventList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BoxEvent::kEventIdFieldNumber;
const int BoxEvent::kMessageFieldNumber;
const int BoxEvent::kPatchFieldNumber;
#endif  // !_MSC_VER

BoxEvent::BoxEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Events.BoxEvent)
}

void BoxEvent::InitAsDefaultInstance() {
  message_ = const_cast< ::Diadoc::Api::Proto::Events::Message*>(&::Diadoc::Api::Proto::Events::Message::default_instance());
  patch_ = const_cast< ::Diadoc::Api::Proto::Events::MessagePatch*>(&::Diadoc::Api::Proto::Events::MessagePatch::default_instance());
}

BoxEvent::BoxEvent(const BoxEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Events.BoxEvent)
}

void BoxEvent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  eventid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = NULL;
  patch_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BoxEvent::~BoxEvent() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Events.BoxEvent)
  SharedDtor();
}

void BoxEvent::SharedDtor() {
  if (eventid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete eventid_;
  }
  if (this != default_instance_) {
    delete message_;
    delete patch_;
  }
}

void BoxEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BoxEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BoxEvent_descriptor_;
}

const BoxEvent& BoxEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Events_2fDiadocMessage_2dGetApi_2eproto();
  return *default_instance_;
}

BoxEvent* BoxEvent::default_instance_ = NULL;

BoxEvent* BoxEvent::New() const {
  return new BoxEvent;
}

void BoxEvent::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_eventid()) {
      if (eventid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        eventid_->clear();
      }
    }
    if (has_message()) {
      if (message_ != NULL) message_->::Diadoc::Api::Proto::Events::Message::Clear();
    }
    if (has_patch()) {
      if (patch_ != NULL) patch_->::Diadoc::Api::Proto::Events::MessagePatch::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BoxEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Events.BoxEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string EventId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eventid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->eventid().data(), this->eventid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "eventid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Message;
        break;
      }

      // optional .Diadoc.Api.Proto.Events.Message Message = 2;
      case 2: {
        if (tag == 18) {
         parse_Message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Patch;
        break;
      }

      // optional .Diadoc.Api.Proto.Events.MessagePatch Patch = 3;
      case 3: {
        if (tag == 26) {
         parse_Patch:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_patch()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Events.BoxEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Events.BoxEvent)
  return false;
#undef DO_
}

void BoxEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Events.BoxEvent)
  // required string EventId = 1;
  if (has_eventid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eventid().data(), this->eventid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "eventid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->eventid(), output);
  }

  // optional .Diadoc.Api.Proto.Events.Message Message = 2;
  if (has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->message(), output);
  }

  // optional .Diadoc.Api.Proto.Events.MessagePatch Patch = 3;
  if (has_patch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->patch(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Events.BoxEvent)
}

::google::protobuf::uint8* BoxEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Events.BoxEvent)
  // required string EventId = 1;
  if (has_eventid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eventid().data(), this->eventid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "eventid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->eventid(), target);
  }

  // optional .Diadoc.Api.Proto.Events.Message Message = 2;
  if (has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->message(), target);
  }

  // optional .Diadoc.Api.Proto.Events.MessagePatch Patch = 3;
  if (has_patch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->patch(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Events.BoxEvent)
  return target;
}

int BoxEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string EventId = 1;
    if (has_eventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->eventid());
    }

    // optional .Diadoc.Api.Proto.Events.Message Message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message());
    }

    // optional .Diadoc.Api.Proto.Events.MessagePatch Patch = 3;
    if (has_patch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->patch());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BoxEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BoxEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BoxEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BoxEvent::MergeFrom(const BoxEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_eventid()) {
      set_eventid(from.eventid());
    }
    if (from.has_message()) {
      mutable_message()->::Diadoc::Api::Proto::Events::Message::MergeFrom(from.message());
    }
    if (from.has_patch()) {
      mutable_patch()->::Diadoc::Api::Proto::Events::MessagePatch::MergeFrom(from.patch());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BoxEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoxEvent::CopyFrom(const BoxEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoxEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_message()) {
    if (!this->message().IsInitialized()) return false;
  }
  if (has_patch()) {
    if (!this->patch().IsInitialized()) return false;
  }
  return true;
}

void BoxEvent::Swap(BoxEvent* other) {
  if (other != this) {
    std::swap(eventid_, other->eventid_);
    std::swap(message_, other->message_);
    std::swap(patch_, other->patch_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BoxEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BoxEvent_descriptor_;
  metadata.reflection = BoxEvent_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Message::kMessageIdFieldNumber;
const int Message::kTimestampTicksFieldNumber;
const int Message::kLastPatchTimestampTicksFieldNumber;
const int Message::kFromBoxIdFieldNumber;
const int Message::kFromTitleFieldNumber;
const int Message::kToBoxIdFieldNumber;
const int Message::kToTitleFieldNumber;
const int Message::kEntitiesFieldNumber;
const int Message::kIsDraftFieldNumber;
const int Message::kDraftIsLockedFieldNumber;
const int Message::kDraftIsRecycledFieldNumber;
const int Message::kCreatedFromDraftIdFieldNumber;
const int Message::kDraftIsTransformedToMessageIdListFieldNumber;
const int Message::kIsDeletedFieldNumber;
const int Message::kIsTestFieldNumber;
const int Message::kIsInternalFieldNumber;
const int Message::kIsProxifiedFieldNumber;
const int Message::kProxyBoxIdFieldNumber;
const int Message::kProxyTitleFieldNumber;
const int Message::kPacketIsLockedFieldNumber;
#endif  // !_MSC_VER

Message::Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Events.Message)
}

void Message::InitAsDefaultInstance() {
}

Message::Message(const Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Events.Message)
}

void Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  messageid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestampticks_ = GOOGLE_LONGLONG(0);
  lastpatchtimestampticks_ = GOOGLE_LONGLONG(0);
  fromboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  totitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isdraft_ = false;
  draftislocked_ = false;
  draftisrecycled_ = false;
  createdfromdraftid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isdeleted_ = false;
  istest_ = false;
  isinternal_ = false;
  isproxified_ = false;
  proxyboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxytitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packetislocked_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Events.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (messageid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messageid_;
  }
  if (fromboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fromboxid_;
  }
  if (fromtitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fromtitle_;
  }
  if (toboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete toboxid_;
  }
  if (totitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete totitle_;
  }
  if (createdfromdraftid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete createdfromdraftid_;
  }
  if (proxyboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete proxyboxid_;
  }
  if (proxytitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete proxytitle_;
  }
  if (this != default_instance_) {
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Events_2fDiadocMessage_2dGetApi_2eproto();
  return *default_instance_;
}

Message* Message::default_instance_ = NULL;

Message* Message::New() const {
  return new Message;
}

void Message::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Message*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(timestampticks_, lastpatchtimestampticks_);
    if (has_messageid()) {
      if (messageid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        messageid_->clear();
      }
    }
    if (has_fromboxid()) {
      if (fromboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        fromboxid_->clear();
      }
    }
    if (has_fromtitle()) {
      if (fromtitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        fromtitle_->clear();
      }
    }
    if (has_toboxid()) {
      if (toboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        toboxid_->clear();
      }
    }
    if (has_totitle()) {
      if (totitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        totitle_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 61184) {
    ZR_(isdraft_, isinternal_);
    if (has_createdfromdraftid()) {
      if (createdfromdraftid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        createdfromdraftid_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & 983040) {
    ZR_(isproxified_, packetislocked_);
    if (has_proxyboxid()) {
      if (proxyboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        proxyboxid_->clear();
      }
    }
    if (has_proxytitle()) {
      if (proxytitle_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        proxytitle_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  entities_.Clear();
  draftistransformedtomessageidlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Events.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string MessageId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messageid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messageid().data(), this->messageid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "messageid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_TimestampTicks;
        break;
      }

      // required sfixed64 TimestampTicks = 2;
      case 2: {
        if (tag == 17) {
         parse_TimestampTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestampticks_)));
          set_has_timestampticks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_LastPatchTimestampTicks;
        break;
      }

      // required sfixed64 LastPatchTimestampTicks = 3;
      case 3: {
        if (tag == 25) {
         parse_LastPatchTimestampTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &lastpatchtimestampticks_)));
          set_has_lastpatchtimestampticks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_FromBoxId;
        break;
      }

      // required string FromBoxId = 4;
      case 4: {
        if (tag == 34) {
         parse_FromBoxId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromboxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromboxid().data(), this->fromboxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fromboxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_FromTitle;
        break;
      }

      // required string FromTitle = 5;
      case 5: {
        if (tag == 42) {
         parse_FromTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromtitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromtitle().data(), this->fromtitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fromtitle");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ToBoxId;
        break;
      }

      // optional string ToBoxId = 6;
      case 6: {
        if (tag == 50) {
         parse_ToBoxId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_toboxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->toboxid().data(), this->toboxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toboxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ToTitle;
        break;
      }

      // optional string ToTitle = 7;
      case 7: {
        if (tag == 58) {
         parse_ToTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->totitle().data(), this->totitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "totitle");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Entities;
        break;
      }

      // repeated .Diadoc.Api.Proto.Events.Entity Entities = 8;
      case 8: {
        if (tag == 66) {
         parse_Entities:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Entities;
        if (input->ExpectTag(72)) goto parse_IsDraft;
        break;
      }

      // optional bool IsDraft = 9 [default = false];
      case 9: {
        if (tag == 72) {
         parse_IsDraft:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdraft_)));
          set_has_isdraft();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_DraftIsLocked;
        break;
      }

      // optional bool DraftIsLocked = 10 [default = false];
      case 10: {
        if (tag == 80) {
         parse_DraftIsLocked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &draftislocked_)));
          set_has_draftislocked();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_DraftIsRecycled;
        break;
      }

      // optional bool DraftIsRecycled = 11 [default = false];
      case 11: {
        if (tag == 88) {
         parse_DraftIsRecycled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &draftisrecycled_)));
          set_has_draftisrecycled();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_CreatedFromDraftId;
        break;
      }

      // optional string CreatedFromDraftId = 12;
      case 12: {
        if (tag == 98) {
         parse_CreatedFromDraftId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdfromdraftid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->createdfromdraftid().data(), this->createdfromdraftid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "createdfromdraftid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_DraftIsTransformedToMessageIdList;
        break;
      }

      // repeated string DraftIsTransformedToMessageIdList = 13;
      case 13: {
        if (tag == 106) {
         parse_DraftIsTransformedToMessageIdList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_draftistransformedtomessageidlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->draftistransformedtomessageidlist(this->draftistransformedtomessageidlist_size() - 1).data(),
            this->draftistransformedtomessageidlist(this->draftistransformedtomessageidlist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "draftistransformedtomessageidlist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_DraftIsTransformedToMessageIdList;
        if (input->ExpectTag(112)) goto parse_IsDeleted;
        break;
      }

      // optional bool IsDeleted = 14 [default = false];
      case 14: {
        if (tag == 112) {
         parse_IsDeleted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdeleted_)));
          set_has_isdeleted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_IsTest;
        break;
      }

      // optional bool IsTest = 15 [default = false];
      case 15: {
        if (tag == 120) {
         parse_IsTest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &istest_)));
          set_has_istest();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_IsInternal;
        break;
      }

      // optional bool IsInternal = 16 [default = false];
      case 16: {
        if (tag == 128) {
         parse_IsInternal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isinternal_)));
          set_has_isinternal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_IsProxified;
        break;
      }

      // optional bool IsProxified = 17 [default = false];
      case 17: {
        if (tag == 136) {
         parse_IsProxified:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isproxified_)));
          set_has_isproxified();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_ProxyBoxId;
        break;
      }

      // optional string ProxyBoxId = 18;
      case 18: {
        if (tag == 146) {
         parse_ProxyBoxId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proxyboxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->proxyboxid().data(), this->proxyboxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proxyboxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_ProxyTitle;
        break;
      }

      // optional string ProxyTitle = 19;
      case 19: {
        if (tag == 154) {
         parse_ProxyTitle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proxytitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->proxytitle().data(), this->proxytitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proxytitle");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_PacketIsLocked;
        break;
      }

      // optional bool PacketIsLocked = 20 [default = false];
      case 20: {
        if (tag == 160) {
         parse_PacketIsLocked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &packetislocked_)));
          set_has_packetislocked();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Events.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Events.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Events.Message)
  // required string MessageId = 1;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messageid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->messageid(), output);
  }

  // required sfixed64 TimestampTicks = 2;
  if (has_timestampticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(2, this->timestampticks(), output);
  }

  // required sfixed64 LastPatchTimestampTicks = 3;
  if (has_lastpatchtimestampticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(3, this->lastpatchtimestampticks(), output);
  }

  // required string FromBoxId = 4;
  if (has_fromboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromboxid().data(), this->fromboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fromboxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->fromboxid(), output);
  }

  // required string FromTitle = 5;
  if (has_fromtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromtitle().data(), this->fromtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fromtitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->fromtitle(), output);
  }

  // optional string ToBoxId = 6;
  if (has_toboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toboxid().data(), this->toboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toboxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->toboxid(), output);
  }

  // optional string ToTitle = 7;
  if (has_totitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totitle().data(), this->totitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->totitle(), output);
  }

  // repeated .Diadoc.Api.Proto.Events.Entity Entities = 8;
  for (int i = 0; i < this->entities_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->entities(i), output);
  }

  // optional bool IsDraft = 9 [default = false];
  if (has_isdraft()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isdraft(), output);
  }

  // optional bool DraftIsLocked = 10 [default = false];
  if (has_draftislocked()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->draftislocked(), output);
  }

  // optional bool DraftIsRecycled = 11 [default = false];
  if (has_draftisrecycled()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->draftisrecycled(), output);
  }

  // optional string CreatedFromDraftId = 12;
  if (has_createdfromdraftid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdfromdraftid().data(), this->createdfromdraftid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdfromdraftid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->createdfromdraftid(), output);
  }

  // repeated string DraftIsTransformedToMessageIdList = 13;
  for (int i = 0; i < this->draftistransformedtomessageidlist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->draftistransformedtomessageidlist(i).data(), this->draftistransformedtomessageidlist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "draftistransformedtomessageidlist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->draftistransformedtomessageidlist(i), output);
  }

  // optional bool IsDeleted = 14 [default = false];
  if (has_isdeleted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->isdeleted(), output);
  }

  // optional bool IsTest = 15 [default = false];
  if (has_istest()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->istest(), output);
  }

  // optional bool IsInternal = 16 [default = false];
  if (has_isinternal()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->isinternal(), output);
  }

  // optional bool IsProxified = 17 [default = false];
  if (has_isproxified()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->isproxified(), output);
  }

  // optional string ProxyBoxId = 18;
  if (has_proxyboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->proxyboxid().data(), this->proxyboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proxyboxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->proxyboxid(), output);
  }

  // optional string ProxyTitle = 19;
  if (has_proxytitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->proxytitle().data(), this->proxytitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proxytitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->proxytitle(), output);
  }

  // optional bool PacketIsLocked = 20 [default = false];
  if (has_packetislocked()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->packetislocked(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Events.Message)
}

::google::protobuf::uint8* Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Events.Message)
  // required string MessageId = 1;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messageid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->messageid(), target);
  }

  // required sfixed64 TimestampTicks = 2;
  if (has_timestampticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(2, this->timestampticks(), target);
  }

  // required sfixed64 LastPatchTimestampTicks = 3;
  if (has_lastpatchtimestampticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(3, this->lastpatchtimestampticks(), target);
  }

  // required string FromBoxId = 4;
  if (has_fromboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromboxid().data(), this->fromboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fromboxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->fromboxid(), target);
  }

  // required string FromTitle = 5;
  if (has_fromtitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromtitle().data(), this->fromtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fromtitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->fromtitle(), target);
  }

  // optional string ToBoxId = 6;
  if (has_toboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toboxid().data(), this->toboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toboxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->toboxid(), target);
  }

  // optional string ToTitle = 7;
  if (has_totitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->totitle().data(), this->totitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "totitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->totitle(), target);
  }

  // repeated .Diadoc.Api.Proto.Events.Entity Entities = 8;
  for (int i = 0; i < this->entities_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->entities(i), target);
  }

  // optional bool IsDraft = 9 [default = false];
  if (has_isdraft()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isdraft(), target);
  }

  // optional bool DraftIsLocked = 10 [default = false];
  if (has_draftislocked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->draftislocked(), target);
  }

  // optional bool DraftIsRecycled = 11 [default = false];
  if (has_draftisrecycled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->draftisrecycled(), target);
  }

  // optional string CreatedFromDraftId = 12;
  if (has_createdfromdraftid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->createdfromdraftid().data(), this->createdfromdraftid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "createdfromdraftid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->createdfromdraftid(), target);
  }

  // repeated string DraftIsTransformedToMessageIdList = 13;
  for (int i = 0; i < this->draftistransformedtomessageidlist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->draftistransformedtomessageidlist(i).data(), this->draftistransformedtomessageidlist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "draftistransformedtomessageidlist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(13, this->draftistransformedtomessageidlist(i), target);
  }

  // optional bool IsDeleted = 14 [default = false];
  if (has_isdeleted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->isdeleted(), target);
  }

  // optional bool IsTest = 15 [default = false];
  if (has_istest()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->istest(), target);
  }

  // optional bool IsInternal = 16 [default = false];
  if (has_isinternal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->isinternal(), target);
  }

  // optional bool IsProxified = 17 [default = false];
  if (has_isproxified()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->isproxified(), target);
  }

  // optional string ProxyBoxId = 18;
  if (has_proxyboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->proxyboxid().data(), this->proxyboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proxyboxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->proxyboxid(), target);
  }

  // optional string ProxyTitle = 19;
  if (has_proxytitle()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->proxytitle().data(), this->proxytitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proxytitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->proxytitle(), target);
  }

  // optional bool PacketIsLocked = 20 [default = false];
  if (has_packetislocked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->packetislocked(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Events.Message)
  return target;
}

int Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string MessageId = 1;
    if (has_messageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messageid());
    }

    // required sfixed64 TimestampTicks = 2;
    if (has_timestampticks()) {
      total_size += 1 + 8;
    }

    // required sfixed64 LastPatchTimestampTicks = 3;
    if (has_lastpatchtimestampticks()) {
      total_size += 1 + 8;
    }

    // required string FromBoxId = 4;
    if (has_fromboxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromboxid());
    }

    // required string FromTitle = 5;
    if (has_fromtitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromtitle());
    }

    // optional string ToBoxId = 6;
    if (has_toboxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->toboxid());
    }

    // optional string ToTitle = 7;
    if (has_totitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totitle());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool IsDraft = 9 [default = false];
    if (has_isdraft()) {
      total_size += 1 + 1;
    }

    // optional bool DraftIsLocked = 10 [default = false];
    if (has_draftislocked()) {
      total_size += 1 + 1;
    }

    // optional bool DraftIsRecycled = 11 [default = false];
    if (has_draftisrecycled()) {
      total_size += 1 + 1;
    }

    // optional string CreatedFromDraftId = 12;
    if (has_createdfromdraftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->createdfromdraftid());
    }

    // optional bool IsDeleted = 14 [default = false];
    if (has_isdeleted()) {
      total_size += 1 + 1;
    }

    // optional bool IsTest = 15 [default = false];
    if (has_istest()) {
      total_size += 1 + 1;
    }

    // optional bool IsInternal = 16 [default = false];
    if (has_isinternal()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional bool IsProxified = 17 [default = false];
    if (has_isproxified()) {
      total_size += 2 + 1;
    }

    // optional string ProxyBoxId = 18;
    if (has_proxyboxid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->proxyboxid());
    }

    // optional string ProxyTitle = 19;
    if (has_proxytitle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->proxytitle());
    }

    // optional bool PacketIsLocked = 20 [default = false];
    if (has_packetislocked()) {
      total_size += 2 + 1;
    }

  }
  // repeated .Diadoc.Api.Proto.Events.Entity Entities = 8;
  total_size += 1 * this->entities_size();
  for (int i = 0; i < this->entities_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entities(i));
  }

  // repeated string DraftIsTransformedToMessageIdList = 13;
  total_size += 1 * this->draftistransformedtomessageidlist_size();
  for (int i = 0; i < this->draftistransformedtomessageidlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->draftistransformedtomessageidlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  entities_.MergeFrom(from.entities_);
  draftistransformedtomessageidlist_.MergeFrom(from.draftistransformedtomessageidlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_messageid()) {
      set_messageid(from.messageid());
    }
    if (from.has_timestampticks()) {
      set_timestampticks(from.timestampticks());
    }
    if (from.has_lastpatchtimestampticks()) {
      set_lastpatchtimestampticks(from.lastpatchtimestampticks());
    }
    if (from.has_fromboxid()) {
      set_fromboxid(from.fromboxid());
    }
    if (from.has_fromtitle()) {
      set_fromtitle(from.fromtitle());
    }
    if (from.has_toboxid()) {
      set_toboxid(from.toboxid());
    }
    if (from.has_totitle()) {
      set_totitle(from.totitle());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_isdraft()) {
      set_isdraft(from.isdraft());
    }
    if (from.has_draftislocked()) {
      set_draftislocked(from.draftislocked());
    }
    if (from.has_draftisrecycled()) {
      set_draftisrecycled(from.draftisrecycled());
    }
    if (from.has_createdfromdraftid()) {
      set_createdfromdraftid(from.createdfromdraftid());
    }
    if (from.has_isdeleted()) {
      set_isdeleted(from.isdeleted());
    }
    if (from.has_istest()) {
      set_istest(from.istest());
    }
    if (from.has_isinternal()) {
      set_isinternal(from.isinternal());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_isproxified()) {
      set_isproxified(from.isproxified());
    }
    if (from.has_proxyboxid()) {
      set_proxyboxid(from.proxyboxid());
    }
    if (from.has_proxytitle()) {
      set_proxytitle(from.proxytitle());
    }
    if (from.has_packetislocked()) {
      set_packetislocked(from.packetislocked());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->entities())) return false;
  return true;
}

void Message::Swap(Message* other) {
  if (other != this) {
    std::swap(messageid_, other->messageid_);
    std::swap(timestampticks_, other->timestampticks_);
    std::swap(lastpatchtimestampticks_, other->lastpatchtimestampticks_);
    std::swap(fromboxid_, other->fromboxid_);
    std::swap(fromtitle_, other->fromtitle_);
    std::swap(toboxid_, other->toboxid_);
    std::swap(totitle_, other->totitle_);
    entities_.Swap(&other->entities_);
    std::swap(isdraft_, other->isdraft_);
    std::swap(draftislocked_, other->draftislocked_);
    std::swap(draftisrecycled_, other->draftisrecycled_);
    std::swap(createdfromdraftid_, other->createdfromdraftid_);
    draftistransformedtomessageidlist_.Swap(&other->draftistransformedtomessageidlist_);
    std::swap(isdeleted_, other->isdeleted_);
    std::swap(istest_, other->istest_);
    std::swap(isinternal_, other->isinternal_);
    std::swap(isproxified_, other->isproxified_);
    std::swap(proxyboxid_, other->proxyboxid_);
    std::swap(proxytitle_, other->proxytitle_);
    std::swap(packetislocked_, other->packetislocked_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Template::kMessageIdFieldNumber;
const int Template::kTimestampTicksFieldNumber;
const int Template::kFromBoxIdFieldNumber;
const int Template::kToBoxIdFieldNumber;
const int Template::kMessageFromBoxIdFieldNumber;
const int Template::kMessageToBoxIdFieldNumber;
const int Template::kEntitiesFieldNumber;
const int Template::kIsDeletedFieldNumber;
const int Template::kMessageToDepartmentIdFieldNumber;
#endif  // !_MSC_VER

Template::Template()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Events.Template)
}

void Template::InitAsDefaultInstance() {
}

Template::Template(const Template& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Events.Template)
}

void Template::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  messageid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestampticks_ = GOOGLE_LONGLONG(0);
  fromboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagefromboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagetoboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isdeleted_ = false;
  messagetodepartmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Template::~Template() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Events.Template)
  SharedDtor();
}

void Template::SharedDtor() {
  if (messageid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messageid_;
  }
  if (fromboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fromboxid_;
  }
  if (toboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete toboxid_;
  }
  if (messagefromboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messagefromboxid_;
  }
  if (messagetoboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messagetoboxid_;
  }
  if (messagetodepartmentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messagetodepartmentid_;
  }
  if (this != default_instance_) {
  }
}

void Template::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Template::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Template_descriptor_;
}

const Template& Template::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Events_2fDiadocMessage_2dGetApi_2eproto();
  return *default_instance_;
}

Template* Template::default_instance_ = NULL;

Template* Template::New() const {
  return new Template;
}

void Template::Clear() {
  if (_has_bits_[0 / 32] & 191) {
    if (has_messageid()) {
      if (messageid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        messageid_->clear();
      }
    }
    timestampticks_ = GOOGLE_LONGLONG(0);
    if (has_fromboxid()) {
      if (fromboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        fromboxid_->clear();
      }
    }
    if (has_toboxid()) {
      if (toboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        toboxid_->clear();
      }
    }
    if (has_messagefromboxid()) {
      if (messagefromboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        messagefromboxid_->clear();
      }
    }
    if (has_messagetoboxid()) {
      if (messagetoboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        messagetoboxid_->clear();
      }
    }
    isdeleted_ = false;
  }
  if (has_messagetodepartmentid()) {
    if (messagetodepartmentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      messagetodepartmentid_->clear();
    }
  }
  entities_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Template::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Events.Template)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string MessageId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messageid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messageid().data(), this->messageid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "messageid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_TimestampTicks;
        break;
      }

      // required sfixed64 TimestampTicks = 2;
      case 2: {
        if (tag == 17) {
         parse_TimestampTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestampticks_)));
          set_has_timestampticks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_FromBoxId;
        break;
      }

      // required string FromBoxId = 3;
      case 3: {
        if (tag == 26) {
         parse_FromBoxId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromboxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromboxid().data(), this->fromboxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fromboxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ToBoxId;
        break;
      }

      // required string ToBoxId = 4;
      case 4: {
        if (tag == 34) {
         parse_ToBoxId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_toboxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->toboxid().data(), this->toboxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "toboxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_MessageFromBoxId;
        break;
      }

      // required string MessageFromBoxId = 5;
      case 5: {
        if (tag == 42) {
         parse_MessageFromBoxId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagefromboxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagefromboxid().data(), this->messagefromboxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "messagefromboxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_MessageToBoxId;
        break;
      }

      // required string MessageToBoxId = 6;
      case 6: {
        if (tag == 50) {
         parse_MessageToBoxId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagetoboxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagetoboxid().data(), this->messagetoboxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "messagetoboxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Entities;
        break;
      }

      // repeated .Diadoc.Api.Proto.Events.Entity Entities = 7;
      case 7: {
        if (tag == 58) {
         parse_Entities:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Entities;
        if (input->ExpectTag(64)) goto parse_IsDeleted;
        break;
      }

      // optional bool IsDeleted = 8 [default = false];
      case 8: {
        if (tag == 64) {
         parse_IsDeleted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdeleted_)));
          set_has_isdeleted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_MessageToDepartmentId;
        break;
      }

      // optional string MessageToDepartmentId = 9;
      case 9: {
        if (tag == 74) {
         parse_MessageToDepartmentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagetodepartmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagetodepartmentid().data(), this->messagetodepartmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "messagetodepartmentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Events.Template)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Events.Template)
  return false;
#undef DO_
}

void Template::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Events.Template)
  // required string MessageId = 1;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messageid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->messageid(), output);
  }

  // required sfixed64 TimestampTicks = 2;
  if (has_timestampticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(2, this->timestampticks(), output);
  }

  // required string FromBoxId = 3;
  if (has_fromboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromboxid().data(), this->fromboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fromboxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fromboxid(), output);
  }

  // required string ToBoxId = 4;
  if (has_toboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toboxid().data(), this->toboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toboxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->toboxid(), output);
  }

  // required string MessageFromBoxId = 5;
  if (has_messagefromboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagefromboxid().data(), this->messagefromboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messagefromboxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->messagefromboxid(), output);
  }

  // required string MessageToBoxId = 6;
  if (has_messagetoboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagetoboxid().data(), this->messagetoboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messagetoboxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->messagetoboxid(), output);
  }

  // repeated .Diadoc.Api.Proto.Events.Entity Entities = 7;
  for (int i = 0; i < this->entities_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->entities(i), output);
  }

  // optional bool IsDeleted = 8 [default = false];
  if (has_isdeleted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->isdeleted(), output);
  }

  // optional string MessageToDepartmentId = 9;
  if (has_messagetodepartmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagetodepartmentid().data(), this->messagetodepartmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messagetodepartmentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->messagetodepartmentid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Events.Template)
}

::google::protobuf::uint8* Template::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Events.Template)
  // required string MessageId = 1;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messageid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->messageid(), target);
  }

  // required sfixed64 TimestampTicks = 2;
  if (has_timestampticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(2, this->timestampticks(), target);
  }

  // required string FromBoxId = 3;
  if (has_fromboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromboxid().data(), this->fromboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fromboxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fromboxid(), target);
  }

  // required string ToBoxId = 4;
  if (has_toboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->toboxid().data(), this->toboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "toboxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->toboxid(), target);
  }

  // required string MessageFromBoxId = 5;
  if (has_messagefromboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagefromboxid().data(), this->messagefromboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messagefromboxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->messagefromboxid(), target);
  }

  // required string MessageToBoxId = 6;
  if (has_messagetoboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagetoboxid().data(), this->messagetoboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messagetoboxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->messagetoboxid(), target);
  }

  // repeated .Diadoc.Api.Proto.Events.Entity Entities = 7;
  for (int i = 0; i < this->entities_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->entities(i), target);
  }

  // optional bool IsDeleted = 8 [default = false];
  if (has_isdeleted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->isdeleted(), target);
  }

  // optional string MessageToDepartmentId = 9;
  if (has_messagetodepartmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagetodepartmentid().data(), this->messagetodepartmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messagetodepartmentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->messagetodepartmentid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Events.Template)
  return target;
}

int Template::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string MessageId = 1;
    if (has_messageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messageid());
    }

    // required sfixed64 TimestampTicks = 2;
    if (has_timestampticks()) {
      total_size += 1 + 8;
    }

    // required string FromBoxId = 3;
    if (has_fromboxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromboxid());
    }

    // required string ToBoxId = 4;
    if (has_toboxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->toboxid());
    }

    // required string MessageFromBoxId = 5;
    if (has_messagefromboxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messagefromboxid());
    }

    // required string MessageToBoxId = 6;
    if (has_messagetoboxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messagetoboxid());
    }

    // optional bool IsDeleted = 8 [default = false];
    if (has_isdeleted()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string MessageToDepartmentId = 9;
    if (has_messagetodepartmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messagetodepartmentid());
    }

  }
  // repeated .Diadoc.Api.Proto.Events.Entity Entities = 7;
  total_size += 1 * this->entities_size();
  for (int i = 0; i < this->entities_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entities(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Template::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Template* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Template*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Template::MergeFrom(const Template& from) {
  GOOGLE_CHECK_NE(&from, this);
  entities_.MergeFrom(from.entities_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_messageid()) {
      set_messageid(from.messageid());
    }
    if (from.has_timestampticks()) {
      set_timestampticks(from.timestampticks());
    }
    if (from.has_fromboxid()) {
      set_fromboxid(from.fromboxid());
    }
    if (from.has_toboxid()) {
      set_toboxid(from.toboxid());
    }
    if (from.has_messagefromboxid()) {
      set_messagefromboxid(from.messagefromboxid());
    }
    if (from.has_messagetoboxid()) {
      set_messagetoboxid(from.messagetoboxid());
    }
    if (from.has_isdeleted()) {
      set_isdeleted(from.isdeleted());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_messagetodepartmentid()) {
      set_messagetodepartmentid(from.messagetodepartmentid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Template::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Template::CopyFrom(const Template& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Template::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->entities())) return false;
  return true;
}

void Template::Swap(Template* other) {
  if (other != this) {
    std::swap(messageid_, other->messageid_);
    std::swap(timestampticks_, other->timestampticks_);
    std::swap(fromboxid_, other->fromboxid_);
    std::swap(toboxid_, other->toboxid_);
    std::swap(messagefromboxid_, other->messagefromboxid_);
    std::swap(messagetoboxid_, other->messagetoboxid_);
    entities_.Swap(&other->entities_);
    std::swap(isdeleted_, other->isdeleted_);
    std::swap(messagetodepartmentid_, other->messagetodepartmentid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Template::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Template_descriptor_;
  metadata.reflection = Template_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MessagePatch::kMessageIdFieldNumber;
const int MessagePatch::kTimestampTicksFieldNumber;
const int MessagePatch::kEntitiesFieldNumber;
const int MessagePatch::kForDraftFieldNumber;
const int MessagePatch::kDraftIsRecycledFieldNumber;
const int MessagePatch::kDraftIsTransformedToMessageIdListFieldNumber;
const int MessagePatch::kDraftIsLockedFieldNumber;
const int MessagePatch::kMessageIsDeletedFieldNumber;
const int MessagePatch::kEntityPatchesFieldNumber;
const int MessagePatch::kMessageIsRestoredFieldNumber;
const int MessagePatch::kMessageIsDeliveredFieldNumber;
const int MessagePatch::kDeliveredPatchIdFieldNumber;
const int MessagePatch::kPatchIdFieldNumber;
#endif  // !_MSC_VER

MessagePatch::MessagePatch()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Events.MessagePatch)
}

void MessagePatch::InitAsDefaultInstance() {
}

MessagePatch::MessagePatch(const MessagePatch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Events.MessagePatch)
}

void MessagePatch::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  messageid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestampticks_ = GOOGLE_LONGLONG(0);
  fordraft_ = false;
  draftisrecycled_ = false;
  draftislocked_ = false;
  messageisdeleted_ = false;
  messageisrestored_ = false;
  messageisdelivered_ = false;
  deliveredpatchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  patchid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessagePatch::~MessagePatch() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Events.MessagePatch)
  SharedDtor();
}

void MessagePatch::SharedDtor() {
  if (messageid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messageid_;
  }
  if (deliveredpatchid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete deliveredpatchid_;
  }
  if (patchid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete patchid_;
  }
  if (this != default_instance_) {
  }
}

void MessagePatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessagePatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessagePatch_descriptor_;
}

const MessagePatch& MessagePatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Events_2fDiadocMessage_2dGetApi_2eproto();
  return *default_instance_;
}

MessagePatch* MessagePatch::default_instance_ = NULL;

MessagePatch* MessagePatch::New() const {
  return new MessagePatch;
}

void MessagePatch::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MessagePatch*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 219) {
    ZR_(fordraft_, messageisdeleted_);
    if (has_messageid()) {
      if (messageid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        messageid_->clear();
      }
    }
    timestampticks_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & 7680) {
    ZR_(messageisrestored_, messageisdelivered_);
    if (has_deliveredpatchid()) {
      if (deliveredpatchid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        deliveredpatchid_->clear();
      }
    }
    if (has_patchid()) {
      if (patchid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        patchid_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  entities_.Clear();
  draftistransformedtomessageidlist_.Clear();
  entitypatches_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessagePatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Events.MessagePatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string MessageId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messageid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messageid().data(), this->messageid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "messageid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_TimestampTicks;
        break;
      }

      // required sfixed64 TimestampTicks = 2;
      case 2: {
        if (tag == 17) {
         parse_TimestampTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &timestampticks_)));
          set_has_timestampticks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Entities;
        break;
      }

      // repeated .Diadoc.Api.Proto.Events.Entity Entities = 3;
      case 3: {
        if (tag == 26) {
         parse_Entities:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entities()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Entities;
        if (input->ExpectTag(32)) goto parse_ForDraft;
        break;
      }

      // optional bool ForDraft = 4 [default = false];
      case 4: {
        if (tag == 32) {
         parse_ForDraft:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fordraft_)));
          set_has_fordraft();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_DraftIsRecycled;
        break;
      }

      // optional bool DraftIsRecycled = 5 [default = false];
      case 5: {
        if (tag == 40) {
         parse_DraftIsRecycled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &draftisrecycled_)));
          set_has_draftisrecycled();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_DraftIsTransformedToMessageIdList;
        break;
      }

      // repeated string DraftIsTransformedToMessageIdList = 6;
      case 6: {
        if (tag == 50) {
         parse_DraftIsTransformedToMessageIdList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_draftistransformedtomessageidlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->draftistransformedtomessageidlist(this->draftistransformedtomessageidlist_size() - 1).data(),
            this->draftistransformedtomessageidlist(this->draftistransformedtomessageidlist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "draftistransformedtomessageidlist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_DraftIsTransformedToMessageIdList;
        if (input->ExpectTag(56)) goto parse_DraftIsLocked;
        break;
      }

      // optional bool DraftIsLocked = 7 [default = false];
      case 7: {
        if (tag == 56) {
         parse_DraftIsLocked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &draftislocked_)));
          set_has_draftislocked();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_MessageIsDeleted;
        break;
      }

      // optional bool MessageIsDeleted = 8 [default = false];
      case 8: {
        if (tag == 64) {
         parse_MessageIsDeleted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &messageisdeleted_)));
          set_has_messageisdeleted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_EntityPatches;
        break;
      }

      // repeated .Diadoc.Api.Proto.Events.EntityPatch EntityPatches = 9;
      case 9: {
        if (tag == 74) {
         parse_EntityPatches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entitypatches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_EntityPatches;
        if (input->ExpectTag(80)) goto parse_MessageIsRestored;
        break;
      }

      // optional bool MessageIsRestored = 10 [default = false];
      case 10: {
        if (tag == 80) {
         parse_MessageIsRestored:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &messageisrestored_)));
          set_has_messageisrestored();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_MessageIsDelivered;
        break;
      }

      // optional bool MessageIsDelivered = 11 [default = false];
      case 11: {
        if (tag == 88) {
         parse_MessageIsDelivered:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &messageisdelivered_)));
          set_has_messageisdelivered();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_DeliveredPatchId;
        break;
      }

      // optional string DeliveredPatchId = 12;
      case 12: {
        if (tag == 98) {
         parse_DeliveredPatchId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deliveredpatchid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->deliveredpatchid().data(), this->deliveredpatchid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "deliveredpatchid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_PatchId;
        break;
      }

      // required string PatchId = 13;
      case 13: {
        if (tag == 106) {
         parse_PatchId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_patchid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->patchid().data(), this->patchid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "patchid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Events.MessagePatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Events.MessagePatch)
  return false;
#undef DO_
}

void MessagePatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Events.MessagePatch)
  // required string MessageId = 1;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messageid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->messageid(), output);
  }

  // required sfixed64 TimestampTicks = 2;
  if (has_timestampticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(2, this->timestampticks(), output);
  }

  // repeated .Diadoc.Api.Proto.Events.Entity Entities = 3;
  for (int i = 0; i < this->entities_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->entities(i), output);
  }

  // optional bool ForDraft = 4 [default = false];
  if (has_fordraft()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->fordraft(), output);
  }

  // optional bool DraftIsRecycled = 5 [default = false];
  if (has_draftisrecycled()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->draftisrecycled(), output);
  }

  // repeated string DraftIsTransformedToMessageIdList = 6;
  for (int i = 0; i < this->draftistransformedtomessageidlist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->draftistransformedtomessageidlist(i).data(), this->draftistransformedtomessageidlist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "draftistransformedtomessageidlist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->draftistransformedtomessageidlist(i), output);
  }

  // optional bool DraftIsLocked = 7 [default = false];
  if (has_draftislocked()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->draftislocked(), output);
  }

  // optional bool MessageIsDeleted = 8 [default = false];
  if (has_messageisdeleted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->messageisdeleted(), output);
  }

  // repeated .Diadoc.Api.Proto.Events.EntityPatch EntityPatches = 9;
  for (int i = 0; i < this->entitypatches_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->entitypatches(i), output);
  }

  // optional bool MessageIsRestored = 10 [default = false];
  if (has_messageisrestored()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->messageisrestored(), output);
  }

  // optional bool MessageIsDelivered = 11 [default = false];
  if (has_messageisdelivered()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->messageisdelivered(), output);
  }

  // optional string DeliveredPatchId = 12;
  if (has_deliveredpatchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deliveredpatchid().data(), this->deliveredpatchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "deliveredpatchid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->deliveredpatchid(), output);
  }

  // required string PatchId = 13;
  if (has_patchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->patchid().data(), this->patchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "patchid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->patchid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Events.MessagePatch)
}

::google::protobuf::uint8* MessagePatch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Events.MessagePatch)
  // required string MessageId = 1;
  if (has_messageid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messageid().data(), this->messageid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "messageid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->messageid(), target);
  }

  // required sfixed64 TimestampTicks = 2;
  if (has_timestampticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(2, this->timestampticks(), target);
  }

  // repeated .Diadoc.Api.Proto.Events.Entity Entities = 3;
  for (int i = 0; i < this->entities_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->entities(i), target);
  }

  // optional bool ForDraft = 4 [default = false];
  if (has_fordraft()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->fordraft(), target);
  }

  // optional bool DraftIsRecycled = 5 [default = false];
  if (has_draftisrecycled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->draftisrecycled(), target);
  }

  // repeated string DraftIsTransformedToMessageIdList = 6;
  for (int i = 0; i < this->draftistransformedtomessageidlist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->draftistransformedtomessageidlist(i).data(), this->draftistransformedtomessageidlist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "draftistransformedtomessageidlist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->draftistransformedtomessageidlist(i), target);
  }

  // optional bool DraftIsLocked = 7 [default = false];
  if (has_draftislocked()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->draftislocked(), target);
  }

  // optional bool MessageIsDeleted = 8 [default = false];
  if (has_messageisdeleted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->messageisdeleted(), target);
  }

  // repeated .Diadoc.Api.Proto.Events.EntityPatch EntityPatches = 9;
  for (int i = 0; i < this->entitypatches_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->entitypatches(i), target);
  }

  // optional bool MessageIsRestored = 10 [default = false];
  if (has_messageisrestored()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->messageisrestored(), target);
  }

  // optional bool MessageIsDelivered = 11 [default = false];
  if (has_messageisdelivered()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->messageisdelivered(), target);
  }

  // optional string DeliveredPatchId = 12;
  if (has_deliveredpatchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deliveredpatchid().data(), this->deliveredpatchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "deliveredpatchid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->deliveredpatchid(), target);
  }

  // required string PatchId = 13;
  if (has_patchid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->patchid().data(), this->patchid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "patchid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->patchid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Events.MessagePatch)
  return target;
}

int MessagePatch::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string MessageId = 1;
    if (has_messageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messageid());
    }

    // required sfixed64 TimestampTicks = 2;
    if (has_timestampticks()) {
      total_size += 1 + 8;
    }

    // optional bool ForDraft = 4 [default = false];
    if (has_fordraft()) {
      total_size += 1 + 1;
    }

    // optional bool DraftIsRecycled = 5 [default = false];
    if (has_draftisrecycled()) {
      total_size += 1 + 1;
    }

    // optional bool DraftIsLocked = 7 [default = false];
    if (has_draftislocked()) {
      total_size += 1 + 1;
    }

    // optional bool MessageIsDeleted = 8 [default = false];
    if (has_messageisdeleted()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional bool MessageIsRestored = 10 [default = false];
    if (has_messageisrestored()) {
      total_size += 1 + 1;
    }

    // optional bool MessageIsDelivered = 11 [default = false];
    if (has_messageisdelivered()) {
      total_size += 1 + 1;
    }

    // optional string DeliveredPatchId = 12;
    if (has_deliveredpatchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deliveredpatchid());
    }

    // required string PatchId = 13;
    if (has_patchid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->patchid());
    }

  }
  // repeated .Diadoc.Api.Proto.Events.Entity Entities = 3;
  total_size += 1 * this->entities_size();
  for (int i = 0; i < this->entities_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entities(i));
  }

  // repeated string DraftIsTransformedToMessageIdList = 6;
  total_size += 1 * this->draftistransformedtomessageidlist_size();
  for (int i = 0; i < this->draftistransformedtomessageidlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->draftistransformedtomessageidlist(i));
  }

  // repeated .Diadoc.Api.Proto.Events.EntityPatch EntityPatches = 9;
  total_size += 1 * this->entitypatches_size();
  for (int i = 0; i < this->entitypatches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entitypatches(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessagePatch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessagePatch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessagePatch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessagePatch::MergeFrom(const MessagePatch& from) {
  GOOGLE_CHECK_NE(&from, this);
  entities_.MergeFrom(from.entities_);
  draftistransformedtomessageidlist_.MergeFrom(from.draftistransformedtomessageidlist_);
  entitypatches_.MergeFrom(from.entitypatches_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_messageid()) {
      set_messageid(from.messageid());
    }
    if (from.has_timestampticks()) {
      set_timestampticks(from.timestampticks());
    }
    if (from.has_fordraft()) {
      set_fordraft(from.fordraft());
    }
    if (from.has_draftisrecycled()) {
      set_draftisrecycled(from.draftisrecycled());
    }
    if (from.has_draftislocked()) {
      set_draftislocked(from.draftislocked());
    }
    if (from.has_messageisdeleted()) {
      set_messageisdeleted(from.messageisdeleted());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_messageisrestored()) {
      set_messageisrestored(from.messageisrestored());
    }
    if (from.has_messageisdelivered()) {
      set_messageisdelivered(from.messageisdelivered());
    }
    if (from.has_deliveredpatchid()) {
      set_deliveredpatchid(from.deliveredpatchid());
    }
    if (from.has_patchid()) {
      set_patchid(from.patchid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessagePatch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagePatch::CopyFrom(const MessagePatch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagePatch::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001003) != 0x00001003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->entities())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->entitypatches())) return false;
  return true;
}

void MessagePatch::Swap(MessagePatch* other) {
  if (other != this) {
    std::swap(messageid_, other->messageid_);
    std::swap(timestampticks_, other->timestampticks_);
    entities_.Swap(&other->entities_);
    std::swap(fordraft_, other->fordraft_);
    std::swap(draftisrecycled_, other->draftisrecycled_);
    draftistransformedtomessageidlist_.Swap(&other->draftistransformedtomessageidlist_);
    std::swap(draftislocked_, other->draftislocked_);
    std::swap(messageisdeleted_, other->messageisdeleted_);
    entitypatches_.Swap(&other->entitypatches_);
    std::swap(messageisrestored_, other->messageisrestored_);
    std::swap(messageisdelivered_, other->messageisdelivered_);
    std::swap(deliveredpatchid_, other->deliveredpatchid_);
    std::swap(patchid_, other->patchid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessagePatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessagePatch_descriptor_;
  metadata.reflection = MessagePatch_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Entity::kEntityTypeFieldNumber;
const int Entity::kEntityIdFieldNumber;
const int Entity::kParentEntityIdFieldNumber;
const int Entity::kContentFieldNumber;
const int Entity::kAttachmentTypeFieldNumber;
const int Entity::kFileNameFieldNumber;
const int Entity::kNeedRecipientSignatureFieldNumber;
const int Entity::kSignerBoxIdFieldNumber;
const int Entity::kNotDeliveredEventIdFieldNumber;
const int Entity::kDocumentInfoFieldNumber;
const int Entity::kRawCreationDateFieldNumber;
const int Entity::kResolutionInfoFieldNumber;
const int Entity::kSignerDepartmentIdFieldNumber;
const int Entity::kResolutionRequestInfoFieldNumber;
const int Entity::kResolutionRequestDenialInfoFieldNumber;
const int Entity::kNeedReceiptFieldNumber;
const int Entity::kPacketIdFieldNumber;
const int Entity::kIsApprovementSignatureFieldNumber;
const int Entity::kIsEncryptedContentFieldNumber;
const int Entity::kAttachmentVersionFieldNumber;
const int Entity::kResolutionRouteAssignmentInfoFieldNumber;
const int Entity::kResolutionRouteRemovalInfoFieldNumber;
const int Entity::kCancellationInfoFieldNumber;
const int Entity::kLabelsFieldNumber;
#endif  // !_MSC_VER

Entity::Entity()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Events.Entity)
}

void Entity::InitAsDefaultInstance() {
  content_ = const_cast< ::Diadoc::Api::Proto::Content*>(&::Diadoc::Api::Proto::Content::default_instance());
  documentinfo_ = const_cast< ::Diadoc::Api::Proto::Documents::Document*>(&::Diadoc::Api::Proto::Documents::Document::default_instance());
  resolutioninfo_ = const_cast< ::Diadoc::Api::Proto::Events::ResolutionInfo*>(&::Diadoc::Api::Proto::Events::ResolutionInfo::default_instance());
  resolutionrequestinfo_ = const_cast< ::Diadoc::Api::Proto::Events::ResolutionRequestInfo*>(&::Diadoc::Api::Proto::Events::ResolutionRequestInfo::default_instance());
  resolutionrequestdenialinfo_ = const_cast< ::Diadoc::Api::Proto::Events::ResolutionRequestDenialInfo*>(&::Diadoc::Api::Proto::Events::ResolutionRequestDenialInfo::default_instance());
  resolutionrouteassignmentinfo_ = const_cast< ::Diadoc::Api::Proto::Events::ResolutionRouteAssignmentInfo*>(&::Diadoc::Api::Proto::Events::ResolutionRouteAssignmentInfo::default_instance());
  resolutionrouteremovalinfo_ = const_cast< ::Diadoc::Api::Proto::Events::ResolutionRouteRemovalInfo*>(&::Diadoc::Api::Proto::Events::ResolutionRouteRemovalInfo::default_instance());
  cancellationinfo_ = const_cast< ::Diadoc::Api::Proto::Events::CancellationInfo*>(&::Diadoc::Api::Proto::Events::CancellationInfo::default_instance());
}

Entity::Entity(const Entity& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Events.Entity)
}

void Entity::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  entitytype_ = 0;
  entityid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parententityid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_ = NULL;
  attachmenttype_ = -1;
  filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  needrecipientsignature_ = false;
  signerboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notdeliveredeventid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentinfo_ = NULL;
  rawcreationdate_ = GOOGLE_LONGLONG(0);
  resolutioninfo_ = NULL;
  signerdepartmentid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolutionrequestinfo_ = NULL;
  resolutionrequestdenialinfo_ = NULL;
  needreceipt_ = false;
  packetid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isapprovementsignature_ = false;
  isencryptedcontent_ = false;
  attachmentversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolutionrouteassignmentinfo_ = NULL;
  resolutionrouteremovalinfo_ = NULL;
  cancellationinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Entity::~Entity() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Events.Entity)
  SharedDtor();
}

void Entity::SharedDtor() {
  if (entityid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete entityid_;
  }
  if (parententityid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete parententityid_;
  }
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (signerboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete signerboxid_;
  }
  if (notdeliveredeventid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete notdeliveredeventid_;
  }
  if (signerdepartmentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete signerdepartmentid_;
  }
  if (packetid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete packetid_;
  }
  if (attachmentversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attachmentversion_;
  }
  if (this != default_instance_) {
    delete content_;
    delete documentinfo_;
    delete resolutioninfo_;
    delete resolutionrequestinfo_;
    delete resolutionrequestdenialinfo_;
    delete resolutionrouteassignmentinfo_;
    delete resolutionrouteremovalinfo_;
    delete cancellationinfo_;
  }
}

void Entity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Entity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Entity_descriptor_;
}

const Entity& Entity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Events_2fDiadocMessage_2dGetApi_2eproto();
  return *default_instance_;
}

Entity* Entity::default_instance_ = NULL;

Entity* Entity::New() const {
  return new Entity;
}

void Entity::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Entity*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    entitytype_ = 0;
    if (has_entityid()) {
      if (entityid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        entityid_->clear();
      }
    }
    if (has_parententityid()) {
      if (parententityid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        parententityid_->clear();
      }
    }
    if (has_content()) {
      if (content_ != NULL) content_->::Diadoc::Api::Proto::Content::Clear();
    }
    attachmenttype_ = -1;
    if (has_filename()) {
      if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filename_->clear();
      }
    }
    needrecipientsignature_ = false;
    if (has_signerboxid()) {
      if (signerboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        signerboxid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 65280) {
    if (has_notdeliveredeventid()) {
      if (notdeliveredeventid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        notdeliveredeventid_->clear();
      }
    }
    if (has_documentinfo()) {
      if (documentinfo_ != NULL) documentinfo_->::Diadoc::Api::Proto::Documents::Document::Clear();
    }
    rawcreationdate_ = GOOGLE_LONGLONG(0);
    if (has_resolutioninfo()) {
      if (resolutioninfo_ != NULL) resolutioninfo_->::Diadoc::Api::Proto::Events::ResolutionInfo::Clear();
    }
    if (has_signerdepartmentid()) {
      if (signerdepartmentid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        signerdepartmentid_->clear();
      }
    }
    if (has_resolutionrequestinfo()) {
      if (resolutionrequestinfo_ != NULL) resolutionrequestinfo_->::Diadoc::Api::Proto::Events::ResolutionRequestInfo::Clear();
    }
    if (has_resolutionrequestdenialinfo()) {
      if (resolutionrequestdenialinfo_ != NULL) resolutionrequestdenialinfo_->::Diadoc::Api::Proto::Events::ResolutionRequestDenialInfo::Clear();
    }
    needreceipt_ = false;
  }
  if (_has_bits_[16 / 32] & 8323072) {
    ZR_(isapprovementsignature_, isencryptedcontent_);
    if (has_packetid()) {
      if (packetid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        packetid_->clear();
      }
    }
    if (has_attachmentversion()) {
      if (attachmentversion_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        attachmentversion_->clear();
      }
    }
    if (has_resolutionrouteassignmentinfo()) {
      if (resolutionrouteassignmentinfo_ != NULL) resolutionrouteassignmentinfo_->::Diadoc::Api::Proto::Events::ResolutionRouteAssignmentInfo::Clear();
    }
    if (has_resolutionrouteremovalinfo()) {
      if (resolutionrouteremovalinfo_ != NULL) resolutionrouteremovalinfo_->::Diadoc::Api::Proto::Events::ResolutionRouteRemovalInfo::Clear();
    }
    if (has_cancellationinfo()) {
      if (cancellationinfo_ != NULL) cancellationinfo_->::Diadoc::Api::Proto::Events::CancellationInfo::Clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  labels_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Entity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Events.Entity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Diadoc.Api.Proto.Events.EntityType EntityType = 1 [default = UnknownEntityType];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Events::EntityType_IsValid(value)) {
            set_entitytype(static_cast< ::Diadoc::Api::Proto::Events::EntityType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_EntityId;
        break;
      }

      // required string EntityId = 2;
      case 2: {
        if (tag == 18) {
         parse_EntityId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entityid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->entityid().data(), this->entityid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "entityid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ParentEntityId;
        break;
      }

      // optional string ParentEntityId = 3;
      case 3: {
        if (tag == 26) {
         parse_ParentEntityId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parententityid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parententityid().data(), this->parententityid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "parententityid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Content;
        break;
      }

      // optional .Diadoc.Api.Proto.Content Content = 4;
      case 4: {
        if (tag == 34) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_AttachmentType;
        break;
      }

      // optional .Diadoc.Api.Proto.Events.AttachmentType AttachmentType = 5 [default = UnknownAttachmentType];
      case 5: {
        if (tag == 40) {
         parse_AttachmentType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Events::AttachmentType_IsValid(value)) {
            set_attachmenttype(static_cast< ::Diadoc::Api::Proto::Events::AttachmentType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_FileName;
        break;
      }

      // optional string FileName = 6;
      case 6: {
        if (tag == 50) {
         parse_FileName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_NeedRecipientSignature;
        break;
      }

      // optional bool NeedRecipientSignature = 7 [default = false];
      case 7: {
        if (tag == 56) {
         parse_NeedRecipientSignature:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needrecipientsignature_)));
          set_has_needrecipientsignature();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_SignerBoxId;
        break;
      }

      // optional string SignerBoxId = 8;
      case 8: {
        if (tag == 66) {
         parse_SignerBoxId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signerboxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signerboxid().data(), this->signerboxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "signerboxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_NotDeliveredEventId;
        break;
      }

      // optional string NotDeliveredEventId = 10;
      case 10: {
        if (tag == 82) {
         parse_NotDeliveredEventId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_notdeliveredeventid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->notdeliveredeventid().data(), this->notdeliveredeventid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "notdeliveredeventid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_DocumentInfo;
        break;
      }

      // optional .Diadoc.Api.Proto.Documents.Document DocumentInfo = 11;
      case 11: {
        if (tag == 90) {
         parse_DocumentInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_documentinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_RawCreationDate;
        break;
      }

      // optional sfixed64 RawCreationDate = 12 [default = 0];
      case 12: {
        if (tag == 97) {
         parse_RawCreationDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &rawcreationdate_)));
          set_has_rawcreationdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_ResolutionInfo;
        break;
      }

      // optional .Diadoc.Api.Proto.Events.ResolutionInfo ResolutionInfo = 13;
      case 13: {
        if (tag == 106) {
         parse_ResolutionInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolutioninfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_SignerDepartmentId;
        break;
      }

      // optional string SignerDepartmentId = 14;
      case 14: {
        if (tag == 114) {
         parse_SignerDepartmentId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signerdepartmentid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signerdepartmentid().data(), this->signerdepartmentid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "signerdepartmentid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_ResolutionRequestInfo;
        break;
      }

      // optional .Diadoc.Api.Proto.Events.ResolutionRequestInfo ResolutionRequestInfo = 15;
      case 15: {
        if (tag == 122) {
         parse_ResolutionRequestInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolutionrequestinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_ResolutionRequestDenialInfo;
        break;
      }

      // optional .Diadoc.Api.Proto.Events.ResolutionRequestDenialInfo ResolutionRequestDenialInfo = 16;
      case 16: {
        if (tag == 130) {
         parse_ResolutionRequestDenialInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolutionrequestdenialinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_NeedReceipt;
        break;
      }

      // optional bool NeedReceipt = 17 [default = false];
      case 17: {
        if (tag == 136) {
         parse_NeedReceipt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needreceipt_)));
          set_has_needreceipt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_PacketId;
        break;
      }

      // optional string PacketId = 18;
      case 18: {
        if (tag == 146) {
         parse_PacketId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packetid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->packetid().data(), this->packetid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "packetid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_IsApprovementSignature;
        break;
      }

      // optional bool IsApprovementSignature = 19 [default = false];
      case 19: {
        if (tag == 152) {
         parse_IsApprovementSignature:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isapprovementsignature_)));
          set_has_isapprovementsignature();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_IsEncryptedContent;
        break;
      }

      // optional bool IsEncryptedContent = 20 [default = false];
      case 20: {
        if (tag == 160) {
         parse_IsEncryptedContent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isencryptedcontent_)));
          set_has_isencryptedcontent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_AttachmentVersion;
        break;
      }

      // optional string AttachmentVersion = 21;
      case 21: {
        if (tag == 170) {
         parse_AttachmentVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attachmentversion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attachmentversion().data(), this->attachmentversion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "attachmentversion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_ResolutionRouteAssignmentInfo;
        break;
      }

      // optional .Diadoc.Api.Proto.Events.ResolutionRouteAssignmentInfo ResolutionRouteAssignmentInfo = 22;
      case 22: {
        if (tag == 178) {
         parse_ResolutionRouteAssignmentInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolutionrouteassignmentinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_ResolutionRouteRemovalInfo;
        break;
      }

      // optional .Diadoc.Api.Proto.Events.ResolutionRouteRemovalInfo ResolutionRouteRemovalInfo = 23;
      case 23: {
        if (tag == 186) {
         parse_ResolutionRouteRemovalInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolutionrouteremovalinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_CancellationInfo;
        break;
      }

      // optional .Diadoc.Api.Proto.Events.CancellationInfo CancellationInfo = 24;
      case 24: {
        if (tag == 194) {
         parse_CancellationInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cancellationinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_Labels;
        break;
      }

      // repeated string Labels = 25;
      case 25: {
        if (tag == 202) {
         parse_Labels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_labels()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->labels(this->labels_size() - 1).data(),
            this->labels(this->labels_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "labels");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_Labels;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Events.Entity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Events.Entity)
  return false;
#undef DO_
}

void Entity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Events.Entity)
  // optional .Diadoc.Api.Proto.Events.EntityType EntityType = 1 [default = UnknownEntityType];
  if (has_entitytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->entitytype(), output);
  }

  // required string EntityId = 2;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entityid().data(), this->entityid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "entityid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->entityid(), output);
  }

  // optional string ParentEntityId = 3;
  if (has_parententityid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parententityid().data(), this->parententityid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parententityid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->parententityid(), output);
  }

  // optional .Diadoc.Api.Proto.Content Content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->content(), output);
  }

  // optional .Diadoc.Api.Proto.Events.AttachmentType AttachmentType = 5 [default = UnknownAttachmentType];
  if (has_attachmenttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->attachmenttype(), output);
  }

  // optional string FileName = 6;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->filename(), output);
  }

  // optional bool NeedRecipientSignature = 7 [default = false];
  if (has_needrecipientsignature()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->needrecipientsignature(), output);
  }

  // optional string SignerBoxId = 8;
  if (has_signerboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signerboxid().data(), this->signerboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "signerboxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->signerboxid(), output);
  }

  // optional string NotDeliveredEventId = 10;
  if (has_notdeliveredeventid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notdeliveredeventid().data(), this->notdeliveredeventid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "notdeliveredeventid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->notdeliveredeventid(), output);
  }

  // optional .Diadoc.Api.Proto.Documents.Document DocumentInfo = 11;
  if (has_documentinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->documentinfo(), output);
  }

  // optional sfixed64 RawCreationDate = 12 [default = 0];
  if (has_rawcreationdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(12, this->rawcreationdate(), output);
  }

  // optional .Diadoc.Api.Proto.Events.ResolutionInfo ResolutionInfo = 13;
  if (has_resolutioninfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->resolutioninfo(), output);
  }

  // optional string SignerDepartmentId = 14;
  if (has_signerdepartmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signerdepartmentid().data(), this->signerdepartmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "signerdepartmentid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->signerdepartmentid(), output);
  }

  // optional .Diadoc.Api.Proto.Events.ResolutionRequestInfo ResolutionRequestInfo = 15;
  if (has_resolutionrequestinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->resolutionrequestinfo(), output);
  }

  // optional .Diadoc.Api.Proto.Events.ResolutionRequestDenialInfo ResolutionRequestDenialInfo = 16;
  if (has_resolutionrequestdenialinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->resolutionrequestdenialinfo(), output);
  }

  // optional bool NeedReceipt = 17 [default = false];
  if (has_needreceipt()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->needreceipt(), output);
  }

  // optional string PacketId = 18;
  if (has_packetid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packetid().data(), this->packetid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packetid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->packetid(), output);
  }

  // optional bool IsApprovementSignature = 19 [default = false];
  if (has_isapprovementsignature()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->isapprovementsignature(), output);
  }

  // optional bool IsEncryptedContent = 20 [default = false];
  if (has_isencryptedcontent()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->isencryptedcontent(), output);
  }

  // optional string AttachmentVersion = 21;
  if (has_attachmentversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attachmentversion().data(), this->attachmentversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attachmentversion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->attachmentversion(), output);
  }

  // optional .Diadoc.Api.Proto.Events.ResolutionRouteAssignmentInfo ResolutionRouteAssignmentInfo = 22;
  if (has_resolutionrouteassignmentinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->resolutionrouteassignmentinfo(), output);
  }

  // optional .Diadoc.Api.Proto.Events.ResolutionRouteRemovalInfo ResolutionRouteRemovalInfo = 23;
  if (has_resolutionrouteremovalinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->resolutionrouteremovalinfo(), output);
  }

  // optional .Diadoc.Api.Proto.Events.CancellationInfo CancellationInfo = 24;
  if (has_cancellationinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->cancellationinfo(), output);
  }

  // repeated string Labels = 25;
  for (int i = 0; i < this->labels_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->labels(i).data(), this->labels(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "labels");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->labels(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Events.Entity)
}

::google::protobuf::uint8* Entity::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Events.Entity)
  // optional .Diadoc.Api.Proto.Events.EntityType EntityType = 1 [default = UnknownEntityType];
  if (has_entitytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->entitytype(), target);
  }

  // required string EntityId = 2;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entityid().data(), this->entityid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "entityid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->entityid(), target);
  }

  // optional string ParentEntityId = 3;
  if (has_parententityid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parententityid().data(), this->parententityid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "parententityid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->parententityid(), target);
  }

  // optional .Diadoc.Api.Proto.Content Content = 4;
  if (has_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->content(), target);
  }

  // optional .Diadoc.Api.Proto.Events.AttachmentType AttachmentType = 5 [default = UnknownAttachmentType];
  if (has_attachmenttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->attachmenttype(), target);
  }

  // optional string FileName = 6;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->filename(), target);
  }

  // optional bool NeedRecipientSignature = 7 [default = false];
  if (has_needrecipientsignature()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->needrecipientsignature(), target);
  }

  // optional string SignerBoxId = 8;
  if (has_signerboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signerboxid().data(), this->signerboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "signerboxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->signerboxid(), target);
  }

  // optional string NotDeliveredEventId = 10;
  if (has_notdeliveredeventid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->notdeliveredeventid().data(), this->notdeliveredeventid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "notdeliveredeventid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->notdeliveredeventid(), target);
  }

  // optional .Diadoc.Api.Proto.Documents.Document DocumentInfo = 11;
  if (has_documentinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->documentinfo(), target);
  }

  // optional sfixed64 RawCreationDate = 12 [default = 0];
  if (has_rawcreationdate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(12, this->rawcreationdate(), target);
  }

  // optional .Diadoc.Api.Proto.Events.ResolutionInfo ResolutionInfo = 13;
  if (has_resolutioninfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->resolutioninfo(), target);
  }

  // optional string SignerDepartmentId = 14;
  if (has_signerdepartmentid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signerdepartmentid().data(), this->signerdepartmentid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "signerdepartmentid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->signerdepartmentid(), target);
  }

  // optional .Diadoc.Api.Proto.Events.ResolutionRequestInfo ResolutionRequestInfo = 15;
  if (has_resolutionrequestinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->resolutionrequestinfo(), target);
  }

  // optional .Diadoc.Api.Proto.Events.ResolutionRequestDenialInfo ResolutionRequestDenialInfo = 16;
  if (has_resolutionrequestdenialinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->resolutionrequestdenialinfo(), target);
  }

  // optional bool NeedReceipt = 17 [default = false];
  if (has_needreceipt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->needreceipt(), target);
  }

  // optional string PacketId = 18;
  if (has_packetid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packetid().data(), this->packetid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "packetid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->packetid(), target);
  }

  // optional bool IsApprovementSignature = 19 [default = false];
  if (has_isapprovementsignature()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->isapprovementsignature(), target);
  }

  // optional bool IsEncryptedContent = 20 [default = false];
  if (has_isencryptedcontent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->isencryptedcontent(), target);
  }

  // optional string AttachmentVersion = 21;
  if (has_attachmentversion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attachmentversion().data(), this->attachmentversion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "attachmentversion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->attachmentversion(), target);
  }

  // optional .Diadoc.Api.Proto.Events.ResolutionRouteAssignmentInfo ResolutionRouteAssignmentInfo = 22;
  if (has_resolutionrouteassignmentinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->resolutionrouteassignmentinfo(), target);
  }

  // optional .Diadoc.Api.Proto.Events.ResolutionRouteRemovalInfo ResolutionRouteRemovalInfo = 23;
  if (has_resolutionrouteremovalinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->resolutionrouteremovalinfo(), target);
  }

  // optional .Diadoc.Api.Proto.Events.CancellationInfo CancellationInfo = 24;
  if (has_cancellationinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->cancellationinfo(), target);
  }

  // repeated string Labels = 25;
  for (int i = 0; i < this->labels_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->labels(i).data(), this->labels(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "labels");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(25, this->labels(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Events.Entity)
  return target;
}

int Entity::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Diadoc.Api.Proto.Events.EntityType EntityType = 1 [default = UnknownEntityType];
    if (has_entitytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->entitytype());
    }

    // required string EntityId = 2;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entityid());
    }

    // optional string ParentEntityId = 3;
    if (has_parententityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parententityid());
    }

    // optional .Diadoc.Api.Proto.Content Content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->content());
    }

    // optional .Diadoc.Api.Proto.Events.AttachmentType AttachmentType = 5 [default = UnknownAttachmentType];
    if (has_attachmenttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->attachmenttype());
    }

    // optional string FileName = 6;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bool NeedRecipientSignature = 7 [default = false];
    if (has_needrecipientsignature()) {
      total_size += 1 + 1;
    }

    // optional string SignerBoxId = 8;
    if (has_signerboxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signerboxid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string NotDeliveredEventId = 10;
    if (has_notdeliveredeventid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->notdeliveredeventid());
    }

    // optional .Diadoc.Api.Proto.Documents.Document DocumentInfo = 11;
    if (has_documentinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->documentinfo());
    }

    // optional sfixed64 RawCreationDate = 12 [default = 0];
    if (has_rawcreationdate()) {
      total_size += 1 + 8;
    }

    // optional .Diadoc.Api.Proto.Events.ResolutionInfo ResolutionInfo = 13;
    if (has_resolutioninfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resolutioninfo());
    }

    // optional string SignerDepartmentId = 14;
    if (has_signerdepartmentid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signerdepartmentid());
    }

    // optional .Diadoc.Api.Proto.Events.ResolutionRequestInfo ResolutionRequestInfo = 15;
    if (has_resolutionrequestinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resolutionrequestinfo());
    }

    // optional .Diadoc.Api.Proto.Events.ResolutionRequestDenialInfo ResolutionRequestDenialInfo = 16;
    if (has_resolutionrequestdenialinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resolutionrequestdenialinfo());
    }

    // optional bool NeedReceipt = 17 [default = false];
    if (has_needreceipt()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string PacketId = 18;
    if (has_packetid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->packetid());
    }

    // optional bool IsApprovementSignature = 19 [default = false];
    if (has_isapprovementsignature()) {
      total_size += 2 + 1;
    }

    // optional bool IsEncryptedContent = 20 [default = false];
    if (has_isencryptedcontent()) {
      total_size += 2 + 1;
    }

    // optional string AttachmentVersion = 21;
    if (has_attachmentversion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attachmentversion());
    }

    // optional .Diadoc.Api.Proto.Events.ResolutionRouteAssignmentInfo ResolutionRouteAssignmentInfo = 22;
    if (has_resolutionrouteassignmentinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resolutionrouteassignmentinfo());
    }

    // optional .Diadoc.Api.Proto.Events.ResolutionRouteRemovalInfo ResolutionRouteRemovalInfo = 23;
    if (has_resolutionrouteremovalinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resolutionrouteremovalinfo());
    }

    // optional .Diadoc.Api.Proto.Events.CancellationInfo CancellationInfo = 24;
    if (has_cancellationinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cancellationinfo());
    }

  }
  // repeated string Labels = 25;
  total_size += 2 * this->labels_size();
  for (int i = 0; i < this->labels_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->labels(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Entity::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Entity* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Entity*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Entity::MergeFrom(const Entity& from) {
  GOOGLE_CHECK_NE(&from, this);
  labels_.MergeFrom(from.labels_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entitytype()) {
      set_entitytype(from.entitytype());
    }
    if (from.has_entityid()) {
      set_entityid(from.entityid());
    }
    if (from.has_parententityid()) {
      set_parententityid(from.parententityid());
    }
    if (from.has_content()) {
      mutable_content()->::Diadoc::Api::Proto::Content::MergeFrom(from.content());
    }
    if (from.has_attachmenttype()) {
      set_attachmenttype(from.attachmenttype());
    }
    if (from.has_filename()) {
      set_filename(from.filename());
    }
    if (from.has_needrecipientsignature()) {
      set_needrecipientsignature(from.needrecipientsignature());
    }
    if (from.has_signerboxid()) {
      set_signerboxid(from.signerboxid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_notdeliveredeventid()) {
      set_notdeliveredeventid(from.notdeliveredeventid());
    }
    if (from.has_documentinfo()) {
      mutable_documentinfo()->::Diadoc::Api::Proto::Documents::Document::MergeFrom(from.documentinfo());
    }
    if (from.has_rawcreationdate()) {
      set_rawcreationdate(from.rawcreationdate());
    }
    if (from.has_resolutioninfo()) {
      mutable_resolutioninfo()->::Diadoc::Api::Proto::Events::ResolutionInfo::MergeFrom(from.resolutioninfo());
    }
    if (from.has_signerdepartmentid()) {
      set_signerdepartmentid(from.signerdepartmentid());
    }
    if (from.has_resolutionrequestinfo()) {
      mutable_resolutionrequestinfo()->::Diadoc::Api::Proto::Events::ResolutionRequestInfo::MergeFrom(from.resolutionrequestinfo());
    }
    if (from.has_resolutionrequestdenialinfo()) {
      mutable_resolutionrequestdenialinfo()->::Diadoc::Api::Proto::Events::ResolutionRequestDenialInfo::MergeFrom(from.resolutionrequestdenialinfo());
    }
    if (from.has_needreceipt()) {
      set_needreceipt(from.needreceipt());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_packetid()) {
      set_packetid(from.packetid());
    }
    if (from.has_isapprovementsignature()) {
      set_isapprovementsignature(from.isapprovementsignature());
    }
    if (from.has_isencryptedcontent()) {
      set_isencryptedcontent(from.isencryptedcontent());
    }
    if (from.has_attachmentversion()) {
      set_attachmentversion(from.attachmentversion());
    }
    if (from.has_resolutionrouteassignmentinfo()) {
      mutable_resolutionrouteassignmentinfo()->::Diadoc::Api::Proto::Events::ResolutionRouteAssignmentInfo::MergeFrom(from.resolutionrouteassignmentinfo());
    }
    if (from.has_resolutionrouteremovalinfo()) {
      mutable_resolutionrouteremovalinfo()->::Diadoc::Api::Proto::Events::ResolutionRouteRemovalInfo::MergeFrom(from.resolutionrouteremovalinfo());
    }
    if (from.has_cancellationinfo()) {
      mutable_cancellationinfo()->::Diadoc::Api::Proto::Events::CancellationInfo::MergeFrom(from.cancellationinfo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Entity::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Entity::CopyFrom(const Entity& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Entity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  if (has_content()) {
    if (!this->content().IsInitialized()) return false;
  }
  if (has_documentinfo()) {
    if (!this->documentinfo().IsInitialized()) return false;
  }
  if (has_resolutioninfo()) {
    if (!this->resolutioninfo().IsInitialized()) return false;
  }
  if (has_resolutionrequestinfo()) {
    if (!this->resolutionrequestinfo().IsInitialized()) return false;
  }
  if (has_resolutionrequestdenialinfo()) {
    if (!this->resolutionrequestdenialinfo().IsInitialized()) return false;
  }
  if (has_resolutionrouteassignmentinfo()) {
    if (!this->resolutionrouteassignmentinfo().IsInitialized()) return false;
  }
  if (has_resolutionrouteremovalinfo()) {
    if (!this->resolutionrouteremovalinfo().IsInitialized()) return false;
  }
  if (has_cancellationinfo()) {
    if (!this->cancellationinfo().IsInitialized()) return false;
  }
  return true;
}

void Entity::Swap(Entity* other) {
  if (other != this) {
    std::swap(entitytype_, other->entitytype_);
    std::swap(entityid_, other->entityid_);
    std::swap(parententityid_, other->parententityid_);
    std::swap(content_, other->content_);
    std::swap(attachmenttype_, other->attachmenttype_);
    std::swap(filename_, other->filename_);
    std::swap(needrecipientsignature_, other->needrecipientsignature_);
    std::swap(signerboxid_, other->signerboxid_);
    std::swap(notdeliveredeventid_, other->notdeliveredeventid_);
    std::swap(documentinfo_, other->documentinfo_);
    std::swap(rawcreationdate_, other->rawcreationdate_);
    std::swap(resolutioninfo_, other->resolutioninfo_);
    std::swap(signerdepartmentid_, other->signerdepartmentid_);
    std::swap(resolutionrequestinfo_, other->resolutionrequestinfo_);
    std::swap(resolutionrequestdenialinfo_, other->resolutionrequestdenialinfo_);
    std::swap(needreceipt_, other->needreceipt_);
    std::swap(packetid_, other->packetid_);
    std::swap(isapprovementsignature_, other->isapprovementsignature_);
    std::swap(isencryptedcontent_, other->isencryptedcontent_);
    std::swap(attachmentversion_, other->attachmentversion_);
    std::swap(resolutionrouteassignmentinfo_, other->resolutionrouteassignmentinfo_);
    std::swap(resolutionrouteremovalinfo_, other->resolutionrouteremovalinfo_);
    std::swap(cancellationinfo_, other->cancellationinfo_);
    labels_.Swap(&other->labels_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Entity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Entity_descriptor_;
  metadata.reflection = Entity_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EntityPatch::kEntityIdFieldNumber;
const int EntityPatch::kDocumentIsDeletedFieldNumber;
const int EntityPatch::kMovedToDepartmentFieldNumber;
const int EntityPatch::kDocumentIsRestoredFieldNumber;
const int EntityPatch::kContentIsPatchedFieldNumber;
const int EntityPatch::kForwardedToBoxIdFieldNumber;
#endif  // !_MSC_VER

EntityPatch::EntityPatch()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Diadoc.Api.Proto.Events.EntityPatch)
}

void EntityPatch::InitAsDefaultInstance() {
}

EntityPatch::EntityPatch(const EntityPatch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Diadoc.Api.Proto.Events.EntityPatch)
}

void EntityPatch::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  entityid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentisdeleted_ = false;
  movedtodepartment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  documentisrestored_ = false;
  contentispatched_ = false;
  forwardedtoboxid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EntityPatch::~EntityPatch() {
  // @@protoc_insertion_point(destructor:Diadoc.Api.Proto.Events.EntityPatch)
  SharedDtor();
}

void EntityPatch::SharedDtor() {
  if (entityid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete entityid_;
  }
  if (movedtodepartment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete movedtodepartment_;
  }
  if (forwardedtoboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete forwardedtoboxid_;
  }
  if (this != default_instance_) {
  }
}

void EntityPatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityPatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityPatch_descriptor_;
}

const EntityPatch& EntityPatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Events_2fDiadocMessage_2dGetApi_2eproto();
  return *default_instance_;
}

EntityPatch* EntityPatch::default_instance_ = NULL;

EntityPatch* EntityPatch::New() const {
  return new EntityPatch;
}

void EntityPatch::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EntityPatch*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(documentisdeleted_, contentispatched_);
    if (has_entityid()) {
      if (entityid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        entityid_->clear();
      }
    }
    if (has_movedtodepartment()) {
      if (movedtodepartment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        movedtodepartment_->clear();
      }
    }
    if (has_forwardedtoboxid()) {
      if (forwardedtoboxid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        forwardedtoboxid_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EntityPatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Diadoc.Api.Proto.Events.EntityPatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string EntityId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entityid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->entityid().data(), this->entityid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "entityid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_DocumentIsDeleted;
        break;
      }

      // optional bool DocumentIsDeleted = 2 [default = false];
      case 2: {
        if (tag == 16) {
         parse_DocumentIsDeleted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &documentisdeleted_)));
          set_has_documentisdeleted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_MovedToDepartment;
        break;
      }

      // optional string MovedToDepartment = 3;
      case 3: {
        if (tag == 26) {
         parse_MovedToDepartment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_movedtodepartment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->movedtodepartment().data(), this->movedtodepartment().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "movedtodepartment");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_DocumentIsRestored;
        break;
      }

      // optional bool DocumentIsRestored = 4 [default = false];
      case 4: {
        if (tag == 32) {
         parse_DocumentIsRestored:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &documentisrestored_)));
          set_has_documentisrestored();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ContentIsPatched;
        break;
      }

      // optional bool ContentIsPatched = 5 [default = false];
      case 5: {
        if (tag == 40) {
         parse_ContentIsPatched:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &contentispatched_)));
          set_has_contentispatched();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ForwardedToBoxId;
        break;
      }

      // optional string ForwardedToBoxId = 6;
      case 6: {
        if (tag == 50) {
         parse_ForwardedToBoxId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_forwardedtoboxid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->forwardedtoboxid().data(), this->forwardedtoboxid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "forwardedtoboxid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Diadoc.Api.Proto.Events.EntityPatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Diadoc.Api.Proto.Events.EntityPatch)
  return false;
#undef DO_
}

void EntityPatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Diadoc.Api.Proto.Events.EntityPatch)
  // required string EntityId = 1;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entityid().data(), this->entityid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "entityid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->entityid(), output);
  }

  // optional bool DocumentIsDeleted = 2 [default = false];
  if (has_documentisdeleted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->documentisdeleted(), output);
  }

  // optional string MovedToDepartment = 3;
  if (has_movedtodepartment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->movedtodepartment().data(), this->movedtodepartment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "movedtodepartment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->movedtodepartment(), output);
  }

  // optional bool DocumentIsRestored = 4 [default = false];
  if (has_documentisrestored()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->documentisrestored(), output);
  }

  // optional bool ContentIsPatched = 5 [default = false];
  if (has_contentispatched()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->contentispatched(), output);
  }

  // optional string ForwardedToBoxId = 6;
  if (has_forwardedtoboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->forwardedtoboxid().data(), this->forwardedtoboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "forwardedtoboxid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->forwardedtoboxid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Diadoc.Api.Proto.Events.EntityPatch)
}

::google::protobuf::uint8* EntityPatch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Diadoc.Api.Proto.Events.EntityPatch)
  // required string EntityId = 1;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entityid().data(), this->entityid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "entityid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->entityid(), target);
  }

  // optional bool DocumentIsDeleted = 2 [default = false];
  if (has_documentisdeleted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->documentisdeleted(), target);
  }

  // optional string MovedToDepartment = 3;
  if (has_movedtodepartment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->movedtodepartment().data(), this->movedtodepartment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "movedtodepartment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->movedtodepartment(), target);
  }

  // optional bool DocumentIsRestored = 4 [default = false];
  if (has_documentisrestored()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->documentisrestored(), target);
  }

  // optional bool ContentIsPatched = 5 [default = false];
  if (has_contentispatched()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->contentispatched(), target);
  }

  // optional string ForwardedToBoxId = 6;
  if (has_forwardedtoboxid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->forwardedtoboxid().data(), this->forwardedtoboxid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "forwardedtoboxid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->forwardedtoboxid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Diadoc.Api.Proto.Events.EntityPatch)
  return target;
}

int EntityPatch::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string EntityId = 1;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entityid());
    }

    // optional bool DocumentIsDeleted = 2 [default = false];
    if (has_documentisdeleted()) {
      total_size += 1 + 1;
    }

    // optional string MovedToDepartment = 3;
    if (has_movedtodepartment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->movedtodepartment());
    }

    // optional bool DocumentIsRestored = 4 [default = false];
    if (has_documentisrestored()) {
      total_size += 1 + 1;
    }

    // optional bool ContentIsPatched = 5 [default = false];
    if (has_contentispatched()) {
      total_size += 1 + 1;
    }

    // optional string ForwardedToBoxId = 6;
    if (has_forwardedtoboxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->forwardedtoboxid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityPatch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EntityPatch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EntityPatch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EntityPatch::MergeFrom(const EntityPatch& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entityid()) {
      set_entityid(from.entityid());
    }
    if (from.has_documentisdeleted()) {
      set_documentisdeleted(from.documentisdeleted());
    }
    if (from.has_movedtodepartment()) {
      set_movedtodepartment(from.movedtodepartment());
    }
    if (from.has_documentisrestored()) {
      set_documentisrestored(from.documentisrestored());
    }
    if (from.has_contentispatched()) {
      set_contentispatched(from.contentispatched());
    }
    if (from.has_forwardedtoboxid()) {
      set_forwardedtoboxid(from.forwardedtoboxid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EntityPatch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityPatch::CopyFrom(const EntityPatch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityPatch::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void EntityPatch::Swap(EntityPatch* other) {
  if (other != this) {
    std::swap(entityid_, other->entityid_);
    std::swap(documentisdeleted_, other->documentisdeleted_);
    std::swap(movedtodepartment_, other->movedtodepartment_);
    std::swap(documentisrestored_, other->documentisrestored_);
    std::swap(contentispatched_, other->contentispatched_);
    std::swap(forwardedtoboxid_, other->forwardedtoboxid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EntityPatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityPatch_descriptor_;
  metadata.reflection = EntityPatch_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Events
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
